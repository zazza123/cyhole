{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"cyhole <p> Documentation: https://zazza123.github.io/cyhole </p> <p>cyhole is designed to help python's developers to interact to the most popular external API services in crypto world and create automation processes.</p> <p>Each external API integrated into the library is referred to as an Interaction, providing developers with a comprehensive toolkit for retrieving real-time market data, historical trends, account information, and more.</p> <p>Key Features</p> <ul> <li>Centralized Access: access multiple cryptocurrency APIs through a single interface.</li> <li>Comprehensive Coverage: explore a wide range of cryptocurrency data, including market prices, trading volumes, and blockchain statistics.</li> <li>Simplified Development: accelerate the development process by leveraging pre-built API integrations.</li> <li>Flexible Integration: seamlessly incorporate cyhole into Python projects, whether building automated trading algorithms or monitoring cryptocurrency portfolios.</li> </ul> <p>The installation is performed via <code>pip</code> by running:</p> <pre><code>pip install cyhole\n</code></pre>"},{"location":"index.html#interactions","title":"Interactions","text":"<p>In cyhole, Interactions serve as the fundamental components, akin to the building blocks of a scientific model. Each interaction represents a distinct cryptocurrency API, providing developers with access to essential data and metrics.</p> <p>The current supported external/interactions APIs are:</p> Site Path Connector birdeye.so <code>cyhole.birdeye</code> <code>Birdeye</code> jup.ag <code>cyhole.jupiter</code> <code>Jupiter</code> solana.fm <code>cyhole.solana_fm</code> <code>SolanaFM</code> solscan.io <code>cyhole.solscan</code> <code>SolscanV1</code>, <code>SolscanV2</code>"},{"location":"development/index.html","title":"- Development","text":"<p>This section is intended to all developers who want to contribute to the project by:</p> <ul> <li>fixing one or more bugs</li> <li>improving the library</li> <li>creating a new <code>Interaction</code></li> </ul> <p>Depending on the scope, different actions should be taken into consideration.</p> <p>Since you are reading this section, it could mean that you want to contribute to the project by improving the library, for this reason I want to say... Thank You!</p> <ul> <li> <p> New <code>Interaction</code></p> <p>Extend the library by implementing an <code>Interaction</code>.</p> <p> Reference</p> </li> <li> <p> Bug &amp; Improvements</p> <p>Correct a bug or improve the library by proposing new ideas.</p> <p> Reference</p> </li> <li> <p> Testing</p> <p>Understand how the tests are managed inside the library.</p> <p> Reference</p> </li> <li> <p> Pull Requests</p> <p>Prepare your code to be merged.</p> <p> Reference</p> </li> </ul>"},{"location":"development/index.html#latest-library-version","title":"Latest Library Version","text":"<p>To use locally the latest version of the library not yet released:</p> <ul> <li>clone or fork the repository</li> <li>activate the <code>python</code> environment you want to use</li> <li>navigate to the <code>root</code> folder of the library</li> <li>run the command <code>pip install -e .</code></li> </ul> <p>By using these commands, you will have the latest <code>cyhole</code> version of the library on the desired environment.</p> <p>Note</p> <p>The latest version is under development, and for this reason it could be unstable or having bugs.</p>"},{"location":"development/bugs-improvements.html","title":"Bugs &amp; Improvements","text":"<p>Warning</p> <p> - Section under construction.</p>"},{"location":"development/new-interaction.html","title":"New <code>Interaction</code>","text":"<p>This section is dedicated to all the people who wants to create a new <code>Interaction</code>. Since these objects are the building blocks of the library, it is important to define a set of rules to follow to standardise their creation.</p> <p>First, it is highly suggested to read the introduction on what an <code>Interaction</code> is, and to have a look on the Core section.</p> <p>Second, fork the repository and create a dedicated branch with the corresponding pattern name: <code>{name}-new-interaction</code>, where <code>{name}</code> should be replaced with the name of the new interaction.</p>"},{"location":"development/new-interaction.html#folders-organisation","title":"Folders Organisation","text":"<p>This section is dedicated to explain the folders' organisation inside the library (including tests and documentation).</p> <ul> <li>Library: inside <code>src/cyhole</code> it is necessary to create a new folder called <code>{name}</code> that will have all the required files to manage the new interaction.</li> <li>Tests: inside <code>tests/resources</code> it is necessary to create a new folder called <code>{name}</code> that will store the JSON files with the responses of the API endpoints used by the mocker during the tests executions.</li> <li>Documentation: inside <code>docs/interactions</code> it is necessary to create a new folder called <code>{name}</code> that will provide all the Markdown files necessary for the documentations.</li> </ul> <p>The structure will look similar to this:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u251c\u2500 interactions/\n\u2502  \u2502  \u251c\u2500 {name}/\n\u2502  \u2502  \u2502  \u2514\u2500 ...\n\u2502  \u2502  \u2514\u2500 ...\n\u2502  \u2514\u2500 ...\n\u251c\u2500 src/\n\u2502  \u251c\u2500 cyhole/\n\u2502  \u2502  \u251c\u2500 {name}/\n\u2502  \u2502  \u2502  \u2514\u2500 ...\n\u2502  \u2502  \u2514\u2500 ...\n\u2502  \u2514\u2500 ...\n\u251c\u2500 tests/\n\u2502  \u2502  \u2514\u2500 resources/\n\u2502  \u2502     \u251c\u2500 {name}/\n\u2502  \u2502     \u2502  \u2514\u2500 ...\n\u2502  \u2502     \u2514\u2500 ...\n\u2502  \u251c\u2500 ...\n\u2514\u2500 ...\n</code></pre>"},{"location":"development/new-interaction.html#core","title":"Core","text":"<p>This section is dedicated to explain the rules to follow during the creation of a new <code>Interaction</code>.</p> <p>Assumptions</p> <ul> <li>The actual code must be available inside the folder <code>src/cyhole/{name}</code>.</li> <li>Inside the code's folder there must be the following files:<ul> <li><code>__init__.py</code>: the actual entry point in the library.</li> <li><code>client.py</code>: API client classes.</li> <li><code>exception.py</code>: dedicated exceptions.</li> <li><code>interaction.py</code>: interaction class.</li> <li><code>param.py</code>: possible parameters required by the endopints.</li> <li><code>schema.py</code>: response and body schemas to use in the endpoints.</li> </ul> </li> </ul> <p>We now proceed to further analyse every required file.</p>"},{"location":"development/new-interaction.html#__init__py","title":"<code>__init__.py</code>","text":"<p>This file should recall only the new <code>Interaction</code> class from the <code>interaction.py</code> file.</p> __init__.py<pre><code>from ..{name}.interaction import {Name}\n\n__all__ = [\n    \"{Name}\"\n]\n</code></pre>"},{"location":"development/new-interaction.html#interactionpy","title":"<code>interaction.py</code>","text":"<p>This is the most important file because the new <code>Interaction</code>'s class is defined here.</p> <p>The box below provides all the assumptions to follow during the creation of a new <code>Interaction</code>.</p> <p>Assumptions</p> <ul> <li>The <code>Interaction</code> class must inherits from <code>cyhole.core.interaction.Interaction</code> class.</li> <li>The name of the interaction should refers univocally to the external API site; e.g. it is usually the site name.</li> <li>The attributes <code>client</code> and <code>async_client</code> are initiated inside the <code>__init__</code> method and defined in <code>client.py</code> file.</li> <li> <p>Every endpoint is identified by one private method with the following assumptions:</p> <ul> <li>The name should recall univocally the endpoint and the type of the request. The naming convention is <code>_{request_type}_{endpoint_name}</code>, where <code>{request_type}</code> reflects the request's type (get, post, ...) and <code>{endpoint_name}</code> recalls the name of the original endpoint.</li> <li>The first parameter is called <code>sync</code> of type <code>bool</code> and is used to define the synchronous/asynchronous behavior of the method.</li> <li>The output/input schema of an endpoint is defined by a <code>pydantic.BaseModel</code> inside the <code>schema.py</code> file.</li> <li>The naming convention of an output/input schema should recall univocally the corresponding endpoint. The naming convention is <code>{request_type}{endpoint_name}Response/Body</code>, where <code>{request_type}</code> and <code>{endpoint_name}</code> recalls the name of the original endpoint, and they are concatenated using the camel case syntax.</li> <li>To manage the <code>sync</code> and <code>async</code> behavior, the output of the method must be of type <code>{output_schema_response} | Coroutine[None, None, {output_schema_response}]</code>, where <code>{output_schema_response}</code> is the output schema.</li> <li> <p>Above the method definition is required to include two <code>@overload</code> definitions to specify the output type according to the value of <code>sync</code> parameter:</p> <ul> <li><code>True</code>: the output should be <code>{output_schema_response}</code>.</li> <li><code>False</code>: the output should be <code>Coroutine[None, None, {output_schema_response}]</code>.</li> </ul> </li> </ul> </li> </ul>"},{"location":"development/new-interaction.html#clientpy","title":"<code>client.py</code>","text":"<p>In this file are defined the Clients used by the <code>Interaction</code> to perform the actual calls to the external API endpoints.</p> <p>Assumptions</p> <ul> <li> <p>An <code>Interaction</code> requires two Clients:</p> <ul> <li>The Client in charge to perform the synchronous logic must inherits from <code>cyhole.core.client.APIClient</code>, and its name should follow the naming convention <code>{name}Client</code>, where <code>{name}</code> is the name of the new interaction.</li> <li>The Client in charge to perform the asynchronous logic must inherits from <code>cyhole.core.client.AsyncAPIClient</code>, and its name should follow the naming convention <code>{name}AsyncClient</code>, where <code>{name}</code> is the name of the new interaction.</li> </ul> </li> <li> <p>As described in the previous section, every endpoint is identified inside the <code>Interaction</code> class by a private function. Since the clients are responsable for the actual interaction with the external API, it is required to implement on both clients, a public version of the method; one for <code>sync</code> logic and one for <code>async</code>. The method's name should be the same for both clients, and it must be equals the private method's name without the <code>_</code> prefix. Hence, we should obtain the following situation:</p> <ul> <li><code>_get_example</code> method defined in the <code>Interaction</code> class with the actual endpoint's logic.</li> <li><code>get_example</code> method defined inside the synchronous client and recalling the <code>_get_example</code> method with <code>sync</code> equals <code>True</code>.</li> <li><code>async get_example</code> method defined inside the asynchronous client and recalling the <code>_get_example</code> method with <code>sync</code> equals <code>False</code>.</li> </ul> </li> </ul>"},{"location":"development/new-interaction.html#schemapy","title":"<code>schema.py</code>","text":"<p>Inside this file are defined all the classes used to standardise the input/output schemas required by all the implemented enpoints.</p> <p>Assumptions</p> <ul> <li>Every schema must inherits from <code>pydantic.BaseModel</code> class.</li> <li>Every schema and sub-schema name must recall the corresponding endpoint. The naming convention to use is <code>{endpoint_method_name}{type}</code>, where the <code>{endpoint_method_name}</code> is the name of the endpoint function using the camel-case syntax, and <code>{type}</code> depends on the situation:<ul> <li><code>Response</code>: if the schema refers to the actual response of the endpoint.</li> <li><code>Body</code>: if the schema refers to the input body required by a POST endpoint.</li> <li>Other names can be used for intermediate schemas.</li> </ul> </li> </ul>"},{"location":"development/new-interaction.html#parampy","title":"<code>param.py</code>","text":"<p>It could happen that the external endpoints require parameters (<code>params</code>) coming from specific value lists. To help as much as possible the users and avoid wrong values, this file stores all the <code>Enum</code> classes identifing the <code>params</code> with value lists.</p> <p>Assumptions</p> <ul> <li>Every param must inherits from <code>cyhole.core.param.CyholeParam</code> class.</li> <li>The naming convention must be <code>{name}{param_name}</code>, where <code>{name}</code> is the name of the new interaction, and <code>{param_name}</code> a set of words that identify the param univocally.</li> </ul>"},{"location":"development/new-interaction.html#exceptionpy","title":"<code>exception.py</code>","text":"<p>All the exceptions dedicated to this extension are defined inside this file.</p> <p>Assumptions</p> <ul> <li>There should be a general <code>Exception</code> extension specific. This exception must inherits from <code>cyhole.core.exception.CyholeException</code>, and its name should follow the naming convention <code>{name}Exception</code>, where <code>{name}</code> is the name of the new interaction.</li> <li>All other exceptions must inherits from the <code>{name}Exception</code> class.</li> </ul>"},{"location":"development/new-interaction.html#tests","title":"Tests","text":"<p>The implementation of proper tests is crucial for the maintenance of the library, for this reason this section describes the test's management for a new <code>Interaction</code>. It is also suggested to check Testing chapter for more details on test's management.</p> <p>Assumptions</p> <ul> <li>All the tests must be available in a file called <code>test_{name}.py</code> inside <code>tests</code> folder, where <code>{name}</code> is the name of the new interaction.</li> <li>Every endpoint must have at least one basic test to ensure the response schema consistency.</li> <li>Every test that call an endpoint must be available for both synchronous (test's name ends with <code>_sync</code>) and asynchronous (test's name ends with <code>_async</code>) logic.</li> <li>The mock responses must be available inside the <code>tests/resources/{name}</code> folder.</li> <li>Every endpoint must have at least one mock response JSON file, and the naming convention is <code>{endpoint_method_name}_{info}.json</code>, where the <code>{endpoint_method_name}</code> is the name of the endpoint function using the camel-case syntax, and <code>{info}</code> provides additional information to the test.</li> <li>The test's configuration (<code>tests/config.py</code>) must be extended to manage at least <code>mock_response</code> and <code>mock_folder</code> variables, and the corresponding <code>tets.default.ini</code> configuration must be updated as well.</li> <li>Every test involving a call to an endopint and checking the respoonse must implement the <code>mocker</code> functionlity to ensure the test's execution also in offline mode.</li> </ul>"},{"location":"development/new-interaction.html#documentation","title":"Documentation","text":"<p>As a final step in the implementation of a new <code>Interaction</code>, it is required to create the proper documentation to ensure its usability.</p> <p>The default documentation structure is described below:</p> <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u251c\u2500 interactions/\n\u2502  \u2502  \u251c\u2500 {name}/\n\u2502  \u2502  \u2502  \u251c\u2500 client.md\n\u2502  \u2502  \u2502  \u251c\u2500 exception.md\n\u2502  \u2502  \u2502  \u251c\u2500 index.md\n\u2502  \u2502  \u2502  \u251c\u2500 interaction.md\n\u2502  \u2502  \u2502  \u251c\u2500 param.md\n\u2502  \u2502  \u2502  \u2514\u2500 schema.md\n\u2502  \u2502  \u2514\u2500 ...\n\u2502  \u2514\u2500 ...\n\u2514\u2500 ...\n</code></pre> <p>where:</p> <ul> <li><code>client.md</code>: this file is entitled Client, and recalls the source code of <code>client.py</code> file.</li> <li><code>exception.md</code>: this file is entitled Exceptions, and recalls the source code of <code>exception.py</code> file.</li> <li><code>index.md</code>: this file is used to introduce the new <code>Interaction</code> by providing a description, some examples and the links to the other sections.</li> <li><code>interaction.md</code>: this file is entitled Interaction, and recalls the source code of <code>__init__.py</code> file.</li> <li><code>param.md</code>: this file is entitled Parameters, and recalls the source code of <code>param.py</code> file.</li> <li><code>schema.md</code>: this file is entitled Schema, and recalls the source code of <code>schema.py</code> file.</li> </ul> <p>Assumptions</p> <ul> <li>The above structure must be always available, and can be integrated with additional chapters and sections if required.</li> <li>To ensure the correct visualisation of the new section, it is also necessary to include them inside the <code>mkdocs.yml</code> file in <code>nav.Interactions</code> list.</li> </ul>"},{"location":"development/new-interaction.html#example","title":"Example","text":"<p>Since the best way to understand a topic is through examples, in the following part we will provide all the previous sections contextualised in the situation of a hypothetical <code>Interaction</code> for a site called sun.net with only one API endpoint of type GET <code>sun.net/prices</code>.</p> <ul> <li>The GitHub brench will be called <code>sun-new-interaction</code>.</li> <li>The main class will be <code>Sun</code> inside <code>cyhole.sun.interaction</code>.</li> <li>The new brench will have the following new folders and files (highlighted):     <pre><code>.\n\u251c\u2500 docs/\n\u2502  \u251c\u2500 interactions/\n\u2502  \u2502  \u251c\u2500 ...\n\u2502  \u2502  \u251c\u2500 sun/\n\u2502  \u2502  \u2502  \u251c\u2500 client.md\n\u2502  \u2502  \u2502  \u251c\u2500 exception.md\n\u2502  \u2502  \u2502  \u251c\u2500 index.md\n\u2502  \u2502  \u2502  \u251c\u2500 interaction.md\n\u2502  \u2502  \u2502  \u251c\u2500 param.md\n\u2502  \u2502  \u2502  \u2514\u2500 schema.md\n\u2502  \u2502  \u2514\u2500 index.md\n\u2502  \u2514\u2500 ...\n\u251c\u2500 src/\n\u2502  \u251c\u2500 cyhole/\n\u2502  \u2502  \u251c\u2500 sun/\n\u2502  \u2502  \u2502  \u251c\u2500 __init__.py\n\u2502  \u2502  \u2502  \u251c\u2500 client.py\n\u2502  \u2502  \u2502  \u251c\u2500 exception.py\n\u2502  \u2502  \u2502  \u251c\u2500 interaction.py\n\u2502  \u2502  \u2502  \u251c\u2500 param.py\n\u2502  \u2502  \u2502  \u2514\u2500 schema.py\n\u2502  \u2502  \u2514\u2500 __init__.py\n\u2502  \u2514\u2500 requirements.txt\n\u251c\u2500 tests/\n\u2502  \u2502  \u2514\u2500 resources/\n\u2502  \u2502     \u251c\u2500 sun/\n\u2502  \u2502     \u2502  \u2514\u2500 get_price.json\n\u2502  \u2502     \u2514\u2500 ...\n\u2502  \u251c\u2500 ...\n\u2502  \u2514\u2500 test_sun.py\n\u2514\u2500 mkdocs.yml\n</code></pre></li> </ul> <p>In more details, we are going to have the core of the extension defined inside the <code>sun/interaction.py</code> with the <code>Sun</code> class.</p> interaction.py<pre><code>from ..core.param import RequestType\nfrom ..core.interaction import Interaction\nfrom ..sun.client import SunClient, SunAsyncClient\nfrom ..sun.schema import GetPriceResponse\n\nclass Sun(Interaction):\n\"\"\"\n    Class used to connect [Sun](https://sun.net) API.\n\"\"\"\n\n    def __init__(self, headers: Any | None = None) -&gt; None:\n        super().__init__(headers)\n\n        # clients\n        self.client = SunClient(self)\n        self.async_client = SunAsyncClient(self)\n\n        # API urls\n        self.url_api = \"https://sun.net/\"\n        return\n\n    @overload\n    def _get_price(self, sync: Literal[True]) -&gt; GetPriceResponse: ...\n\n    @overload\n    def _get_price(self, sync: Literal[False]) -&gt; Coroutine[None, None, GetPriceResponse]: ...\n\n    def _get_price(self, sync: bool) -&gt; GetPriceResponse | Coroutine[None, None, GetPriceResponse]:\n        \"\"\"\n            This function refers to the **Price** API endpoint.\n\n            Returns:\n                tokens' prices.\n        \"\"\"\n        # set params\n        url = self.url_api + \"prices\"\n\n        # execute request\n        if sync:\n            content_raw = self.client.api(RequestType.GET.value, self.url_api_price)\n            return GetPriceResponse(**content_raw.json())\n        else:\n            async def async_request():\n                content_raw = await self.async_client.api(RequestType.GET.value, self.url_api_price)\n                return GetPriceResponse(**content_raw.json())\n            return async_request()\n</code></pre> <p>The class inherits from <code>cyhole.core.interaction.Interaction</code> and it has attributes <code>client</code> and <code>async_client</code> that are instances of <code>sun.client.SunClient</code> and <code>sun.client.SunAsyncClient</code>.</p> <p>The only endopint is mapped into the private class <code>_get_price</code> that contains the actual logic for the extraction and returns a <code>GetPriceResponse</code> object in synchronous logic and a <code>Coroutine</code> returning a <code>GetPriceResponse</code> object in asynchronous case.</p> <p>The actual API calls are then defined inside the <code>sun/client.py</code> file:</p> client.py<pre><code>from __future__ import annotations\nfrom typing import TYPE_CHECKING, Any\n\nfrom ..core.client import APIClient, AsyncAPIClient\nfrom ..sun.schema import GetPriceResponse\n\nif TYPE_CHECKING:\n    from ..sun.interaction import Sun\n\nclass SunClient(APIClient):\n    \"\"\"\n        Client used for synchronous API calls for `Sun` interaction.\n    \"\"\"\n\n    def __init__(self, interaction: Sun, headers: Any | None = None) -&gt; None:\n        super().__init__(interaction, headers)\n        self._interaction: Sun = self._interaction\n\n    def get_price(self) -&gt; GetPriceResponse:\n        \"\"\"\n            Call the Sun's **Price** API endpoint for synchronous logic. \n            All the API endopint details are available on `Sun._get_price`.\n        \"\"\"\n        return self._interaction._get_price(True)\n\nclass SunAsyncClient(AsyncAPIClient):\n    \"\"\"\n        Client used for asynchronous API calls for `Sun` interaction.\n    \"\"\"\n\n    def __init__(self, interaction: Sun, headers: Any | None = None) -&gt; None:\n        super().__init__(interaction, headers)\n        self._interaction: Sun = self._interaction\n\n    async def get_price(self) -&gt; GetPriceResponse:\n        \"\"\"\n            Call the Sun's **Price** API endpoint for asynchronous logic. \n            All the API endopint details are available on `Sun._get_price`.\n        \"\"\"\n        return await self._interaction._get_price(False)\n</code></pre> <p>The client classes inherit from <code>cyhole.core.client.APIClient</code> and <code>cyhole.core.client.AsyncAPIClient</code>.</p> <p>Finally, the <code>sun/__init__.py</code> file will recall only the main class:</p> __init__.py<pre><code>from ..sun.interaction import Sun\n\n__all__ = [\n    \"Sun\"\n]\n</code></pre> <ul> <li>To ensure consistency of the code, all tests should be implemented; in this scenario the tests are available in <code>tests/test_sun.py</code> file.  The code below is only an example of test implementation according to our initial assumptions.</li> </ul> test_sun.py<pre><code>import pytest\nfrom pathlib import Path\n\nfrom pytest_mock import MockerFixture\n\nfrom cyhole.sun import Sun\nfrom cyhole.sun.schema import GetPriceResponse\n\n# load test config\nfrom .config import load_config, MockerManager\nconfig = load_config()\n\n# create resources folder\nmock_path = Path(config.mock_folder) / config.sun.mock_folder\nmock_path.mkdir(parents = True, exist_ok = True)\n\nclass TestSun:\n    \"\"\"\n        Class grouping all unit tests.\n    \"\"\"\n    sun = Sun()\n    mocker = MockerManager(mock_path)\n\n    def test_get_price_token_address_sync(self, mocker: MockerFixture) -&gt; None:\n        \"\"\"\n            Unit Test used to check the response schema of endpoint \"Price\" for synchronous logic.\n\n            Mock Response File: get_price.json\n        \"\"\"\n\n        # load mock response\n        mock_file_name = \"get_price\"\n        if config.mock_response or config.sun.mock_response:\n            mock_response = self.mocker.load_mock_response(mock_file_name, GetPriceResponse)\n            mocker.patch(\"cyhole.core.client.APIClient.api\", return_value = mock_response)\n\n        # execute request\n        response = self.sun.client.get_price()\n\n        # actual test\n        assert isinstance(response, GetPriceResponse)\n\n        # store request (only not mock)\n        if config.mock_file_overwrite and not config.sun.mock_response:\n            self.mocker.store_mock_model(mock_file_name, response)\n\n    @pytest.mark.asyncio\n    async def test_get_price_async(self, mocker: MockerFixture) -&gt; None:\n        \"\"\"\n            Unit Test used to check the response schema of endpoint \"Price\" for asynchronous logic.\n\n            Mock Response File: get_price.json\n        \"\"\"\n\n        # load mock response\n        mock_file_name = \"get_price\"\n        if config.mock_response or config.sun.mock_response:\n            mock_response = self.mocker.load_mock_response(mock_file_name, GetPriceResponse)\n            mocker.patch(\"cyhole.core.client.AsyncAPIClient.api\", return_value = mock_response)\n\n        # execute request\n        async with self.sun.async_client as client:\n            response = await client.get_price()\n\n        # actual test\n        assert isinstance(response, GetPriceResponse)\n</code></pre> <p>It is possible to notice that we have created two tests for the end point <code>get_price</code>, the first one to test the synchronous logic and another to test the asynchronous one.  In addition, in order to guarantee replicability of the tests also to other developers who might not have access to the newly implemented API, the file <code>get_price.json</code> was introduced inside the new folder <code>tests/resources/sun</code> with an example of an endpoint response inside, which could be used in case of mocking calls.</p> <p>In order to to handle the aspect just described, the default test configuration was therefore also modified so that it could handle the mocking of Sun API calls.</p> config.default.ini<pre><code># WARNING\n# This is the default test.ini file used to configure the cyhole tests\n# Edit and rename it to test.ini in order to use it during the implementation fase.\n\n[global]\n# configuration available for all the tests\nmock_response = True\nmock_folder = tests/resources/mock\nmock_file_overwrite = False\n\n[sun]\n# configuration for sun integration\nmock_response = True\nmock_folder = sun\n</code></pre> <ul> <li>Finally, a new section was introduced in the library documentation in order to explain in all its details the new <code>Interaction</code>.</li> </ul>"},{"location":"development/pull-requests.html","title":"Pull Requests","text":"<p>Warning</p> <p> - Section under construction.</p>"},{"location":"development/testing.html","title":"Testing","text":"<p>This section is dedicated to explain how the testing phase is managed inside <code>cyhole</code> library.</p> <p>By assuming that the reader has downloaded locally the library (see Latest Library Version for more details). It is required to download also the python testing libraries:</p> <ul> <li>activate the <code>python</code> environment you want to use</li> <li>navigate to the <code>cyhole/tests</code> folder</li> <li>run the command <code>pip install -r requirements.txt</code></li> </ul> <p>This command is required to download <code>pytest</code> and its extensions used by <code>cyhole</code> for test management.</p>"},{"location":"development/testing.html#configuration-file","title":"Configuration File","text":"<p>The <code>cyhole</code> library interacts with many external APIs that sometimes require an API Key in order to extract data. Since the usage of these API Keys could be subjected to costs, a proper configuration for the tests is required.</p> <p>The configuration is managed by a configuration file called <code>test.ini</code>, which is loaded during the execution of the tests. By using this file will be possible to:</p> <ul> <li>manage externally API Keys</li> <li>enable/disable mock responses</li> </ul> <p>Check the default <code>test.default.ini</code> file inside the repository for a complete list of the available configurations.</p> <p>During the tests' execution the configuration is loaded into <code>TestConfiguration</code> class.</p>"},{"location":"development/testing.html#mock-responses","title":"Mock Responses","text":"<p>During the implementation phase, could be not necessary to execute a call to the external API service, especially if the external system requires an API Key with a computational costs. For this reason, it was implementated a method to mock the external API responses and overcome this situation.</p> <p>The usage of the mocker is defined inside the configuration file in the global/local variables called <code>mock_response</code>. </p> <p>Note</p> <p>Global <code>mock_response</code> value overwrites the local <code>mock_response</code> value.</p> <p>If the mocker response functionality is enabled, then the tests will try to load a JSON file with the response schema stored from a previous call of the API. The root of the mocker files is defined inside the <code>mock_folder</code> global variable, and specificed for each <code>Interaction</code> inside the local <code>mock_folder</code> variable.</p> <p>Every time the tests are executed with the mock response functionality disabled, the process automatically stores the response in a JSON file into the proper resources folder. To avoid the overwrite of the JSON file use the global <code>mock_file_overwrite</code> variable.</p> <p>All the functionalities to load and store the mock responses are managed by the <code>MockerManager</code> class.</p>"},{"location":"development/testing.html#example","title":"Example","text":"<p>The code below provides a test extracted from <code>test_birdeye.py</code> to explain the mocker usage:</p> test_birdeye.py<pre><code>from pathlib import Path\n\nimport pytest\nfrom pytest_mock import MockerFixture\n\nfrom cyhole.birdeye import Birdeye\nfrom cyhole.birdeye.schema import GetTokenListResponse\n\n# load test config\nfrom .config import load_config, MockerManager\nconfig = load_config()\n\n# create resources folder\nmock_path = Path(config.mock_folder) / config.birdeye.mock_folder\n\nclass TestBirdeyePublic:\n    \"\"\"\n        Class grouping all unit test associate to **PUBLIC** endpoints.\n    \"\"\"\n    birdeye = Birdeye(api_key = config.birdeye.api_key)\n    mocker = MockerManager(mock_path)\n\n    def test_get_token_list_sync(self, mocker: MockerFixture) -&gt; None:\n        \"\"\"\n            Unit Test used to check the response schema of endpoint \"Token - List\" \n            for synchronous logic.\n\n            Mock Response File: get_token_list.json\n        \"\"\"\n\n        # load mock response\n        mock_file_name = \"get_token_list\"\n        if config.mock_response or config.birdeye.mock_response_public:\n            mock_response = self.mocker.load_mock_response(mock_file_name, GetTokenListResponse)\n            mocker.patch(\"cyhole.core.client.APIClient.api\", return_value = mock_response)\n\n        # execute request\n        response = self.birdeye.client.get_token_list(limit = 1)\n\n        # actual test\n        assert isinstance(response, GetTokenListResponse)\n\n        # store request (only not mock)\n        if config.mock_file_overwrite and not config.birdeye.mock_response_public:\n            self.mocker.store_mock_model(mock_file_name, response)\n</code></pre> <p>By analysing the code into different blocks, we first import all the required dependencies:</p> <pre><code>from pathlib import Path\n\nimport pytest\nfrom pytest_mock import MockerFixture\n\nfrom cyhole.birdeye import Birdeye\nfrom cyhole.birdeye.schema import GetTokenListResponse\n\n...\n</code></pre> <p>To hendle the mocker functionalities, we need to import the <code>MockerManager</code> class from <code>pytest_mock</code> library extension of <code>pytest</code>. We also import the <code>Birdeye</code> class and the <code>GetTokenListResponse</code> schema from the <code>cyhole.birdeye</code> module to use them in the test.</p> <p>As next step, we load the configuration file by importing the <code>load_config</code> function and the <code>MockerManager</code> class:</p> <pre><code>...\nfrom .config import load_config, MockerManager\nconfig = load_config()\n\n# create resources folder\nmock_path = Path(config.mock_folder) / config.birdeye.mock_folder\n...\n</code></pre> <p>For <code>cyhole.birdeye</code> extension, we decided to manage the tests in two different classes: <code>TestBirdeyePublic</code> and <code>TestBirdeyePrivate</code>. The first one is used to test the public endpoints, while the second one is used to test the private endpoints. In this case, we are testing the public endpoints, so we are using the <code>TestBirdeyePublic</code> class.</p> <pre><code>...\n\nclass TestBirdeyePublic:\n    \"\"\"\n        Class grouping all unit test associate to **PUBLIC** endpoints.\n    \"\"\"\n    birdeye = Birdeye(api_key = config.birdeye.api_key)\n    mocker = MockerManager(mock_path)\n\n...\n</code></pre> <p>The <code>TestBirdeyePublic</code> class contains the <code>Birdeye</code> object and the <code>MockerManager</code> that is used to load and store the mock responses. The <code>mock_path</code> variable is used to define the path where the mock responses are stored.</p> <p>As a final step, we define the test method:</p> <pre><code>...\n\ndef test_get_token_list_sync(self, mocker: MockerFixture) -&gt; None:\n    \"\"\"\n        Unit Test used to check the response schema of endpoint \"Token - List\" \n        for synchronous logic.\n\n        Mock Response File: get_token_list.json\n    \"\"\"\n\n    # load mock response\n    mock_file_name = \"get_token_list\"\n    if config.mock_response or config.birdeye.mock_response_public:\n        mock_response = self.mocker.load_mock_response(mock_file_name, GetTokenListResponse)\n        mocker.patch(\"cyhole.core.client.APIClient.api\", return_value = mock_response)\n\n    # execute request\n    response = self.birdeye.client.get_token_list(limit = 1)\n\n    # actual test\n    assert isinstance(response, GetTokenListResponse)\n\n    # store request (only not mock)\n    if config.mock_file_overwrite and not config.birdeye.mock_response_public:\n        self.mocker.store_mock_model(mock_file_name, response)\n</code></pre> <p>Observe that the test method is defined with the <code>mocker</code> fixture, which is used to patch the <code>APIClient.api</code> method. If the mocker response functionality is enabled, the method <code>load_mock_response</code> is used to load the mock response from the JSON file. The <code>patch</code> method is used to mock the <code>APIClient.api</code> method and return the mock response. </p> <p>The <code>get_token_list</code> method is executed, and the response is stored in the <code>response</code> variable. The test checks if the response is an instance of the <code>GetTokenListResponse</code> schema. </p> <p>Finally, observe that if the <code>mock_file_overwrite</code> variable is enabled and the <code>mock_response_public</code> variable is disabled, the method <code>store_mock_model</code> is used to store the response in the JSON file.</p>"},{"location":"development/testing.html#sync-and-async","title":"<code>sync</code> and <code>async</code>","text":"<p>The <code>cyhole</code> library is designed to work with both synchronous and asynchronous logic. For this reason, every tests in charge to perform a call to an external API service should be implemented in both ways. To hendle <code>async</code> tests, the <code>pytest</code> library provides the <code>pytest-asyncio</code> extension that allows to run <code>async</code> tests in a synchronous environment.</p> <p>The code below provides an example of how to was implemented the test for the <code>get_token_list</code> endpoint in both <code>sync</code> and <code>async</code> logic in <code>cyhole.birdeye</code>.</p> <pre><code>def test_get_token_list_sync(self, mocker: MockerFixture) -&gt; None:\n    \"\"\"\n        Unit Test used to check the response schema of endpoint \"Token - List\" \n        for synchronous logic.\n\n        Mock Response File: get_token_list.json\n    \"\"\"\n\n    # load mock response\n    mock_file_name = \"get_token_list\"\n    if config.mock_response or config.birdeye.mock_response_public:\n        mock_response = self.mocker.load_mock_response(mock_file_name, GetTokenListResponse)\n        mocker.patch(\"cyhole.core.client.APIClient.api\", return_value = mock_response)\n\n    # execute request\n    response = self.birdeye.client.get_token_list(limit = 1)\n\n    # actual test\n    assert isinstance(response, GetTokenListResponse)\n\n    # store request (only not mock)\n    if config.mock_file_overwrite and not config.birdeye.mock_response_public:\n        self.mocker.store_mock_model(mock_file_name, response)\n\n@pytest.mark.asyncio\nasync def test_get_token_list_async(self, mocker: MockerFixture) -&gt; None:\n    \"\"\"\n        Unit Test used to check the response schema of endpoint \"Token - List\" \n        for asynchronous logic.\n\n        Mock Response File: get_token_list.json\n    \"\"\"\n\n    # load mock response\n    mock_file_name = \"get_token_list\"\n    if config.mock_response or config.birdeye.mock_response_public:\n        mock_response = self.mocker.load_mock_response(mock_file_name, GetTokenListResponse)\n        mocker.patch(\"cyhole.core.client.AsyncAPIClient.api\", return_value = mock_response)\n\n    # execute request\n    async with self.birdeye.async_client as client:\n        response = await client.get_token_list(limit = 1)\n\n    # actual test\n    assert isinstance(response, GetTokenListResponse)\n</code></pre>"},{"location":"development/testing.html#annex","title":"Annex","text":""},{"location":"development/testing.html#configpy","title":"<code>config.py</code>","text":""},{"location":"development/testing.html#config","title":"config","text":""},{"location":"development/testing.html#config.SolscanConfiguration","title":"SolscanConfiguration","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model in charge to manage the Solscan APIs.</p>"},{"location":"development/testing.html#config.SolscanConfiguration.mock_response","title":"mock_response  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_response: bool = True\n</code></pre> <p>Flag to enable/disable the mock responses.</p>"},{"location":"development/testing.html#config.SolscanConfiguration.mock_folder","title":"mock_folder  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_folder: str = 'solscan'\n</code></pre> <p>Folder where the mock responses are stored.</p>"},{"location":"development/testing.html#config.SolscanConfiguration.api_v1_key","title":"api_v1_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>api_v1_key: str | None = None\n</code></pre> <p>API key to access the Solscan V1 APIs.</p>"},{"location":"development/testing.html#config.SolscanConfiguration.api_v2_key","title":"api_v2_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>api_v2_key: str | None = None\n</code></pre> <p>API key to access the Solscan V2 APIs.</p>"},{"location":"development/testing.html#config.SolanaFMConfiguration","title":"SolanaFMConfiguration","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model in charge to manage the SolanaFM APIs.</p>"},{"location":"development/testing.html#config.SolanaFMConfiguration.mock_response","title":"mock_response  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_response: bool = True\n</code></pre> <p>Flag to enable/disable the mock responses.</p>"},{"location":"development/testing.html#config.SolanaFMConfiguration.mock_folder","title":"mock_folder  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_folder: str = 'solana_fm'\n</code></pre> <p>Folder where the mock responses are stored.</p>"},{"location":"development/testing.html#config.SolanaFMConfiguration.api_key","title":"api_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>api_key: str | None = None\n</code></pre> <p>API key to access the SolanaFM APIs.</p>"},{"location":"development/testing.html#config.JupiterConfiguration","title":"JupiterConfiguration","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model in charge to manage the Jupiter APIs.</p>"},{"location":"development/testing.html#config.JupiterConfiguration.mock_response","title":"mock_response  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_response: bool = True\n</code></pre> <p>Flag to enable/disable the mock responses.</p>"},{"location":"development/testing.html#config.JupiterConfiguration.mock_folder","title":"mock_folder  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_folder: str = 'jupiter'\n</code></pre> <p>Folder where the mock responses are stored.</p>"},{"location":"development/testing.html#config.BirdeyeConfiguration","title":"BirdeyeConfiguration","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model in charge to manage the birdeye APIs.</p>"},{"location":"development/testing.html#config.BirdeyeConfiguration.mock_response_public","title":"mock_response_public  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_response_public: bool = True\n</code></pre> <p>Flag to enable/disable the mock responses for the public APIs.</p>"},{"location":"development/testing.html#config.BirdeyeConfiguration.mock_response_private","title":"mock_response_private  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_response_private: bool = True\n</code></pre> <p>Flag to enable/disable the mock responses for the private APIs.</p>"},{"location":"development/testing.html#config.BirdeyeConfiguration.mock_folder","title":"mock_folder  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_folder: str = 'birdeye'\n</code></pre> <p>Folder where the mock responses are stored.</p>"},{"location":"development/testing.html#config.BirdeyeConfiguration.api_key","title":"api_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>api_key: str = ''\n</code></pre> <p>API key to access the birdeye APIs.</p>"},{"location":"development/testing.html#config.TestConfiguration","title":"TestConfiguration","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model in charge to manage the tests' configuration.</p>"},{"location":"development/testing.html#config.TestConfiguration.mock_response","title":"mock_response  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_response: bool = True\n</code></pre> <p>Flag to enable/disable the mock responses.</p>"},{"location":"development/testing.html#config.TestConfiguration.mock_folder","title":"mock_folder  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_folder: str = 'tests/resources/mock'\n</code></pre> <p>Folder where the mock responses are stored.</p>"},{"location":"development/testing.html#config.TestConfiguration.mock_file_overwrite","title":"mock_file_overwrite  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mock_file_overwrite: bool = False\n</code></pre> <p>Flag to enable/disable the overwrite of the mock files.</p>"},{"location":"development/testing.html#config.TestConfiguration.birdeye","title":"birdeye  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>birdeye: BirdeyeConfiguration = BirdeyeConfiguration()\n</code></pre> <p>Birdeye configuration.</p>"},{"location":"development/testing.html#config.TestConfiguration.jupiter","title":"jupiter  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>jupiter: JupiterConfiguration = JupiterConfiguration()\n</code></pre> <p>Jupiter configuration.</p>"},{"location":"development/testing.html#config.TestConfiguration.solana_fm","title":"solana_fm  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>solana_fm: SolanaFMConfiguration = SolanaFMConfiguration()\n</code></pre> <p>SolanaFM configuration.</p>"},{"location":"development/testing.html#config.TestConfiguration.solscan","title":"solscan  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>solscan: SolscanConfiguration = SolscanConfiguration()\n</code></pre> <p>Solscan configuration.</p>"},{"location":"development/testing.html#config.MockerManager","title":"MockerManager","text":"<pre><code>MockerManager(mock_path: Path)\n</code></pre> <p>Class used to manage the mock responses.</p> Source code in <code>tests/config.py</code> <pre><code>def __init__(self, mock_path: Path) -&gt; None:\n    # set/create resources folder\n    self.mock_path = mock_path\n    mock_path.mkdir(parents = True, exist_ok = True)\n</code></pre>"},{"location":"development/testing.html#config.MockerManager.load_mock_model","title":"load_mock_model","text":"<pre><code>load_mock_model(\n    file_name: str, response_model: Type[ResponseModel]\n) -&gt; ResponseModel\n</code></pre> <p>Use this function to load mock response model from a file.</p> <p>Parameters:</p> Name Type Description Default <code>file_name</code> <code>str</code> <p>file name containing the response to load. By assumption, the file must be a JSON file and the file name should not contain the extension.</p> required <code>response_model</code> <code>Type[ResponseModel]</code> <p>objects that inherit from <code>pydantic.BaseModel</code> and describe the response object element.</p> required Source code in <code>tests/config.py</code> <pre><code>def load_mock_model(self, file_name: str, response_model: Type[ResponseModel]) -&gt; ResponseModel:\n    \"\"\"\n        Use this function to load mock response model from a file.\n\n        Parameters:\n            file_name: file name containing the response to load.\n                By assumption, the file must be a JSON file and the file name should not contain the extension.\n            response_model: objects that inherit from `pydantic.BaseModel` and describe the response object element.\n    \"\"\"\n    mock_file = f\"{file_name}.json\"\n    mock_path_file = self.mock_path / mock_file\n\n    if not mock_path_file.exists():\n        raise Exception(f\"mock file '{mock_file}' does not exist in '{self.mock_path}'.\")\n\n    with open(mock_path_file, \"r\") as file:\n        data = json.loads(file.read())\n        mock_response = response_model(**data)\n\n    return mock_response\n</code></pre>"},{"location":"development/testing.html#config.MockerManager.store_mock_model","title":"store_mock_model","text":"<pre><code>store_mock_model(\n    file_name: str, response: BaseModel\n) -&gt; None\n</code></pre> <p>Use this function to store the mock response model into a file.</p> <p>Parameters:</p> Name Type Description Default <code>file_name</code> <code>str</code> <p>file name containing the response to load. By assumption, the file must be a JSON file and the file name should not contain the extension.</p> required <code>response</code> <code>BaseModel</code> <p>objects that inherit from <code>pydantic.BaseModel</code> and describe the response object element.</p> required Source code in <code>tests/config.py</code> <pre><code>def store_mock_model(self, file_name: str, response: BaseModel) -&gt; None:\n    \"\"\"\n        Use this function to store the mock response model into a file.\n\n        Parameters:\n            file_name: file name containing the response to load.\n                By assumption, the file must be a JSON file and the file name should not contain the extension.\n            response: objects that inherit from `pydantic.BaseModel` and describe the response object element.\n    \"\"\"\n    mock_file = f\"{file_name}.json\"\n    mock_path_file = self.mock_path / mock_file\n\n    with open(mock_path_file, \"w\") as file:\n        file.write(response.model_dump_json(indent = 4, by_alias = True))\n\n    return\n</code></pre>"},{"location":"development/testing.html#config.MockerManager.load_mock_response","title":"load_mock_response","text":"<pre><code>load_mock_response(\n    file_name: str, response_model: Type[ResponseModel]\n) -&gt; Response\n</code></pre> <p>Use this function to load mock response model from a file and return a dummy <code>Response</code> object.</p> <p>Parameters:</p> Name Type Description Default <code>file_name</code> <code>str</code> <p>file name containing the response to load. By assumption, the file must be a JSON file and the file name should not contain the extension.</p> required <code>response_model</code> <code>Type[ResponseModel]</code> <p>objects that inherit from <code>pydantic.BaseModel</code> and describe the response object element.</p> required Source code in <code>tests/config.py</code> <pre><code>def load_mock_response(self, file_name: str, response_model: Type[ResponseModel]) -&gt; Response:\n    \"\"\"\n        Use this function to load mock response model from a file and return a dummy `Response` object.\n\n        Parameters:\n            file_name: file name containing the response to load.\n                By assumption, the file must be a JSON file and the file name should not contain the extension.\n            response_model: objects that inherit from `pydantic.BaseModel` and describe the response object element.\n    \"\"\"\n    mock_model = self.load_mock_model(file_name, response_model)\n\n    # create dummy response\n    mock_response = Response()\n    mock_response._content = mock_model.model_dump_json(by_alias = True, exclude_none = True).encode()\n    mock_response.status_code = 200\n    mock_response.encoding = \"utf-8\"\n\n    return mock_response\n</code></pre>"},{"location":"development/testing.html#config.MockerManager.adjust_content_json","title":"adjust_content_json","text":"<pre><code>adjust_content_json(content: str) -&gt; bytes\n</code></pre> <p>Use this function to adjust an input string to ensure that  can be used as content for a <code>Response</code> object and paresed  as a JSON object.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>string to adjust.</p> required Source code in <code>tests/config.py</code> <pre><code>def adjust_content_json(self, content: str) -&gt; bytes:\n    \"\"\"\n        Use this function to adjust an input string to ensure that \n        can be used as content for a `Response` object and paresed \n        as a JSON object.\n\n        Parameters:\n            content: string to adjust.\n    \"\"\"\n    # adjustemts\n    content = content.replace(\"'\", '\"')\n    content = content.replace(\"False\", \"false\")\n    content = content.replace(\"True\", \"true\")\n    content = content.replace(\"None\", \"null\")\n\n    return content.encode()\n</code></pre>"},{"location":"development/testing.html#config.load_config","title":"load_config","text":"<pre><code>load_config(\n    path: str = \"tests\", file: str = \"test.ini\"\n) -&gt; TestConfiguration\n</code></pre> <p>This function is used to load the test configuration file.</p> <p>It is strongly suggested to leave the default <code>path</code> and <code>file</code>  name for the test configuration file. However, if a dedicated file  is used, then is possible to load another file by providing the  necessary information in the input variables.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>path of the configuration file.</p> <code>'tests'</code> <code>file</code> <code>str</code> <p>name of the configuration file (with extension).</p> <code>'test.ini'</code> <p>Returns:</p> Type Description <code>TestConfiguration</code> <p>pydantic model of the test's configuration.</p> Source code in <code>tests/config.py</code> <pre><code>def load_config(path: str = \"tests\", file: str = \"test.ini\") -&gt; TestConfiguration:\n    \"\"\"\n        This function is used to load the test configuration file.\n\n        It is **strongly suggested** to leave the default `path` and `file` \n        name for the test configuration file. However, if a dedicated file \n        is used, then is possible to load another file by providing the \n        necessary information in the input variables.\n\n        Parameters:\n            path: path of the configuration file.\n            file: name of the configuration file (with extension).\n\n        Returns:\n            pydantic model of the test's configuration.\n    \"\"\"\n    config_path_file = f\"{path}/{file}\"\n    config = configparser.ConfigParser()\n\n    # load config\n    config.read(config_path_file)\n    test_config = TestConfiguration()\n\n    # global\n    test_config.mock_response = config.getboolean(\"global\", \"mock_response\", fallback = test_config.mock_response)\n    test_config.mock_folder = config.get(\"global\", \"mock_folder\", fallback = test_config.mock_folder)\n    test_config.mock_file_overwrite = config.getboolean(\"global\", \"mock_file_overwrite\", fallback = test_config.mock_file_overwrite)\n\n    # birdeye\n    test_config.birdeye.mock_response_public = config.getboolean(\"birdeye\", \"mock_response_public\", fallback = test_config.birdeye.mock_response_public)\n    test_config.birdeye.mock_response_private = config.getboolean(\"birdeye\", \"mock_response_private\", fallback = test_config.birdeye.mock_response_private)\n    test_config.birdeye.mock_folder = config.get(\"birdeye\", \"mock_folder\", fallback = test_config.birdeye.mock_folder)\n    test_config.birdeye.api_key = config.get(\"birdeye\", \"api_key\", fallback = test_config.birdeye.api_key)\n\n    # jupiter\n    test_config.jupiter.mock_response = config.getboolean(\"jupiter\", \"mock_response\", fallback = test_config.jupiter.mock_response)\n    test_config.jupiter.mock_folder = config.get(\"jupiter\", \"mock_folder\", fallback = test_config.jupiter.mock_folder)\n\n    # solana_fm\n    test_config.solana_fm.mock_response = config.getboolean(\"solana_fm\", \"mock_response\", fallback = test_config.solana_fm.mock_response)\n    test_config.solana_fm.mock_folder = config.get(\"solana_fm\", \"mock_folder\", fallback = test_config.solana_fm.mock_folder)\n    test_config.solana_fm.api_key = config.get(\"solana_fm\", \"api_key\", fallback = test_config.solana_fm.api_key)\n\n    # solscan\n    test_config.solscan.mock_response = config.getboolean(\"solscan\", \"mock_response\", fallback = test_config.solscan.mock_response)\n    test_config.solscan.mock_folder = config.get(\"solscan\", \"mock_folder\", fallback = test_config.solscan.mock_folder)\n    test_config.solscan.api_v1_key = config.get(\"solscan\", \"api_v1_key\", fallback = test_config.solscan.api_v1_key)\n    test_config.solscan.api_v2_key = config.get(\"solscan\", \"api_v2_key\", fallback = test_config.solscan.api_v2_key)\n\n    return test_config\n</code></pre>"},{"location":"development/core/index.html","title":"- Core","text":"<p>This section focuses on the description of the library's most internal tools that could be used to develop new API <code>Interactions</code>.</p>"},{"location":"development/core/client.html","title":"Connector","text":""},{"location":"development/core/client.html#cyhole.core.client","title":"cyhole.core.client","text":""},{"location":"development/core/client.html#cyhole.core.client.APIClientInterface","title":"APIClientInterface","text":"<p>The following abstract class defines a general Client API.  A client is used in order to connect and interact with an external API.</p> <p>The key method of an API client is the <code>api</code> function that is used  to execute the actual requests.</p>"},{"location":"development/core/client.html#cyhole.core.client.APIClientInterface.api","title":"api  <code>abstractmethod</code>","text":"<pre><code>api(\n    type: str,\n    url: str,\n    *args: tuple,\n    **kwargs: dict[str, Any]\n) -&gt; (\n    requests.Response\n    | Coroutine[None, None, requests.Response]\n)\n</code></pre> <p>Function in charge to execute a request to an API endpoint.</p> <p>Parameters:</p> Name Type Description Default <code>type</code> <code>str</code> <p>request's type (<code>RequestType</code>).</p> required <code>url</code> <code>str</code> <p>API endpoint.</p> required <code>args</code> <code>tuple</code> <p>additional input parameters to provided.</p> <code>()</code> <code>kwargs</code> <code>dict[str, Any]</code> <p>additional input parameters to provided.</p> <code>{}</code> <p>Returns:</p> Type Description <code>requests.Response | Coroutine[None, None, requests.Response]</code> <p>The response object structured as <code>request</code> library. Observe that the return type could be a <code>Coroutine</code> in case of implementation  of an <code>async</code> client.</p> <p>Raises:</p> Type Description <code>RequestTypeNotSupported</code> <p>if the request type is not a valid value of <code>RequestType</code>.</p> <code>AuthorizationAPIKeyError</code> <p>if the response return a 401 code.</p> Source code in <code>src/cyhole/core/client.py</code> <pre><code>@abc.abstractmethod\ndef api(self, type: str, url: str, *args: tuple, **kwargs: dict[str, Any]) -&gt; requests.Response  | Coroutine[None, None, requests.Response]:\n    \"\"\"\n        Function in charge to execute a request to an API endpoint.\n\n        Parameters:\n            type: request's type ([`RequestType`][cyhole.core.param.RequestType]).\n            url: API endpoint.\n            args: additional input parameters to provided.\n            kwargs: additional input parameters to provided.\n\n        Returns:\n            The response object structured as `request` library. Observe that the return type could be a `Coroutine` in case of implementation  of an `async` client.\n\n        Raises:\n            RequestTypeNotSupported: if the request type is not a valid value of [`RequestType`][cyhole.core.param.RequestType].\n            AuthorizationAPIKeyError: if the response return a 401 code.\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"development/core/client.html#cyhole.core.client.APIClient","title":"APIClient","text":"<pre><code>APIClient(\n    interaction: Interaction, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>APIClientInterface</code></p> <p>This client is designed to manage all the REST calls to an external API by using <code>requests</code> module.</p> <p>Info</p> <p>As a conseguence of using <code>requests</code> module, this client can be used to perform  the API requests in synchronous logic and achieve the parallelism by using threads.</p> <p>Use this class as middlelayer to manage all the requests to an external API.  By default, all new <code>Interaction</code> should have the synchronous client that inherits from this class.</p> <p>During the creation of the object is possible to specify some global configurations.</p> <p>Parameters:</p> Name Type Description Default <code>headers</code> <code>Any | None</code> <p>headers used globally in all API requests.</p> <code>None</code> Source code in <code>src/cyhole/core/client.py</code> <pre><code>def __init__(self, interaction: Interaction, headers: Any | None = None) -&gt; None:\n    self._interaction = interaction\n    self.headers = headers\n    return\n</code></pre>"},{"location":"development/core/client.html#cyhole.core.client.AsyncAPIClient","title":"AsyncAPIClient","text":"<pre><code>AsyncAPIClient(\n    interaction: Interaction, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>APIClientInterface</code></p> <p>This client is designed to manage all the REST calls to an external API by using <code>aiohttp</code> module.</p> <p>Info</p> <p>As a conseguence of using <code>aiohttp</code> module, this client can be used to perform  the API requests in asynchronous logic of <code>async</code> paradigm.</p> <p>Use this class as middlelayer to manage all the requests to an external API.  By default, all new <code>Interaction</code> should have the asynchronous client that inherits from this class.</p> <p>During the creation of the object is possible to specify some global configurations.</p> <p>Parameters:</p> Name Type Description Default <code>headers</code> <code>Any | None</code> <p>headers used globally in all API requests.</p> <code>None</code> Source code in <code>src/cyhole/core/client.py</code> <pre><code>def __init__(self, interaction: Interaction, headers: Any | None = None) -&gt; None:\n    self._session: aiohttp.ClientSession | None = None\n    self._interaction = interaction\n    self.headers = headers\n    return\n</code></pre>"},{"location":"development/core/client.html#cyhole.core.client.AsyncAPIClient.__aenter__","title":"__aenter__  <code>async</code>","text":"<pre><code>__aenter__()\n</code></pre> <p>Open a new session.</p> Source code in <code>src/cyhole/core/client.py</code> <pre><code>async def __aenter__(self):\n    \"\"\"Open a new session.\"\"\"\n    self.connect()\n    return self\n</code></pre>"},{"location":"development/core/client.html#cyhole.core.client.AsyncAPIClient.__aexit__","title":"__aexit__  <code>async</code>","text":"<pre><code>__aexit__(exc_type, exc_value, exc_traceback)\n</code></pre> <p>Exits from the session.</p> Source code in <code>src/cyhole/core/client.py</code> <pre><code>async def __aexit__(self, exc_type, exc_value, exc_traceback):\n    \"\"\"Exits from the session.\"\"\"\n    await self.close()\n    return\n</code></pre>"},{"location":"development/core/client.html#cyhole.core.client.AsyncAPIClient.is_connected","title":"is_connected","text":"<pre><code>is_connected() -&gt; bool\n</code></pre> <p>Check if the session is available.</p> Source code in <code>src/cyhole/core/client.py</code> <pre><code>def is_connected(self) -&gt; bool:\n    \"\"\"Check if the session is available.\"\"\"\n    if self._session is None:\n        return False\n    return not self._session.closed\n</code></pre>"},{"location":"development/core/client.html#cyhole.core.client.AsyncAPIClient.connect","title":"connect","text":"<pre><code>connect() -&gt; None\n</code></pre> <p>Init a new session.</p> Source code in <code>src/cyhole/core/client.py</code> <pre><code>def connect(self) -&gt; None:\n    \"\"\"Init a new session.\"\"\"\n    if self._session is None:\n        self._session = aiohttp.ClientSession()\n    return\n</code></pre>"},{"location":"development/core/client.html#cyhole.core.client.AsyncAPIClient.close","title":"close  <code>async</code>","text":"<pre><code>close() -&gt; None\n</code></pre> <p>Close current available session.</p> Source code in <code>src/cyhole/core/client.py</code> <pre><code>async def close(self) -&gt; None:\n    \"\"\"Close current available session.\"\"\"\n\n    if self._session is None:\n        raise AsyncClientAPISessionNotAvailable(\"No session currently available.\")\n\n    # close and reset\n    await self._session.close()\n    self._session = None\n    return\n</code></pre>"},{"location":"development/core/client.html#cyhole.core.client.AsyncAPIClient._to_requests_response","title":"_to_requests_response  <code>async</code>","text":"<pre><code>_to_requests_response(\n    response: aiohttp.ClientResponse,\n) -&gt; requests.Response\n</code></pre> <p>This internal function is used to convert a response obtained  from <code>aiohttp</code> to the one from <code>requests</code> library.</p> <p>Parameters:</p> Name Type Description Default <code>response</code> <code>aiohttp.ClientResponse</code> <p>response from <code>aiohttp</code>.</p> required Return <p>response from <code>requests</code>.</p> Source code in <code>src/cyhole/core/client.py</code> <pre><code>async def _to_requests_response(self, response: aiohttp.ClientResponse) -&gt; requests.Response:\n    \"\"\"\n        This internal function is used to convert a response obtained \n        from `aiohttp` to the one from `requests` library.\n\n        Parameters:\n            response: response from `aiohttp`.\n\n        Return:\n            response from `requests`.\n    \"\"\"\n    _response = requests.Response()\n    _response.url = str(response.url)\n    _response.headers = requests.structures.CaseInsensitiveDict(response.headers)\n    _response.status_code = response.status\n    _response.reason = response.reason if response.reason else \"Not Found\"\n    _response.encoding = response.get_encoding()\n    _response._content = await response.read()\n\n    return _response\n</code></pre>"},{"location":"development/core/client.html#cyhole.core.client.AsyncAPIClient._clean_params","title":"_clean_params","text":"<pre><code>_clean_params(params: dict[str, Any]) -&gt; dict[str, Any]\n</code></pre> <p>The <code>aiohttp</code> requires to remove the keys with <code>None</code> value.  This function takes as input the original <code>params</code> and returns a new  object removed from <code>None</code>keys.</p> arameters <p>params: original params.</p> Return <p>new params removed from the keys with <code>None</code>valiues.</p> Source code in <code>src/cyhole/core/client.py</code> <pre><code>def _clean_params(self, params: dict[str, Any]) -&gt; dict[str, Any]:\n    \"\"\"\n        The `aiohttp` requires to remove the keys with `None` value. \n        This function takes as input the original `params` and returns a new \n        object removed from `None`keys.\n\n        arameters:\n            params: original params.\n\n        Return:\n            new params removed from the keys with `None`valiues.\n    \"\"\"\n    return {key: value for key, value in params.items() if value is not None}\n</code></pre>"},{"location":"development/core/exception.html","title":"Exceptions","text":""},{"location":"development/core/exception.html#cyhole.core.exception","title":"cyhole.core.exception","text":""},{"location":"development/core/exception.html#cyhole.core.exception.CyholeException","title":"CyholeException","text":"<pre><code>CyholeException(description)\n</code></pre> <p>               Bases: <code>Exception</code></p> <p>General exception of Cyhole library</p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"development/core/exception.html#cyhole.core.exception.CyholeException.description","title":"description  <code>instance-attribute</code>","text":"<pre><code>description = description\n</code></pre>"},{"location":"development/core/exception.html#cyhole.core.exception.CyholeException.__str__","title":"__str__","text":"<pre><code>__str__()\n</code></pre> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __str__(self):\n    return self.description\n</code></pre>"},{"location":"development/core/exception.html#cyhole.core.exception.RequestTypeNotSupported","title":"RequestTypeNotSupported","text":"<pre><code>RequestTypeNotSupported(description)\n</code></pre> <p>               Bases: <code>CyholeException</code></p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"development/core/exception.html#cyhole.core.exception.AuthorizationAPIKeyError","title":"AuthorizationAPIKeyError","text":"<pre><code>AuthorizationAPIKeyError(description)\n</code></pre> <p>               Bases: <code>CyholeException</code></p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"development/core/exception.html#cyhole.core.exception.MissingAPIKeyError","title":"MissingAPIKeyError","text":"<pre><code>MissingAPIKeyError(description)\n</code></pre> <p>               Bases: <code>CyholeException</code></p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"development/core/exception.html#cyhole.core.exception.ParamUnknownError","title":"ParamUnknownError","text":"<pre><code>ParamUnknownError(param_value: Any, param_enum: Type[Enum])\n</code></pre> <p>               Bases: <code>CyholeException</code></p> <p>General error used to manage a wrong input API param.</p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, param_value: Any, param_enum: Type[Enum]):\n    description = f\"param '{str(param_value)}' not supported in {param_enum.__name__} enum class. \\nAdmissible values: {[(param.name, param.value) for param in param_enum]}\"\n    super().__init__(description)\n</code></pre>"},{"location":"development/core/exception.html#cyhole.core.exception.AsyncClientAPISessionNotAvailable","title":"AsyncClientAPISessionNotAvailable","text":"<pre><code>AsyncClientAPISessionNotAvailable(description)\n</code></pre> <p>               Bases: <code>CyholeException</code></p> <p>Exception raised when the <code>AsyncAPIClient</code> has not an open session to use.</p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"development/core/interaction.html","title":"Connector","text":""},{"location":"development/core/interaction.html#cyhole.core.interaction","title":"cyhole.core.interaction","text":""},{"location":"development/core/interaction.html#cyhole.core.interaction.Interaction","title":"Interaction","text":"<pre><code>Interaction(headers: Any | None = None)\n</code></pre> <p>This class is the building block for a new integration of an external API in <code>cyhole</code> library,  and every new external API must be identified by a class that inherits from this class.</p> <p>Inside an <code>Interaction</code> there are two attributes identifying the clients responsable to  perform the API calls:</p> <ul> <li><code>client</code>: object used for synchronous logic.</li> <li><code>async_client</code>: object used for asynchronous logic.</li> </ul> <p>During the creation of the object is possible to specify some global configurations.</p> <p>Parameters:</p> Name Type Description Default <code>headers</code> <code>Any | None</code> <p>headers used globally in all API requests.</p> <code>None</code> Source code in <code>src/cyhole/core/interaction.py</code> <pre><code>def __init__(self, headers: Any | None = None) -&gt; None:\n    self.headers = headers\n\n    # clients\n    self.client = APIClient(self, headers = self.headers)\n    self.async_client = AsyncAPIClient(self, headers = self.headers)\n\n    return\n</code></pre>"},{"location":"development/core/interaction.html#cyhole.core.interaction.Interaction.api_return_model","title":"api_return_model","text":"<pre><code>api_return_model(\n    sync: bool,\n    type: str,\n    url: str,\n    response_model: Type[ResponseModel],\n    *args: tuple,\n    **kwargs: Any\n) -&gt; ResponseModel | Coroutine[None, None, ResponseModel]\n</code></pre> <p>This function is used to execute a request to the API by forwarding the call to the  corresponding client (synchronous or asynchronous) according to the <code>sync</code> parameter.</p> <p>This function is used to avoid code duplication in the methods of the <code>Interaction</code> classes,  and it assumes that the response of the API request is a JSON object that can be parsed into  a <code>pydantic.BaseModel</code> model.</p> <p>Parameters:</p> Name Type Description Default <code>sync</code> <code>bool</code> <p>boolean to define if the request is synchronous or asynchronous.</p> required <code>type</code> <code>str</code> <p>request's type (<code>RequestType</code>).</p> required <code>url</code> <code>str</code> <p>the URL of the API endpoint.</p> required <code>response_model</code> <code>Type[ResponseModel]</code> <p>the <code>pydantic.BaseModel</code> model used to parse the response.</p> required <code>args</code> <code>tuple</code> <p>the positional arguments to be passed to the API request.</p> <code>()</code> <code>kwargs</code> <code>Any</code> <p>the named arguments to be passed to the API request.</p> <code>{}</code> <p>Returns:</p> Type Description <code>ResponseModel | Coroutine[None, None, ResponseModel]</code> <p>The response of the API request. If the request is synchronous, the response is a </p> <code>ResponseModel | Coroutine[None, None, ResponseModel]</code> <p><code>pydantic.BaseModel</code> model. If the request is asynchronous, the response is a coroutine </p> <code>ResponseModel | Coroutine[None, None, ResponseModel]</code> <p>that will return a <code>pydantic.BaseModel</code> model.</p> Source code in <code>src/cyhole/core/interaction.py</code> <pre><code>def api_return_model(self, sync: bool, type: str, url: str, response_model: Type[ResponseModel], *args: tuple, **kwargs: Any) -&gt; ResponseModel | Coroutine[None, None, ResponseModel]:\n    \"\"\"\n        This function is used to execute a request to the API by forwarding the call to the \n        corresponding client (synchronous or asynchronous) according to the `sync` parameter.\n\n        This function is used to avoid code duplication in the methods of the `Interaction` classes, \n        and it assumes that the response of the API request is a JSON object that can be parsed into \n        a `pydantic.BaseModel` model.\n\n        Parameters:\n            sync: boolean to define if the request is synchronous or asynchronous.\n            type: request's type ([`RequestType`][cyhole.core.param.RequestType]).\n            url: the URL of the API endpoint.\n            response_model: the `pydantic.BaseModel` model used to parse the response.\n            args: the positional arguments to be passed to the API request.\n            kwargs: the named arguments to be passed to the API request.\n\n        Returns:\n            The response of the API request. If the request is synchronous, the response is a \n            `pydantic.BaseModel` model. If the request is asynchronous, the response is a coroutine \n            that will return a `pydantic.BaseModel` model.\n    \"\"\"\n    if sync:\n        content_raw = self.client.api(type, url, *args, **kwargs)\n        return response_model(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(type, url, *args, **kwargs)\n            return response_model(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"development/core/param.html","title":"API Parameters","text":""},{"location":"development/core/param.html#cyhole.core.param","title":"cyhole.core.param","text":""},{"location":"development/core/param.html#cyhole.core.param.CyholeParam","title":"CyholeParam","text":"<p>               Bases: <code>Enum</code></p> <p>Generic Enum representing a param for an API endpoint</p>"},{"location":"development/core/param.html#cyhole.core.param.CyholeParam.check","title":"check  <code>classmethod</code>","text":"<pre><code>check(value: Any) -&gt; None\n</code></pre> <p>Function used to check the consistency of an input API  parameter (param) belonging to the value list (enum.Enum).</p> <p>The function will raise a ParamUnknownError if the value does not belong to the Enum.</p> <p>Parameters:</p> Name Type Description Default <code>value</code> <code>Any</code> <p>value to check.</p> required Source code in <code>src/cyhole/core/param.py</code> <pre><code>@classmethod\ndef check(cls, value: Any) -&gt; None:\n    \"\"\"\n        Function used to check the consistency of an input API \n        parameter (param) belonging to the value list (enum.Enum).\n\n        The function will raise a ParamUnknownError if the value\n        does not belong to the Enum.\n\n        Parameters:\n            value: value to check.\n    \"\"\"\n    if value not in cls:\n        raise ParamUnknownError(value, cls)\n    return\n</code></pre>"},{"location":"development/core/param.html#cyhole.core.param.RequestType","title":"RequestType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class for RequestType</p>"},{"location":"development/core/token.html","title":"Token","text":"<p>To help developers automate processes, <code>cyhole</code> provides constants for the most famous tokens, categorized by blockchain. These tokens are created using a library class that not only defines the token properties but also provides useful functions for handling token-related operations.</p> <p>Each token is based on <code>CyholeToken</code>  class:</p>"},{"location":"development/core/token.html#cyhole.core.token.CyholeToken","title":"cyhole.core.token.CyholeToken","text":"<p>               Bases: <code>BaseModel</code></p> <p>Core model used to identify a token on <code>cyhole</code> library.</p>"},{"location":"development/core/token.html#cyhole.core.token.CyholeToken.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre> <p>Hash code identifying the token on the chain.</p>"},{"location":"development/core/token.html#cyhole.core.token.CyholeToken.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre> <p>Number of decimal places the token uses.</p>"},{"location":"development/core/token.html#cyhole.core.token.CyholeToken.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre> <p>Name of the token.</p>"},{"location":"development/core/token.html#cyhole.core.token.CyholeToken.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre> <p>Symbol of the token.</p>"},{"location":"development/core/token.html#cyhole.core.token.CyholeToken.to_decimals","title":"to_decimals","text":"<pre><code>to_decimals(amount: int) -&gt; float\n</code></pre> <p>Convert the amount of token from integer to float according to its decimals.</p> <p>Parameters:</p> Name Type Description Default <code>amount</code> <code>int</code> <p>amount of token in integer.</p> required <p>Returns:</p> Type Description <code>float</code> <p>The amount of token in float.</p> Source code in <code>src/cyhole/core/token/__init__.py</code> <pre><code>def to_decimals(self, amount: int) -&gt; float:\n    \"\"\"\n        Convert the amount of token from integer to float according to its decimals.\n\n        Parameters:\n            amount: amount of token in integer.\n\n        Returns:\n            The amount of token in float.\n    \"\"\"\n    return amount / 10 ** self.decimals\n</code></pre>"},{"location":"development/core/token.html#solana","title":"Solana","text":""},{"location":"development/core/token.html#cyhole.core.token.solana","title":"cyhole.core.token.solana","text":""},{"location":"development/core/token.html#cyhole.core.token.solana.SOL","title":"SOL  <code>module-attribute</code>","text":"<pre><code>SOL = SolanaToken(\n    address=\"So11111111111111111111111111111111111111111\",\n    decimals=9,\n    name=\"Solana\",\n    symbol=\"SOL\",\n)\n</code></pre> <p>Solana token.</p>"},{"location":"development/core/token.html#cyhole.core.token.solana.WSOL","title":"WSOL  <code>module-attribute</code>","text":"<pre><code>WSOL = SolanaToken(\n    address=\"So11111111111111111111111111111111111111112\",\n    decimals=9,\n    name=\"Wrapped SOL\",\n    symbol=\"SOL\",\n)\n</code></pre> <p>Wrapped Solana token.</p>"},{"location":"development/core/token.html#cyhole.core.token.solana.USDC","title":"USDC  <code>module-attribute</code>","text":"<pre><code>USDC = SolanaToken(\n    address=\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\",\n    decimals=6,\n    name=\"USD Coin\",\n    symbol=\"USDC\",\n)\n</code></pre> <p>USD Coin token.</p>"},{"location":"development/core/token.html#cyhole.core.token.solana.USDT","title":"USDT  <code>module-attribute</code>","text":"<pre><code>USDT = SolanaToken(\n    address=\"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\",\n    decimals=6,\n    name=\"Tether USD\",\n    symbol=\"USDT\",\n)\n</code></pre> <p>Tether USD token.</p>"},{"location":"development/core/token.html#cyhole.core.token.solana.JUP","title":"JUP  <code>module-attribute</code>","text":"<pre><code>JUP = SolanaToken(\n    address=\"JUPyiwrYJFskUPiHa7hkeR8VUtAeFoSYbKedZNsDvCN\",\n    decimals=6,\n    name=\"Jupiter\",\n    symbol=\"JUP\",\n)\n</code></pre> <p>Jupiter token.</p>"},{"location":"development/core/token.html#cyhole.core.token.solana.BONK","title":"BONK  <code>module-attribute</code>","text":"<pre><code>BONK = SolanaToken(\n    address=\"DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263\",\n    decimals=5,\n    name=\"Bonk\",\n    symbol=\"BONK\",\n)\n</code></pre> <p>Bonk token.</p>"},{"location":"development/core/token.html#cyhole.core.token.solana.WIF","title":"WIF  <code>module-attribute</code>","text":"<pre><code>WIF = SolanaToken(\n    address=\"EKpQGSJtjMFqKZ9KQanSqYXRcF8fBopzLHYxdM65zcjm\",\n    decimals=6,\n    name=\"dogwifhat\",\n    symbol=\"$WIF\",\n)\n</code></pre> <p>dogwifhat token.</p>"},{"location":"development/core/token.html#cyhole.core.token.solana.SolanaToken","title":"SolanaToken","text":"<p>               Bases: <code>CyholeToken</code></p> <p>Model used to identify a Solana token on <code>cyhole</code> library.</p>"},{"location":"development/core/token.html#ethereum","title":"Ethereum","text":""},{"location":"development/core/token.html#cyhole.core.token.ethereum","title":"cyhole.core.token.ethereum","text":""},{"location":"development/core/token.html#cyhole.core.token.ethereum.WETH","title":"WETH  <code>module-attribute</code>","text":"<pre><code>WETH = EthereumToken(\n    address=\"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n    decimals=18,\n    name=\"Wrapped Ether\",\n    symbol=\"WETH\",\n)\n</code></pre> <p>Wrapped Ether token.</p>"},{"location":"development/core/token.html#cyhole.core.token.ethereum.USDC","title":"USDC  <code>module-attribute</code>","text":"<pre><code>USDC = EthereumToken(\n    address=\"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\",\n    decimals=6,\n    name=\"USD Coin\",\n    symbol=\"USDC\",\n)\n</code></pre> <p>USD Coin token.</p>"},{"location":"development/core/token.html#cyhole.core.token.ethereum.USDT","title":"USDT  <code>module-attribute</code>","text":"<pre><code>USDT = EthereumToken(\n    address=\"0xdAC17F958D2ee523a2206206994597C13D831ec7\",\n    decimals=6,\n    name=\"Tether USD\",\n    symbol=\"USDT\",\n)\n</code></pre> <p>Tether USD token.</p>"},{"location":"development/core/token.html#cyhole.core.token.ethereum.BNB","title":"BNB  <code>module-attribute</code>","text":"<pre><code>BNB = EthereumToken(\n    address=\"0xB8c77482e45F1F44dE1745F52C74426C631bDD52\",\n    decimals=18,\n    name=\"Binance Coin\",\n    symbol=\"BNB\",\n)\n</code></pre> <p>Binance Coin token.</p>"},{"location":"development/core/token.html#cyhole.core.token.ethereum.EthereumToken","title":"EthereumToken","text":"<p>               Bases: <code>CyholeToken</code></p> <p>Model used to identify a Ethereum token on <code>cyhole</code> library.</p>"},{"location":"interactions/index.html","title":"Interactions","text":"<p>An <code>Interaction</code> is the most important element in the <code>cyhole</code> library because it is in charge to perform all the requests to an external API system.  As a conseguence, every external API implemented in <code>cyhole</code> has its own dedicated class that inherits from <code>cyhole.core.interaction.Interaction</code> class. </p> <p>The structure of a standard <code>Interaction</code> is described by the image below:</p> Image created using Excalidraw <p>Inside an <code>Interaction</code> there are two attributes identifying the clients responsable to perform the API calls:</p> <ul> <li><code>client</code>: object used for synchronous logic calls. This attribute is an object created by a class that inherits from <code>cyhole.core.client.APIClient</code>.</li> <li><code>async_client</code>: object used for asynchronous logic calls. This attribute is an object created by a class that inherits from <code>cyhole.core.client.AsyncAPIClient</code>.</li> </ul> <p>By looking to the image above, it is possibile to notice that the <code>Interaction</code> class has also a set of private methods, one for each implemented endpoint. All these methods are then also available in <code>client</code> and <code>async_client</code> to be used.</p> <p>The idea beyond this architecture is to minimise the code repetition, every endopoint is identified by a private method inside <code>Interaction</code> class, and this method has all the required logic to hendle the dedicated API endopint call. In addition, the method can be executed in <code>sync</code> or <code>async</code> mode; for this reason the clients inside the interaction have implemented the corresponding method in non-private mode to be executed with the desired logic.</p>"},{"location":"interactions/index.html#example","title":"Example","text":"<p>Consider the <code>Jupiter</code> interaction and its GET endpoint Price.</p> <p>The main class inherits from <code>Interaction</code> class and it has:</p> <ul> <li><code>client</code>: object created by <code>JupiterClient</code> class that inherits from <code>APIClient</code>.</li> <li><code>async_client</code>: object created by <code>JupiterAsyncClient</code> class that inherits from <code>AsyncAPIClient</code>.</li> </ul> <p>The GET \"Price\" endopint is available as:</p> <ul> <li><code>Jupiter._get_price</code>: private version of the endpoint with all the logic.</li> <li><code>JupiterClient.get_price</code>: synchronous logic call.</li> <li><code>JupiterAsyncClient.get_price</code>: asynchronous logic call.</li> </ul>"},{"location":"interactions/birdeye/index.html","title":"- Birdeye","text":"<p>Birdeye (https://birdeye.so) is a popular treading crypto platform connected to different blockchains that provides tokens data and pairs' prices in real time. The access to both their public and private APIs is managed by a valid API key requestable on their site.</p> <p>The API connector is <code>Birdeye</code> class imported from <code>cyhole.birdeye</code> path.</p>"},{"location":"interactions/birdeye/index.html#quick-example","title":"Quick Example","text":"<p>Extract the latest tokens from Ethereum chain sorted in descending order by USD volume in few lines of code by using <code>get_token_list</code> in synchronous and asynchronous logic.</p> <pre><code>import asyncio\nimport asyncio\nfrom cyhole.birdeye import Birdeye\nfrom cyhole.birdeye.param import BirdeyeChain\n\nbirdeye = Birdeye(chain = BirdeyeChain.ETHEREUM.value)\n\n# synchronous\nresponse = birdeye.client.get_token_list(limit = 1)\ntoken = response.data.tokens[0]\nprint(f\"Highest 24h USD volume token: '{token.name}', volume: {round(token.volume_24h_usd, 2)}.\")\n\n# asynchronous\nasync def main() -&gt; None:\n    async with birdeye.async_client as client:\n        response = await client.get_token_list(limit = 1)\n        token = response.data.tokens[0]\n        print(f\"Highest 24h USD volume token: '{token.name}', volume: {round(token.volume_24h_usd, 2)}.\")\n\nasyncio.run(main())\n</code></pre> <p>Note</p> <p>To run this example is assumed that the user has a valid API key stored in <code>BIRDEYE_API_KEY</code> environment variable. If the key is not provided during the object creations, then the library will raise an exception.</p>"},{"location":"interactions/birdeye/index.html#content","title":"Content","text":"<p>The documentation follows the library's structure by providing all the technical details required to use it.</p> <ul> <li> <p> Connector</p> <p><code>cyhole.birdeye</code> - Explore the <code>Birdeye</code> API connector and all its methods. </p> <p> Reference</p> </li> <li> <p> API Parameters</p> <p><code>cyhole.birdeye.param</code> - Ensure to use the correct parameters during the API calls.</p> <p> Reference</p> </li> <li> <p> Response Schema</p> <p><code>cyhole.birdeye.schema</code> - Extract only what is necessary by exploiting reponse mapping thanks to <code>pydantic</code> schemes.</p> <p> Reference</p> </li> <li> <p> Exceptions</p> <p><code>cyhole.birdeye.exception</code> - Make sure you intercept all exceptions correctly.</p> <p> Reference</p> </li> </ul>"},{"location":"interactions/birdeye/index.html#endpoints","title":"Endpoints","text":"Endpoint Type Method <code>cyhole</code> Release Deprecated Token - List <code>GET</code> <code>get_token_list</code> <code>0.0.1-alpha</code> - Token - Creation Token Info <code>GET</code> <code>get_token_creation_info</code> <code>0.0.1-alpha</code> - Token - Security <code>GET</code> <code>get_token_security</code> <code>0.0.1-alpha</code> - Token - Overview <code>GET</code> <code>get_token_overview</code> <code>0.0.1-alpha</code> - Price <code>GET</code> <code>get_price</code> <code>0.0.1-alpha</code> - Price - Multiple <code>GET</code> <code>get_price_multiple</code> <code>0.0.1-alpha</code> - Price - Historical <code>GET</code> <code>get_price_historical</code> <code>0.0.1-alpha</code> - Price Volume - Single Token <code>GET</code> <code>get_price_volume_single</code> <code>0.2.1</code> - Price Volume - Multiple Token <code>POST</code> <code>post_price_volume_multi</code> <code>0.2.1</code> - Trades - Token <code>GET</code> <code>get_trades_token</code> <code>0.0.1-alpha</code> - Trades - Pair <code>GET</code> <code>get_trades_pair</code> <code>0.0.1-alpha</code> - OHLCV - Token/Pair <code>GET</code> <code>get_ohlcv</code> <code>0.0.1-alpha</code> - OHLCV - Base/Quote <code>GET</code> <code>get_ohlcv_base_quote</code> <code>0.0.1-alpha</code> - Wallet - Supported Networks <code>GET</code> <code>get_wallet_supported_networks</code> <code>0.0.1-alpha</code> - History <code>GET</code> <code>get_history</code> <code>0.0.1-alpha</code> <code>0.2.0</code>"},{"location":"interactions/birdeye/client.html","title":"Client","text":""},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client","title":"cyhole.birdeye.client","text":""},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient","title":"BirdeyeClient","text":"<pre><code>BirdeyeClient(\n    interaction: Birdeye, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>APIClient</code></p> <p>Client used for synchronous API calls for <code>Birdeye</code> interaction.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def __init__(self, interaction: Birdeye, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction: Birdeye = self._interaction\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_token_list","title":"get_token_list","text":"<pre><code>get_token_list(\n    sort_by: str = BirdeyeSort.SORT_V24HUSD.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; GetTokenListResponse\n</code></pre> <p>Call the Birdeye's PUBLIC API endpoint Token - List for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_token_list</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_token_list(self, sort_by: str = BirdeyeSort.SORT_V24HUSD.value, order_by: str = BirdeyeOrder.DESCENDING.value, offset: int | None = None, limit: int | None = None) -&gt; GetTokenListResponse:\n    \"\"\"\n        Call the Birdeye's **PUBLIC** API endpoint **[Token - List](https://docs.birdeye.so/reference/get_defi-tokenlist)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_token_list`][cyhole.birdeye.interaction.Birdeye._get_token_list].\n    \"\"\"\n    return self._interaction._get_token_list(True, sort_by, order_by, offset, limit)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_token_creation_info","title":"get_token_creation_info","text":"<pre><code>get_token_creation_info(\n    address: str,\n) -&gt; GetTokenCreationInfoResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Token - Creation Token Info for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_token_creation_info</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_token_creation_info(self, address: str) -&gt; GetTokenCreationInfoResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Token - Creation Token Info](https://docs.birdeye.so/reference/get_defi-token-creation-info)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_token_creation_info`][cyhole.birdeye.interaction.Birdeye._get_token_creation_info].\n    \"\"\"\n    return self._interaction._get_token_creation_info(True, address)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_token_security","title":"get_token_security","text":"<pre><code>get_token_security(\n    address: str,\n) -&gt; GetTokenSecurityResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Token - Security for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_token_security</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_token_security(self, address: str) -&gt; GetTokenSecurityResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Token - Security](https://docs.birdeye.so/reference/get_defi-token-security)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_token_security`][cyhole.birdeye.interaction.Birdeye._get_token_security].\n    \"\"\"\n    return self._interaction._get_token_security(True, address)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_token_overview","title":"get_token_overview","text":"<pre><code>get_token_overview(\n    address: str,\n) -&gt; GetTokenOverviewResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Token - Overview for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_token_overview</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_token_overview(self, address: str) -&gt; GetTokenOverviewResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Token - Overview](https://docs.birdeye.so/reference/get_defi-token-overview)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_token_overview`][cyhole.birdeye.interaction.Birdeye._get_token_overview].\n    \"\"\"\n    return self._interaction._get_token_overview(True, address)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_price","title":"get_price","text":"<pre><code>get_price(\n    address: str, include_liquidity: bool | None = None\n) -&gt; GetPriceResponse\n</code></pre> <p>Call the Birdeye's PUBLIC API endpoint Price for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_price</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_price(self, address: str, include_liquidity: bool | None = None) -&gt; GetPriceResponse:\n    \"\"\"\n        Call the Birdeye's **PUBLIC** API endpoint **[Price](https://docs.birdeye.so/reference/get_defi-price)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_price`][cyhole.birdeye.interaction.Birdeye._get_price].\n    \"\"\"\n    return self._interaction._get_price(True, address, include_liquidity)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_price_multiple","title":"get_price_multiple","text":"<pre><code>get_price_multiple(\n    list_address: list[str],\n    include_liquidity: bool | None = None,\n) -&gt; GetPriceMultipleResponse\n</code></pre> <p>Call the Birdeye's PUBLIC API endpoint Price - Multiple for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_price_multiple</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_price_multiple(self, list_address: list[str], include_liquidity: bool | None = None) -&gt; GetPriceMultipleResponse:\n    \"\"\"\n        Call the Birdeye's **PUBLIC** API endpoint **[Price - Multiple](https://docs.birdeye.so/reference/get_defi-multi-price)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_price_multiple`][cyhole.birdeye.interaction.Birdeye._get_price_multiple].\n    \"\"\"\n    return self._interaction._get_price_multiple(True, list_address, include_liquidity)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_price_historical","title":"get_price_historical","text":"<pre><code>get_price_historical(\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n) -&gt; GetPriceHistoricalResponse\n</code></pre> <p>Call the Birdeye's PUBLIC API endpoint Price - Historical for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_price_historical</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_price_historical(self, address: str, address_type: str, timeframe: str, dt_from: datetime, dt_to: datetime | None = None) -&gt; GetPriceHistoricalResponse:\n    \"\"\"\n        Call the Birdeye's **PUBLIC** API endpoint **[Price - Historical](https://docs.birdeye.so/reference/get_defi-history-price)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_price_historical`][cyhole.birdeye.interaction.Birdeye._get_price_historical].\n    \"\"\"\n    return self._interaction._get_price_historical(True, address, address_type, timeframe, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_price_volume_single","title":"get_price_volume_single","text":"<pre><code>get_price_volume_single(\n    address: str,\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; GetPriceVolumeSingleResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Price Volume - Single Token for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_price_volume_single</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_price_volume_single(self, address: str, timeframe: str = BirdeyeHourTimeFrame.H24.value) -&gt; GetPriceVolumeSingleResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Price Volume - Single Token](https://docs.birdeye.so/reference/get_defi-price-volume-single)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_price_volume_single`][cyhole.birdeye.interaction.Birdeye._get_price_volume_single].\n    \"\"\"\n    return self._interaction._get_price_volume_single(True, address, timeframe)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.post_price_volume_multi","title":"post_price_volume_multi","text":"<pre><code>post_price_volume_multi(\n    list_address: list[str],\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; PostPriceVolumeMultiResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Price Volume - Multiple Token for synchronous logic.  All the API endopint details are available on <code>Birdeye._post_price_volume_multi</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def post_price_volume_multi(self, list_address: list[str], timeframe: str = BirdeyeHourTimeFrame.H24.value) -&gt; PostPriceVolumeMultiResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Price Volume - Multiple Token](https://docs.birdeye.so/reference/get_defi-price-volume-single)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._post_price_volume_multi`][cyhole.birdeye.interaction.Birdeye._post_price_volume_multi].\n    \"\"\"\n    return self._interaction._post_price_volume_multi(True, list_address, timeframe)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_trades_token","title":"get_trades_token","text":"<pre><code>get_trades_token(\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; GetTradesTokenResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Trades - Token for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_trades_token</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_trades_token(self, address: str, trade_type: str = BirdeyeTradeType.SWAP.value, offset: int | None = None, limit: int | None = None) -&gt; GetTradesTokenResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Trades - Token](https://docs.birdeye.so/reference/get_defi-txs-token)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_trades_token`][cyhole.birdeye.interaction.Birdeye._get_trades_token].\n    \"\"\"\n    return self._interaction._get_trades_token(True, address, trade_type, offset, limit)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_trades_pair","title":"get_trades_pair","text":"<pre><code>get_trades_pair(\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; GetTradesPairResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Trades - Pair for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_trades_pair</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_trades_pair(self, address: str, trade_type: str = BirdeyeTradeType.SWAP.value, order_by: str = BirdeyeOrder.DESCENDING.value, offset: int | None = None, limit: int | None = None) -&gt; GetTradesPairResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Trades - Pair](https://docs.birdeye.so/reference/get_defi-txs-pair)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_trades_pair`][cyhole.birdeye.interaction.Birdeye._get_trades_pair].\n    \"\"\"\n    return self._interaction._get_trades_pair(True, address, trade_type, order_by, offset, limit)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_ohlcv","title":"get_ohlcv","text":"<pre><code>get_ohlcv(\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n) -&gt; GetOHLCVTokenPairResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint OHLCV - Token/Pair for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_ohlcv</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_ohlcv(self, address: str, address_type: str, timeframe: str, dt_from: datetime, dt_to: datetime | None = None) -&gt; GetOHLCVTokenPairResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[OHLCV - Token/Pair](https://docs.birdeye.so/reference/get_defi-ohlcv)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_ohlcv`][cyhole.birdeye.interaction.Birdeye._get_ohlcv].\n    \"\"\"\n    return self._interaction._get_ohlcv(True, address, address_type, timeframe, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_ohlcv_base_quote","title":"get_ohlcv_base_quote","text":"<pre><code>get_ohlcv_base_quote(\n    base_address: str,\n    quote_address: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n) -&gt; GetOHLCVBaseQuoteResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint OHLCV - Base/Quote for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_ohlcv_base_quote</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_ohlcv_base_quote(self, base_address: str, quote_address: str, timeframe: str, dt_from: datetime, dt_to: datetime | None = None) -&gt; GetOHLCVBaseQuoteResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[OHLCV - Base/Quote](https://docs.birdeye.so/reference/get_defi-ohlcv-base-quote)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_ohlcv_base_quote`][cyhole.birdeye.interaction.Birdeye._get_ohlcv_base_quote].\n    \"\"\"\n    return self._interaction._get_ohlcv_base_quote(True, base_address, quote_address, timeframe, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeClient.get_wallet_supported_networks","title":"get_wallet_supported_networks","text":"<pre><code>get_wallet_supported_networks() -&gt; (\n    GetWalletSupportedNetworksResponse\n)\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Wallet - Supported Networks for synchronous logic.  All the API endopint details are available on <code>Birdeye._get_wallet_supported_networks</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def get_wallet_supported_networks(self) -&gt; GetWalletSupportedNetworksResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Wallet - Supported Networks](https://docs.birdeye.so/reference/get_v1-wallet-list-supported-chain)** for synchronous logic. \n        All the API endopint details are available on [`Birdeye._get_wallet_supported_networks`][cyhole.birdeye.interaction.Birdeye._get_wallet_supported_networks].\n    \"\"\"\n    return self._interaction._get_wallet_supported_networks(True)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient","title":"BirdeyeAsyncClient","text":"<pre><code>BirdeyeAsyncClient(\n    interaction: Birdeye, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>AsyncAPIClient</code></p> <p>Client used for asynchronous API calls for <code>Birdeye</code> interaction.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>def __init__(self, interaction: Birdeye, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction: Birdeye = self._interaction\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_token_list","title":"get_token_list  <code>async</code>","text":"<pre><code>get_token_list(\n    sort_by: str = BirdeyeSort.SORT_V24HUSD.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; GetTokenListResponse\n</code></pre> <p>Call the Birdeye's PUBLIC API endpoint Token - List for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_token_list</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_token_list(self, sort_by: str = BirdeyeSort.SORT_V24HUSD.value, order_by: str = BirdeyeOrder.DESCENDING.value, offset: int | None = None, limit: int | None = None) -&gt; GetTokenListResponse:\n    \"\"\"\n        Call the Birdeye's **PUBLIC** API endpoint **[Token - List](https://docs.birdeye.so/reference/get_defi-tokenlist)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_token_list`][cyhole.birdeye.interaction.Birdeye._get_token_list].\n    \"\"\"\n    return await self._interaction._get_token_list(False, sort_by, order_by, offset, limit)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_token_creation_info","title":"get_token_creation_info  <code>async</code>","text":"<pre><code>get_token_creation_info(\n    address: str,\n) -&gt; GetTokenCreationInfoResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Token - Creation Token Info for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_token_creation_info</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_token_creation_info(self, address: str) -&gt; GetTokenCreationInfoResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Token - Creation Token Info](https://docs.birdeye.so/reference/get_defi-token-creation-info)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_token_creation_info`][cyhole.birdeye.interaction.Birdeye._get_token_creation_info].\n    \"\"\"\n    return await self._interaction._get_token_creation_info(False, address)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_token_security","title":"get_token_security  <code>async</code>","text":"<pre><code>get_token_security(\n    address: str,\n) -&gt; GetTokenSecurityResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Token - Security for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_token_security</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_token_security(self, address: str) -&gt; GetTokenSecurityResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Token - Security](https://docs.birdeye.so/reference/get_defi-token-security)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_token_security`][cyhole.birdeye.interaction.Birdeye._get_token_security].\n    \"\"\"\n    return await self._interaction._get_token_security(False, address)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_token_overview","title":"get_token_overview  <code>async</code>","text":"<pre><code>get_token_overview(\n    address: str,\n) -&gt; GetTokenOverviewResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Token - Overview for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_token_overview</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_token_overview(self, address: str) -&gt; GetTokenOverviewResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Token - Overview](https://docs.birdeye.so/reference/get_defi-token-overview)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_token_overview`][cyhole.birdeye.interaction.Birdeye._get_token_overview].\n    \"\"\"\n    return await self._interaction._get_token_overview(False, address)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_price","title":"get_price  <code>async</code>","text":"<pre><code>get_price(\n    address: str, include_liquidity: bool | None = None\n) -&gt; GetPriceResponse\n</code></pre> <p>Call the Birdeye's PUBLIC API endpoint Price for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_price</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_price(self, address: str, include_liquidity: bool | None = None) -&gt; GetPriceResponse:\n    \"\"\"\n        Call the Birdeye's **PUBLIC** API endpoint **[Price](https://docs.birdeye.so/reference/get_defi-price)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_price`][cyhole.birdeye.interaction.Birdeye._get_price].\n    \"\"\"\n    return await self._interaction._get_price(False, address, include_liquidity)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_price_multiple","title":"get_price_multiple  <code>async</code>","text":"<pre><code>get_price_multiple(\n    list_address: list[str],\n    include_liquidity: bool | None = None,\n) -&gt; GetPriceMultipleResponse\n</code></pre> <p>Call the Birdeye's PUBLIC API endpoint Price - Multiple for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_price_multiple</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_price_multiple(self, list_address: list[str], include_liquidity: bool | None = None) -&gt; GetPriceMultipleResponse:\n    \"\"\"\n        Call the Birdeye's **PUBLIC** API endpoint **[Price - Multiple](https://docs.birdeye.so/reference/get_defi-multi-price)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_price_multiple`][cyhole.birdeye.interaction.Birdeye._get_price_multiple].\n    \"\"\"\n    return await self._interaction._get_price_multiple(False, list_address, include_liquidity)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_price_historical","title":"get_price_historical  <code>async</code>","text":"<pre><code>get_price_historical(\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n) -&gt; GetPriceHistoricalResponse\n</code></pre> <p>Call the Birdeye's PUBLIC API endpoint Price - Historical for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_price_historical</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_price_historical(self, address: str, address_type: str, timeframe: str, dt_from: datetime, dt_to: datetime | None = None) -&gt; GetPriceHistoricalResponse:\n    \"\"\"\n        Call the Birdeye's **PUBLIC** API endpoint **[Price - Historical](https://docs.birdeye.so/reference/get_defi-history-price)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_price_historical`][cyhole.birdeye.interaction.Birdeye._get_price_historical].\n    \"\"\"\n    return await self._interaction._get_price_historical(False, address, address_type, timeframe, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_price_volume_single","title":"get_price_volume_single  <code>async</code>","text":"<pre><code>get_price_volume_single(\n    address: str,\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; GetPriceVolumeSingleResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Price Volume - Single Token for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_price_volume_single</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_price_volume_single(self, address: str, timeframe: str = BirdeyeHourTimeFrame.H24.value) -&gt; GetPriceVolumeSingleResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Price Volume - Single Token](https://docs.birdeye.so/reference/get_defi-price-volume-single)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_price_volume_single`][cyhole.birdeye.interaction.Birdeye._get_price_volume_single].\n    \"\"\"\n    return await self._interaction._get_price_volume_single(False, address, timeframe)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.post_price_volume_multi","title":"post_price_volume_multi  <code>async</code>","text":"<pre><code>post_price_volume_multi(\n    list_address: list[str],\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; PostPriceVolumeMultiResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Price Volume - Multiple Token for asynchronous logic.  All the API endopint details are available on <code>Birdeye._post_price_volume_multi</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def post_price_volume_multi(self, list_address: list[str], timeframe: str = BirdeyeHourTimeFrame.H24.value) -&gt; PostPriceVolumeMultiResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Price Volume - Multiple Token](https://docs.birdeye.so/reference/get_defi-price-volume-single)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._post_price_volume_multi`][cyhole.birdeye.interaction.Birdeye._post_price_volume_multi].\n    \"\"\"\n    return await self._interaction._post_price_volume_multi(False, list_address, timeframe)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_trades_token","title":"get_trades_token  <code>async</code>","text":"<pre><code>get_trades_token(\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; GetTradesTokenResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Trades - Token for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_trades_token</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_trades_token(self, address: str, trade_type: str = BirdeyeTradeType.SWAP.value, offset: int | None = None, limit: int | None = None) -&gt; GetTradesTokenResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Trades - Token](https://docs.birdeye.so/reference/get_defi-txs-token)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_trades_token`][cyhole.birdeye.interaction.Birdeye._get_trades_token].\n    \"\"\"\n    return await self._interaction._get_trades_token(False, address, trade_type, offset, limit)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_trades_pair","title":"get_trades_pair  <code>async</code>","text":"<pre><code>get_trades_pair(\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; GetTradesPairResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Trades - Pair for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_trades_pair</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_trades_pair(self, address: str, trade_type: str = BirdeyeTradeType.SWAP.value, order_by: str = BirdeyeOrder.DESCENDING.value, offset: int | None = None, limit: int | None = None) -&gt; GetTradesPairResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Trades - Pair](https://docs.birdeye.so/reference/get_defi-txs-pair)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_trades_pair`][cyhole.birdeye.interaction.Birdeye._get_trades_pair].\n    \"\"\"\n    return await self._interaction._get_trades_pair(False, address, trade_type, order_by, offset, limit)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_ohlcv","title":"get_ohlcv  <code>async</code>","text":"<pre><code>get_ohlcv(\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n) -&gt; GetOHLCVTokenPairResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint OHLCV - Token/Pair for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_ohlcv</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_ohlcv(self, address: str, address_type: str, timeframe: str, dt_from: datetime, dt_to: datetime | None = None) -&gt; GetOHLCVTokenPairResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[OHLCV - Token/Pair](https://docs.birdeye.so/reference/get_defi-ohlcv)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_ohlcv`][cyhole.birdeye.interaction.Birdeye._get_ohlcv].\n    \"\"\"\n    return await self._interaction._get_ohlcv(False, address, address_type, timeframe, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_ohlcv_base_quote","title":"get_ohlcv_base_quote  <code>async</code>","text":"<pre><code>get_ohlcv_base_quote(\n    base_address: str,\n    quote_address: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n) -&gt; GetOHLCVBaseQuoteResponse\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint OHLCV - Base/Quote for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_ohlcv_base_quote</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_ohlcv_base_quote(self, base_address: str, quote_address: str, timeframe: str, dt_from: datetime, dt_to: datetime | None = None) -&gt; GetOHLCVBaseQuoteResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[OHLCV - Base/Quote](https://docs.birdeye.so/reference/get_defi-ohlcv-base-quote)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_ohlcv_base_quote`][cyhole.birdeye.interaction.Birdeye._get_ohlcv_base_quote].\n    \"\"\"\n    return await self._interaction._get_ohlcv_base_quote(False, base_address, quote_address, timeframe, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/birdeye/client.html#cyhole.birdeye.client.BirdeyeAsyncClient.get_wallet_supported_networks","title":"get_wallet_supported_networks  <code>async</code>","text":"<pre><code>get_wallet_supported_networks() -&gt; (\n    GetWalletSupportedNetworksResponse\n)\n</code></pre> <p>Call the Birdeye's PRIVATE API endpoint Wallet - Supported Networks for asynchronous logic.  All the API endopint details are available on <code>Birdeye._get_wallet_supported_networks</code>.</p> Source code in <code>src/cyhole/birdeye/client.py</code> <pre><code>async def get_wallet_supported_networks(self) -&gt; GetWalletSupportedNetworksResponse:\n    \"\"\"\n        Call the Birdeye's **PRIVATE** API endpoint **[Wallet - Supported Networks](https://docs.birdeye.so/reference/get_v1-wallet-list-supported-chain)** for asynchronous logic. \n        All the API endopint details are available on [`Birdeye._get_wallet_supported_networks`][cyhole.birdeye.interaction.Birdeye._get_wallet_supported_networks].\n    \"\"\"\n    return await self._interaction._get_wallet_supported_networks(False)\n</code></pre>"},{"location":"interactions/birdeye/exception.html","title":"Exceptions","text":""},{"location":"interactions/birdeye/exception.html#cyhole.birdeye.exception","title":"cyhole.birdeye.exception","text":""},{"location":"interactions/birdeye/exception.html#cyhole.birdeye.exception.BirdeyeException","title":"BirdeyeException","text":"<pre><code>BirdeyeException(description)\n</code></pre> <p>               Bases: <code>CyholeException</code></p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/birdeye/exception.html#cyhole.birdeye.exception.BirdeyeAuthorisationError","title":"BirdeyeAuthorisationError","text":"<pre><code>BirdeyeAuthorisationError(\n    description: str = \"The API Key is not authorised to use this endpoint.\",\n)\n</code></pre> <p>               Bases: <code>BirdeyeException</code></p> Source code in <code>src/cyhole/birdeye/exception.py</code> <pre><code>def __init__(self, description: str = \"The API Key is not authorised to use this endpoint.\"):\n    super().__init__(description)\n</code></pre>"},{"location":"interactions/birdeye/exception.html#cyhole.birdeye.exception.BirdeyeTimeRangeError","title":"BirdeyeTimeRangeError","text":"<pre><code>BirdeyeTimeRangeError(description)\n</code></pre> <p>               Bases: <code>BirdeyeException</code></p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/birdeye/interaction.html","title":"Interaction","text":"<p>Connector page for the birdeye.so API. Each endpoint is mapped and callable via a dedicated method. Be sure to call an endpoint in line with the permissions of your API.</p>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye","title":"cyhole.birdeye.Birdeye","text":"<pre><code>Birdeye(\n    api_key: str | None = None,\n    chain: str = BirdeyeChain.SOLANA.value,\n)\n</code></pre> <p>               Bases: <code>Interaction</code></p> <p>Class used to connect https://birdeye.so API. To have access Birdeye API (public or private) is required to have a valid API key.</p> <p>Check https://docs.birdeye.so for all the details on the available endpoints.</p> <p>Info</p> <p>If the API key is not provided during the object creation, then it is automatically  retrieved from ENV variable BIRDEYE_API_KEY.</p> <p>Parameters:</p> Name Type Description Default <code>api_key</code> <code>str | None</code> <p>specify the API key to use for the connection.</p> <code>None</code> <code>chain</code> <code>str</code> <p>identifier of the chain to use in all the requests. The supported chains are available on <code>BirdeyeChain</code>. Import them from the library to use the correct identifier.</p> <code>BirdeyeChain.SOLANA.value</code> <p>Example <pre><code>import asyncio\nfrom cyhole.birdeye import Birdeye\n\nbirdeye = Birdeye()\n\n# Get current token list on Solana\n# synchronous\nresponse = birdeye.client.get_token_list()\nprint(f\"Currently listed {len(response.data.tokens)} tokens on Solana\")\n\n# asynchronous\nasync def main() -&gt; None:\n    async with birdeye.async_client as client:\n        response = await client.get_token_list()\n        print(f\"Currently listed {len(response.data.tokens)} tokens on Solana\")\n\nasyncio.run(main())\n</code></pre></p> <p>Raises:</p> Type Description <code>MissingAPIKeyError</code> <p>if no API Key was available during the object creation.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def __init__(self, api_key: str | None = None, chain: str = BirdeyeChain.SOLANA.value) -&gt; None:\n\n    # set API\n    self.api_key = api_key if api_key is not None else os.environ.get(\"BIRDEYE_API_KEY\")\n    if self.api_key is None:\n        raise MissingAPIKeyError(\"no API key is provided during object's creation.\")\n\n    # headers setup\n    headers = {\n        \"X-API-KEY\": self.api_key,\n        \"x-chain\": chain\n    }\n    super().__init__(headers)\n    self.headers: dict[str, str]\n\n    # clients\n    self.client = BirdeyeClient(self, headers = headers)\n    self.async_client = BirdeyeAsyncClient(self, headers = headers)\n\n    # API urls\n    self.url_api_public = \"https://public-api.birdeye.so/defi/\"\n    self.url_api_private = \"https://public-api.birdeye.so/defi/\"\n    self.url_api_private_wallet = \"https://public-api.birdeye.so/v1/wallet\"\n    return\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_token_list","title":"_get_token_list","text":"<pre><code>_get_token_list(\n    sync: Literal[True],\n    sort_by: str = BirdeyeSort.SORT_V24HUSD.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; GetTokenListResponse\n</code></pre><pre><code>_get_token_list(\n    sync: Literal[False],\n    sort_by: str = BirdeyeSort.SORT_V24HUSD.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; Coroutine[None, None, GetTokenListResponse]\n</code></pre> <pre><code>_get_token_list(\n    sync: bool,\n    sort_by: str = BirdeyeSort.SORT_V24HUSD.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; (\n    GetTokenListResponse\n    | Coroutine[None, None, GetTokenListResponse]\n)\n</code></pre> <p>This function refers to the PUBLIC API endpoint Token - List and is used  to get the list of Birdeye tokens according on a specific chain.</p> <p>Parameters:</p> Name Type Description Default <code>sort_by</code> <code>str</code> <p>define the type of sorting to apply in the extraction; e.g. USD volume in the last 24h. The sorting types are available on <code>BirdeyeSort</code>. Import them from the library to use the correct identifier.</p> <code>BirdeyeSort.SORT_V24HUSD.value</code> <code>order_by</code> <code>str</code> <p>define the type of ordering to apply in the  extraction; e.g. ascending or descending. The sorting types are available on <code>BirdeyeOrder</code>. Import them from the library to use the correct identifier.</p> <code>BirdeyeOrder.DESCENDING.value</code> <code>offset</code> <code>int | None</code> <p>offset to apply in the extraction.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>limit the number of returned records in the extraction.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetTokenListResponse | Coroutine[None, None, GetTokenListResponse]</code> <p>list of tokens returned by birdeye.so</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_token_list(\n    self,\n    sync: bool,\n    sort_by: str = BirdeyeSort.SORT_V24HUSD.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None\n) -&gt; GetTokenListResponse | Coroutine[None, None, GetTokenListResponse]:\n    \"\"\"\n        This function refers to the **PUBLIC** API endpoint **[Token - List](https://docs.birdeye.so/reference/get_defi-tokenlist)** and is used \n        to get the list of Birdeye tokens according on a specific chain.\n\n        Parameters:\n            sort_by: define the type of sorting to apply in the\n                extraction; e.g. USD volume in the last 24h.\n                The sorting types are available on [`BirdeyeSort`][cyhole.birdeye.param.BirdeyeSort].\n                Import them from the library to use the correct identifier.\n            order_by: define the type of ordering to apply in the \n                extraction; e.g. ascending or descending.\n                The sorting types are available on [`BirdeyeOrder`][cyhole.birdeye.param.BirdeyeOrder].\n                Import them from the library to use the correct identifier.\n            offset: offset to apply in the extraction.\n            limit: limit the number of returned records in the extraction.\n\n        Returns:\n            list of tokens returned by birdeye.so\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # check param consistency\n    BirdeyeSort.check(sort_by)\n    BirdeyeOrder.check(order_by)\n\n    # set params\n    url = self.url_api_public + \"tokenlist\"\n    params = {\n        \"sort_by\" : sort_by,\n        \"sort_type\" : order_by,\n        \"offset\" : offset,\n        \"limit\": limit\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetTokenListResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetTokenListResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_token_creation_info","title":"_get_token_creation_info","text":"<pre><code>_get_token_creation_info(\n    sync: Literal[True], address: str\n) -&gt; GetTokenCreationInfoResponse\n</code></pre><pre><code>_get_token_creation_info(\n    sync: Literal[False], address: str\n) -&gt; Coroutine[None, None, GetTokenCreationInfoResponse]\n</code></pre> <pre><code>_get_token_creation_info(\n    sync: bool, address: str\n) -&gt; (\n    GetTokenCreationInfoResponse\n    | Coroutine[None, None, GetTokenCreationInfoResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint Token - Creation Token Info and is used  to get the current price of a token according on a specific chain on Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <p>Returns:</p> Type Description <code>GetTokenCreationInfoResponse | Coroutine[None, None, GetTokenCreationInfoResponse]</code> <p>token's creation information.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_token_creation_info(\n    self,\n    sync: bool,\n    address: str\n) -&gt; GetTokenCreationInfoResponse | Coroutine[None, None, GetTokenCreationInfoResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[Token - Creation Token Info](https://docs.birdeye.so/reference/get_defi-token-creation-info)** and is used \n        to get the current price of a token according on a specific chain on Birdeye.\n\n        Parameters:\n            address: CA of the token to search on the chain.\n\n        Returns:\n            token's creation information.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # set params\n    url = self.url_api_public + \"token_creation_info\"\n    params = {\n        \"address\" : address\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetTokenCreationInfoResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetTokenCreationInfoResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_token_security","title":"_get_token_security","text":"<pre><code>_get_token_security(\n    sync: Literal[True], address: str\n) -&gt; GetTokenSecurityResponse\n</code></pre><pre><code>_get_token_security(\n    sync: Literal[False], address: str\n) -&gt; Coroutine[None, None, GetTokenSecurityResponse]\n</code></pre> <pre><code>_get_token_security(\n    sync: bool, address: str\n) -&gt; (\n    GetTokenSecurityResponse\n    | Coroutine[None, None, GetTokenSecurityResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint Token - Security and is used  to get the useful information related to the security of a token  on a specific chain calculated by Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <p>Returns:</p> Type Description <code>GetTokenSecurityResponse | Coroutine[None, None, GetTokenSecurityResponse]</code> <p>token's security information. Observe that the content of <code>data</code> value depends on the selected chain.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_token_security(\n    self,\n    sync: bool,\n    address: str\n) -&gt; GetTokenSecurityResponse | Coroutine[None, None, GetTokenSecurityResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[Token - Security](https://docs.birdeye.so/reference/get_defi-token-security)** and is used \n        to get the useful information related to the security of a token  on a specific\n        chain calculated by Birdeye.\n\n        Parameters:\n            address: CA of the token to search on the chain.\n\n        Returns:\n            token's security information.\n                Observe that the content of `data` value depends on the selected chain.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # set params\n    url = self.url_api_public + \"token_security\"\n    params = {\n        \"address\" : address\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetTokenSecurityResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetTokenSecurityResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_token_overview","title":"_get_token_overview","text":"<pre><code>_get_token_overview(\n    sync: Literal[True], address: str\n) -&gt; GetTokenOverviewResponse\n</code></pre><pre><code>_get_token_overview(\n    sync: Literal[False], address: str\n) -&gt; Coroutine[None, None, GetTokenOverviewResponse]\n</code></pre> <pre><code>_get_token_overview(\n    sync: bool, address: str\n) -&gt; (\n    GetTokenOverviewResponse\n    | Coroutine[None, None, GetTokenOverviewResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint Token - Overview and is used  to get all kind of information (token/mint/creator adresses, high level statistics, ...) of a token on a specific chain calculated by Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <p>Returns:</p> Type Description <code>GetTokenOverviewResponse | Coroutine[None, None, GetTokenOverviewResponse]</code> <p>token's information. Observe that the content of <code>data</code> value depends on the selected chain.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_token_overview(\n    self,\n    sync: bool,\n    address: str\n) -&gt; GetTokenOverviewResponse | Coroutine[None, None, GetTokenOverviewResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[Token - Overview](https://docs.birdeye.so/reference/get_defi-token-overview)** and is used \n        to get all kind of information (token/mint/creator adresses, high level statistics, ...)\n        of a token on a specific chain calculated by Birdeye.\n\n        Parameters:\n            address: CA of the token to search on the chain.\n\n        Returns:\n            token's information.\n                Observe that the content of `data` value depends on the selected chain.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # set params\n    url = self.url_api_public + \"token_overview\"\n    params = {\n        \"address\" : address\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetTokenOverviewResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetTokenOverviewResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_price","title":"_get_price","text":"<pre><code>_get_price(\n    sync: Literal[True],\n    address: str,\n    include_liquidity: bool | None = None,\n) -&gt; GetPriceResponse\n</code></pre><pre><code>_get_price(\n    sync: Literal[False],\n    address: str,\n    include_liquidity: bool | None = None,\n) -&gt; Coroutine[None, None, GetPriceResponse]\n</code></pre> <pre><code>_get_price(\n    sync: bool,\n    address: str,\n    include_liquidity: bool | None = None,\n) -&gt; (\n    GetPriceResponse\n    | Coroutine[None, None, GetPriceResponse]\n)\n</code></pre> <p>This function refers to the PUBLIC API endpoint Price and is used  to get the current price of a token according on a specific chain on Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <code>include_liquidity</code> <code>bool | None</code> <p>include the current liquidity of the token. Default Value: <code>None</code> (<code>False</code>)</p> <code>None</code> <p>Returns:</p> Type Description <code>GetPriceResponse | Coroutine[None, None, GetPriceResponse]</code> <p>token's price returned by birdeye.so.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_price(\n    self,\n    sync: bool,\n    address: str,\n    include_liquidity: bool | None = None\n) -&gt; GetPriceResponse | Coroutine[None, None, GetPriceResponse]:\n    \"\"\"\n        This function refers to the **PUBLIC** API endpoint **[Price](https://docs.birdeye.so/reference/get_defi-price)** and is used \n        to get the current price of a token according on a specific chain on Birdeye.\n\n        Parameters:\n            address: CA of the token to search on the chain.\n            include_liquidity: include the current liquidity of the token.\n                Default Value: `None` (`False`)\n\n        Returns:\n            token's price returned by birdeye.so.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"        # set params\n    url = self.url_api_public + \"price\"\n    params = {\n        \"address\" : address,\n        \"include_liquidity\" : str(include_liquidity).lower() if include_liquidity else None\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetPriceResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetPriceResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_price_multiple","title":"_get_price_multiple","text":"<pre><code>_get_price_multiple(\n    sync: Literal[True],\n    list_address: list[str],\n    include_liquidity: bool | None = None,\n) -&gt; GetPriceMultipleResponse\n</code></pre><pre><code>_get_price_multiple(\n    sync: Literal[False],\n    list_address: list[str],\n    include_liquidity: bool | None = None,\n) -&gt; Coroutine[None, None, GetPriceMultipleResponse]\n</code></pre> <pre><code>_get_price_multiple(\n    sync: bool,\n    list_address: list[str],\n    include_liquidity: bool | None = None,\n) -&gt; (\n    GetPriceMultipleResponse\n    | Coroutine[None, None, GetPriceMultipleResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint Price - Multiple and is used  to get the current price of multeple tokens on a specific chain on Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>list_address</code> <code>list[str]</code> <p>CA of the tokens to search on the chain.</p> required <code>include_liquidity</code> <code>bool | None</code> <p>include the current liquidity of the token. Default Value: <code>None</code> (<code>False</code>)</p> <code>None</code> <p>Returns:</p> Type Description <code>GetPriceMultipleResponse | Coroutine[None, None, GetPriceMultipleResponse]</code> <p>list of tokens returned by birdeye.so.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_price_multiple(\n    self,\n    sync: bool,\n    list_address: list[str],\n    include_liquidity: bool | None = None\n) -&gt; GetPriceMultipleResponse | Coroutine[None, None, GetPriceMultipleResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[Price - Multiple](https://docs.birdeye.so/reference/get_defi-multi-price)** and is used \n        to get the current price of multeple tokens on a specific chain on Birdeye.\n\n        Parameters:\n            list_address: CA of the tokens to search on the chain.\n            include_liquidity: include the current liquidity of the token.\n                Default Value: `None` (`False`)\n\n        Returns:\n            list of tokens returned by birdeye.so.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # set params\n    url = self.url_api_public + \"multi_price\"\n    params = {\n        \"list_address\" : \",\".join(list_address),\n        \"include_liquidity\" : str(include_liquidity).lower() if include_liquidity else None\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetPriceMultipleResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetPriceMultipleResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_price_historical","title":"_get_price_historical","text":"<pre><code>_get_price_historical(\n    sync: Literal[True],\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n) -&gt; GetPriceHistoricalResponse\n</code></pre><pre><code>_get_price_historical(\n    sync: Literal[False],\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n) -&gt; Coroutine[None, None, GetPriceHistoricalResponse]\n</code></pre> <pre><code>_get_price_historical(\n    sync: bool,\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n) -&gt; (\n    GetPriceHistoricalResponse\n    | Coroutine[None, None, GetPriceHistoricalResponse]\n)\n</code></pre> <p>This function refers to the PUBLIC API endpoint Price - Historical and is used  to get the history of prices of a token according on a specific chain on Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <code>address_type</code> <code>str</code> <p>the type of address involved in the extraction. The supported chains are available on <code>BirdeyeAddressType</code>. Import them from the library to use the correct identifier.</p> required <code>timeframe</code> <code>str</code> <p>the type of timeframe involved in the extraction. The timeframe is used to define intervall between a measure and the next one. The supported chains are available on <code>BirdeyeTimeFrame</code>. Import them from the library to use the correct identifier.</p> required <code>dt_from</code> <code>datetime</code> <p>beginning time to take take price data.</p> required <code>dt_to</code> <code>datetime | None</code> <p>end time to take take price data. It should be <code>dt_from</code> &lt; <code>dt_to</code>. If not ptovided (None), the current time is used.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetPriceHistoricalResponse | Coroutine[None, None, GetPriceHistoricalResponse]</code> <p>list of prices returned by birdeye.so.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_price_historical(\n    self,\n    sync: bool,\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None\n) -&gt; GetPriceHistoricalResponse | Coroutine[None, None, GetPriceHistoricalResponse]:\n    \"\"\"\n        This function refers to the **PUBLIC** API endpoint **[Price - Historical](https://docs.birdeye.so/reference/get_defi-history-price)** and is used \n        to get the history of prices of a token according on a specific chain on Birdeye.\n\n        Parameters:\n            address: CA of the token to search on the chain.\n            address_type: the type of address involved in the extraction.\n                The supported chains are available on [`BirdeyeAddressType`][cyhole.birdeye.param.BirdeyeAddressType].\n                Import them from the library to use the correct identifier.\n            timeframe: the type of timeframe involved in the extraction.\n                The timeframe is used to define intervall between a measure and the next one.\n                The supported chains are available on [`BirdeyeTimeFrame`][cyhole.birdeye.param.BirdeyeTimeFrame].\n                Import them from the library to use the correct identifier.\n            dt_from: beginning time to take take price data.\n            dt_to: end time to take take price data.\n                It should be `dt_from` &lt; `dt_to`.\n                If not ptovided (None), the current time is used.\n\n        Returns:\n            list of prices returned by birdeye.so.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # check param consistency\n    BirdeyeAddressType.check(address_type)\n    BirdeyeTimeFrame.check(timeframe)\n\n    # set default\n    if dt_to is None:\n        dt_to = datetime.now()\n\n    # check consistency\n    if dt_from &gt; dt_to:\n        raise BirdeyeTimeRangeError(\"Inconsistent timewindow provided: 'dt_from' &gt; 'dt_to'\")\n\n    # set params\n    url = self.url_api_public + \"history_price\"\n    params = {\n        \"address\" : address,\n        \"address_type\" : address_type,\n        \"type\" : timeframe,\n        \"time_from\" : int(dt_from.timestamp()),\n        \"time_to\" : int(dt_to.timestamp())\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetPriceHistoricalResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetPriceHistoricalResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_price_volume_single","title":"_get_price_volume_single","text":"<pre><code>_get_price_volume_single(\n    sync: Literal[True],\n    address: str,\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; GetPriceVolumeSingleResponse\n</code></pre><pre><code>_get_price_volume_single(\n    sync: Literal[False],\n    address: str,\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; Coroutine[None, None, GetPriceVolumeSingleResponse]\n</code></pre> <pre><code>_get_price_volume_single(\n    sync: bool,\n    address: str,\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; (\n    GetPriceVolumeSingleResponse\n    | Coroutine[None, None, GetPriceVolumeSingleResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint Price Volume - Single Token and is used  to get the current price and volume data for a specified token over a given time period on Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <code>timeframe</code> <code>str</code> <p>the type of timeframe involved in the extraction. The timeframe is used to define intervall between a measure and the next one. The supported timeframes are available on <code>BirdeyeHourTimeFrame</code>. Import them from the library to use the correct identifier.</p> <code>BirdeyeHourTimeFrame.H24.value</code> <p>Returns:</p> Type Description <code>GetPriceVolumeSingleResponse | Coroutine[None, None, GetPriceVolumeSingleResponse]</code> <p>current price and volume data for a specified token over a given time period.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is not aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_price_volume_single(self, sync: bool, address: str, timeframe: str = BirdeyeHourTimeFrame.H24.value) -&gt; GetPriceVolumeSingleResponse | Coroutine[None, None, GetPriceVolumeSingleResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[Price Volume - Single Token](https://docs.birdeye.so/reference/get_defi-price-volume-single)** and is used \n        to get the current price and volume data for a specified token over a given time period on Birdeye.\n\n        Parameters:\n            address: CA of the token to search on the chain.\n            timeframe: the type of timeframe involved in the extraction.\n                The timeframe is used to define intervall between a measure and the next one.\n                The supported timeframes are available on [`BirdeyeHourTimeFrame`][cyhole.birdeye.param.BirdeyeHourTimeFrame].\n                Import them from the library to use the correct identifier.\n\n        Returns:\n            current price and volume data for a specified token over a given time period.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is not aligned to it.\n    \"\"\"\n    # check param consistency\n    BirdeyeHourTimeFrame.check(timeframe)\n\n    # set params\n    url = self.url_api_private + \"price_volume/single\"\n    params = {\n        \"address\" : address,\n        \"type\" : timeframe\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetPriceVolumeSingleResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetPriceVolumeSingleResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._post_price_volume_multi","title":"_post_price_volume_multi","text":"<pre><code>_post_price_volume_multi(\n    sync: Literal[True],\n    list_address: list[str],\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; PostPriceVolumeMultiResponse\n</code></pre><pre><code>_post_price_volume_multi(\n    sync: Literal[False],\n    list_address: list[str],\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; Coroutine[None, None, PostPriceVolumeMultiResponse]\n</code></pre> <pre><code>_post_price_volume_multi(\n    sync: bool,\n    list_address: list[str],\n    timeframe: str = BirdeyeHourTimeFrame.H24.value,\n) -&gt; (\n    PostPriceVolumeMultiResponse\n    | Coroutine[None, None, PostPriceVolumeMultiResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint Price Volume - Multiple Token and is used  to get the current price and volume data for multiple tokens over a given time period on Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>list_address</code> <code>list[str]</code> <p>list of CA of the tokens to search on the chain.</p> required <code>timeframe</code> <code>str</code> <p>the type of timeframe involved in the extraction. The timeframe is used to define intervall between a measure and the next one. The supported timeframes are available on <code>BirdeyeHourTimeFrame</code>. Import them from the library to use the correct identifier.</p> <code>BirdeyeHourTimeFrame.H24.value</code> <p>Returns:</p> Type Description <code>PostPriceVolumeMultiResponse | Coroutine[None, None, PostPriceVolumeMultiResponse]</code> <p>current price and volume data for multiple tokens over a given time period.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is not aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _post_price_volume_multi(self, sync: bool, list_address: list[str], timeframe: str = BirdeyeHourTimeFrame.H24.value) -&gt; PostPriceVolumeMultiResponse | Coroutine[None, None, PostPriceVolumeMultiResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[Price Volume - Multiple Token](https://docs.birdeye.so/reference/post_defi-price-volume-multi)** and is used \n        to get the current price and volume data for multiple tokens over a given time period on Birdeye.\n\n        Parameters:\n            list_address: list of CA of the tokens to search on the chain.\n            timeframe: the type of timeframe involved in the extraction.\n                The timeframe is used to define intervall between a measure and the next one.\n                The supported timeframes are available on [`BirdeyeHourTimeFrame`][cyhole.birdeye.param.BirdeyeHourTimeFrame].\n                Import them from the library to use the correct identifier.\n\n        Returns:\n            current price and volume data for multiple tokens over a given time period.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is not aligned to it.\n    \"\"\"\n    # check param consistency\n    BirdeyeHourTimeFrame.check(timeframe)\n\n    # set params\n    url = self.url_api_private + \"price_volume/multi\"\n\n    # set headers\n    headers = self.headers.copy()\n    headers[\"content-type\"] = \"application/json\"\n\n    # set body\n    body = {\n        \"list_address\" : \",\".join(list_address),\n        \"type\" : timeframe\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.POST.value, url, json = body, headers = headers)\n        return PostPriceVolumeMultiResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.POST.value, url, json = body, headers = headers)\n            return PostPriceVolumeMultiResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_trades_token","title":"_get_trades_token","text":"<pre><code>_get_trades_token(\n    sync: Literal[True],\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; GetTradesTokenResponse\n</code></pre><pre><code>_get_trades_token(\n    sync: Literal[False],\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; Coroutine[None, None, GetTradesTokenResponse]\n</code></pre> <pre><code>_get_trades_token(\n    sync: bool,\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; (\n    GetTradesTokenResponse\n    | Coroutine[None, None, GetTradesTokenResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint Trades - Token and is used  to get the associated trades of a token according on a specific chain on Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <code>trade_type</code> <code>str</code> <p>the type of transactions to extract. The supported chains are available on <code>BirdeyeTradeType</code>. Import them from the library to use the correct identifier.</p> <code>BirdeyeTradeType.SWAP.value</code> <code>offset</code> <code>int | None</code> <p>offset to apply in the extraction.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>limit the number of returned records in the extraction.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetTradesTokenResponse | Coroutine[None, None, GetTradesTokenResponse]</code> <p>list of prices returned by birdeye.so.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_trades_token(\n        self,\n        sync: bool,\n        address: str,\n        trade_type: str = BirdeyeTradeType.SWAP.value,\n        offset: int | None = None,\n        limit: int | None = None\n) -&gt; GetTradesTokenResponse | Coroutine[None, None, GetTradesTokenResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[Trades - Token](https://docs.birdeye.so/reference/get_defi-txs-token)** and is used \n        to get the associated trades of a token according on a specific chain on Birdeye.\n\n        Parameters:\n            address: CA of the token to search on the chain.\n            trade_type: the type of transactions to extract.\n                The supported chains are available on [`BirdeyeTradeType`][cyhole.birdeye.param.BirdeyeTradeType].\n                Import them from the library to use the correct identifier.\n            offset: offset to apply in the extraction.\n            limit: limit the number of returned records in the extraction.\n\n        Returns:\n            list of prices returned by birdeye.so.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # check param consistency\n    BirdeyeTradeType.check(trade_type)\n\n    # set params\n    url = self.url_api_private + \"txs/token\"\n    params = {\n        \"address\" : address,\n        \"tx_type\" : trade_type,\n        \"offset\" : offset,\n        \"limit\": limit\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetTradesTokenResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetTradesTokenResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_trades_pair","title":"_get_trades_pair","text":"<pre><code>_get_trades_pair(\n    sync: Literal[True],\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; GetTradesPairResponse\n</code></pre><pre><code>_get_trades_pair(\n    sync: Literal[False],\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; Coroutine[None, None, GetTradesPairResponse]\n</code></pre> <pre><code>_get_trades_pair(\n    sync: bool,\n    address: str,\n    trade_type: str = BirdeyeTradeType.SWAP.value,\n    order_by: str = BirdeyeOrder.DESCENDING.value,\n    offset: int | None = None,\n    limit: int | None = None,\n) -&gt; (\n    GetTradesPairResponse\n    | Coroutine[None, None, GetTradesPairResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint Trades - Pair and is used  to get the associated trades of a tokens pair according on a specific chain on Birdeye.  Use the 'Trades - Token' endpoint to retrieve the trades associated to a specific token.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <code>trade_type</code> <code>str</code> <p>the type of transactions to extract. The supported chains are available on <code>BirdeyeTradeType</code>. Import them from the library to use the correct identifier.</p> <code>BirdeyeTradeType.SWAP.value</code> <code>order_by</code> <code>str</code> <p>define the type of ordering to apply in the  extraction; e.g. ascending or descending. The sorting types are available on <code>BirdeyeOrder</code>. Import them from the library to use the correct identifier.</p> <code>BirdeyeOrder.DESCENDING.value</code> <code>offset</code> <code>int | None</code> <p>offset to apply in the extraction.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>limit the number of returned records in the extraction.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetTradesPairResponse | Coroutine[None, None, GetTradesPairResponse]</code> <p>list of prices returned by birdeye.so.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_trades_pair(\n        self,\n        sync: bool,\n        address: str,\n        trade_type: str = BirdeyeTradeType.SWAP.value,\n        order_by: str = BirdeyeOrder.DESCENDING.value,\n        offset: int | None = None,\n        limit: int | None = None\n) -&gt; GetTradesPairResponse | Coroutine[None, None, GetTradesPairResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[Trades - Pair](https://docs.birdeye.so/reference/get_defi-txs-pair)** and is used \n        to get the associated trades of a tokens pair according on a specific chain on Birdeye. \n        Use the 'Trades - Token' endpoint to retrieve the trades associated to a specific token.\n\n        Parameters:\n            address: CA of the token to search on the chain.\n            trade_type: the type of transactions to extract.\n                The supported chains are available on [`BirdeyeTradeType`][cyhole.birdeye.param.BirdeyeTradeType].\n                Import them from the library to use the correct identifier.\n            order_by: define the type of ordering to apply in the \n                extraction; e.g. ascending or descending.\n                The sorting types are available on [`BirdeyeOrder`][cyhole.birdeye.param.BirdeyeOrder].\n                Import them from the library to use the correct identifier.\n            offset: offset to apply in the extraction.\n            limit: limit the number of returned records in the extraction.\n\n        Returns:\n            list of prices returned by birdeye.so.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # check param consistency\n    BirdeyeOrder.check(order_by)\n    BirdeyeTradeType.check(trade_type)\n\n    # set params\n    url = self.url_api_private + \"txs/pair\"\n    params = {\n        \"address\" : address,\n        \"tx_type\" : trade_type,\n        \"sort_type\": order_by,\n        \"offset\" : offset,\n        \"limit\": limit\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetTradesPairResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetTradesPairResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_ohlcv","title":"_get_ohlcv","text":"<pre><code>_get_ohlcv(\n    sync: Literal[True],\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n    chain: str = BirdeyeChain.SOLANA.value,\n) -&gt; GetOHLCVTokenPairResponse\n</code></pre><pre><code>_get_ohlcv(\n    sync: Literal[False],\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n    chain: str = BirdeyeChain.SOLANA.value,\n) -&gt; Coroutine[None, None, GetOHLCVTokenPairResponse]\n</code></pre> <pre><code>_get_ohlcv(\n    sync: bool,\n    address: str,\n    address_type: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n    chain: str = BirdeyeChain.SOLANA.value,\n) -&gt; (\n    GetOHLCVTokenPairResponse\n    | Coroutine[None, None, GetOHLCVTokenPairResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint OHLCV - Token/Pair and is used to get the  Open, High, Low, Close, and Volume (OHLCV) data for a specific token/pair on a chain on Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <code>address_type</code> <code>str</code> <p>the type of address involved in the extraction (token/pair). The supported chains are available on <code>BirdeyeAddressType</code>. Import them from the library to use the correct identifier.</p> required <code>timeframe</code> <code>str</code> <p>the type of timeframe involved in the extraction. The timeframe is used to define intervall between a measure and the next one. The supported chains are available on <code>BirdeyeTimeFrame</code>. Import them from the library to use the correct identifier.</p> required <code>dt_from</code> <code>datetime</code> <p>beginning time to take take price data.</p> required <code>dt_to</code> <code>datetime | None</code> <p>end time to take take price data. It should be <code>dt_from</code> &lt; <code>dt_to</code>. If not ptovided (None), the current time is used.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetOHLCVTokenPairResponse | Coroutine[None, None, GetOHLCVTokenPairResponse]</code> <p>list of prices returned by birdeye.so.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_ohlcv(\n        self,\n        sync: bool,\n        address: str,\n        address_type: str,\n        timeframe: str,\n        dt_from: datetime,\n        dt_to: datetime | None = None,\n        chain: str = BirdeyeChain.SOLANA.value\n) -&gt; GetOHLCVTokenPairResponse | Coroutine[None, None, GetOHLCVTokenPairResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[OHLCV - Token/Pair](https://docs.birdeye.so/reference/get_defi-ohlcv)** and is used to get the \n        Open, High, Low, Close, and Volume (OHLCV) data for a specific token/pair on a chain on Birdeye.\n\n        Parameters:\n            address: CA of the token to search on the chain.\n            address_type: the type of address involved in the extraction (token/pair).\n                The supported chains are available on [`BirdeyeAddressType`][cyhole.birdeye.param.BirdeyeAddressType].\n                Import them from the library to use the correct identifier.\n            timeframe: the type of timeframe involved in the extraction.\n                The timeframe is used to define intervall between a measure and the next one.\n                The supported chains are available on [`BirdeyeTimeFrame`][cyhole.birdeye.param.BirdeyeTimeFrame].\n                Import them from the library to use the correct identifier.\n            dt_from: beginning time to take take price data.\n            dt_to: end time to take take price data.\n                It should be `dt_from` &lt; `dt_to`.\n                If not ptovided (None), the current time is used.\n\n        Returns:\n            list of prices returned by birdeye.so.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # check param consistency\n    BirdeyeAddressType.check(address_type)\n    BirdeyeTimeFrame.check(timeframe)\n\n    # set default\n    if dt_to is None:\n        dt_to = datetime.now()\n\n    # check consistency\n    if dt_from &gt; dt_to:\n        raise BirdeyeTimeRangeError(\"Inconsistent timewindow provided: 'dt_from' &gt; 'dt_to'\")\n\n    # set params\n    url = self.url_api_public + \"ohlcv\"\n    if address_type == BirdeyeAddressType.PAIR.value:\n        url = url + \"/\" + BirdeyeAddressType.PAIR.value\n    params = {\n        \"address\" : address,\n        \"type\" : timeframe,\n        \"time_from\" : int(dt_from.timestamp()),\n        \"time_to\" : int(dt_to.timestamp())\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetOHLCVTokenPairResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetOHLCVTokenPairResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_ohlcv_base_quote","title":"_get_ohlcv_base_quote","text":"<pre><code>_get_ohlcv_base_quote(\n    sync: Literal[True],\n    base_address: str,\n    quote_address: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n    chain: str = BirdeyeChain.SOLANA.value,\n) -&gt; GetOHLCVBaseQuoteResponse\n</code></pre><pre><code>_get_ohlcv_base_quote(\n    sync: Literal[False],\n    base_address: str,\n    quote_address: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n    chain: str = BirdeyeChain.SOLANA.value,\n) -&gt; Coroutine[None, None, GetOHLCVBaseQuoteResponse]\n</code></pre> <pre><code>_get_ohlcv_base_quote(\n    sync: bool,\n    base_address: str,\n    quote_address: str,\n    timeframe: str,\n    dt_from: datetime,\n    dt_to: datetime | None = None,\n    chain: str = BirdeyeChain.SOLANA.value,\n) -&gt; (\n    GetOHLCVBaseQuoteResponse\n    | Coroutine[None, None, GetOHLCVBaseQuoteResponse]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint OHLCV - Base/Quote and is used to get the  Open, High, Low, Close, and Volume (OHLCV) data for a specific base/quote combination  on a chain on Birdeye.</p> <p>Parameters:</p> Name Type Description Default <code>base_address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <code>quote_address</code> <code>str</code> <p>CA of the token to search on the chain.</p> required <code>timeframe</code> <code>str</code> <p>the type of timeframe involved in the extraction. The timeframe is used to define intervall between a measure and the next one. The supported chains are available on <code>BirdeyeTimeFrame</code>. Import them from the library to use the correct identifier.</p> required <code>dt_from</code> <code>datetime</code> <p>beginning time to take take price data.</p> required <code>dt_to</code> <code>datetime | None</code> <p>end time to take take price data. It should be <code>dt_from</code> &lt; <code>dt_to</code>. If not ptovided (None), the current time is used.</p> <code>None</code> <p>Returns:     list of prices returned by birdeye.so.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> <code>ParamUnknownError</code> <p>if one of the input parameter belonging to the value list is aligned to it.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_ohlcv_base_quote(\n        self,\n        sync: bool,\n        base_address: str,\n        quote_address: str,\n        timeframe: str,\n        dt_from: datetime,\n        dt_to: datetime | None = None,\n        chain: str = BirdeyeChain.SOLANA.value\n) -&gt; GetOHLCVBaseQuoteResponse | Coroutine[None, None, GetOHLCVBaseQuoteResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[OHLCV - Base/Quote](https://docs.birdeye.so/reference/get_defi-ohlcv-base-quote)** and is used to get the \n        Open, High, Low, Close, and Volume (OHLCV) data for a specific base/quote combination \n        on a chain on Birdeye.\n\n        Parameters:\n            base_address: CA of the token to search on the chain.\n            quote_address: CA of the token to search on the chain.\n            timeframe: the type of timeframe involved in the extraction.\n                The timeframe is used to define intervall between a measure and the next one.\n                The supported chains are available on [`BirdeyeTimeFrame`][cyhole.birdeye.param.BirdeyeTimeFrame].\n                Import them from the library to use the correct identifier.\n            dt_from: beginning time to take take price data.\n            dt_to: end time to take take price data.\n                It should be `dt_from` &lt; `dt_to`.\n                If not ptovided (None), the current time is used.\n        Returns:\n            list of prices returned by birdeye.so.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n            ParamUnknownError: if one of the input parameter belonging to the value list is aligned to it.\n    \"\"\"\n    # check param consistency\n    BirdeyeTimeFrame.check(timeframe)\n\n    # set default\n    if dt_to is None:\n        dt_to = datetime.now()\n\n    # check consistency\n    if dt_from &gt; dt_to:\n        raise BirdeyeTimeRangeError(\"Inconsistent timewindow provided: 'dt_from' &gt; 'dt_to'\")\n\n    # set params\n    url = self.url_api_public + \"ohlcv/base_quote\"\n    params = {\n        \"base_address\" : base_address,\n        \"quote_address\" : quote_address,\n        \"type\" : timeframe,\n        \"time_from\" : int(dt_from.timestamp()),\n        \"time_to\" : int(dt_to.timestamp())\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetOHLCVBaseQuoteResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetOHLCVBaseQuoteResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/interaction.html#cyhole.birdeye.Birdeye._get_wallet_supported_networks","title":"_get_wallet_supported_networks","text":"<pre><code>_get_wallet_supported_networks(\n    sync: Literal[True],\n) -&gt; GetWalletSupportedNetworksResponse\n</code></pre><pre><code>_get_wallet_supported_networks(\n    sync: Literal[False],\n) -&gt; Coroutine[\n    None, None, GetWalletSupportedNetworksResponse\n]\n</code></pre> <pre><code>_get_wallet_supported_networks(\n    sync: bool,\n) -&gt; (\n    GetWalletSupportedNetworksResponse\n    | Coroutine[\n        None, None, GetWalletSupportedNetworksResponse\n    ]\n)\n</code></pre> <p>This function refers to the PRIVATE API endpoint Wallet - Supported Networks and  it is used to get the list of supported chains on Birdeye.</p> <p>Returns:</p> Type Description <code>GetWalletSupportedNetworksResponse | Coroutine[None, None, GetWalletSupportedNetworksResponse]</code> <p>list of chains returned by birdeye.so.</p> <p>Raises:</p> Type Description <code>BirdeyeAuthorisationError</code> <p>if the API key provided does not give access to related endpoint.</p> Source code in <code>src/cyhole/birdeye/interaction.py</code> <pre><code>def _get_wallet_supported_networks(self, sync: bool) -&gt; GetWalletSupportedNetworksResponse | Coroutine[None, None, GetWalletSupportedNetworksResponse]:\n    \"\"\"\n        This function refers to the **PRIVATE** API endpoint **[Wallet - Supported Networks](https://docs.birdeye.so/reference/get_v1-wallet-list-supported-chain)** and \n        it is used to get the list of supported chains on Birdeye.\n\n        Returns:\n            list of chains returned by birdeye.so.\n\n        Raises:\n            BirdeyeAuthorisationError: if the API key provided does not give access to related endpoint.\n    \"\"\"\n    url = self.url_api_private_wallet + \"/list_supported_chain\"\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url)\n        return GetWalletSupportedNetworksResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url)\n            return GetWalletSupportedNetworksResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/birdeye/param.html","title":"Parameters","text":"<p>Some endpoints require input parameters belonging to specific domains. On this page, all domains can be found in order to be in line with the standards required by the API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param","title":"cyhole.birdeye.param","text":""},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain","title":"BirdeyeChain","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Birdeye's chains.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain.SOLANA","title":"SOLANA  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SOLANA = 'solana'\n</code></pre> <p>Identifier of the Solana chain in Birdeye API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain.ETHEREUM","title":"ETHEREUM  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ETHEREUM = 'ethereum'\n</code></pre> <p>Identifier of the Ethereum chain in Birdeye API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain.ARBITRUM","title":"ARBITRUM  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ARBITRUM = 'arbitrum'\n</code></pre> <p>Identifier of the Arbitrum chain in Birdeye API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain.AVALANCHE","title":"AVALANCHE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>AVALANCHE = 'avalanche'\n</code></pre> <p>Identifier of the Avalanche chain in Birdeye API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain.BSC","title":"BSC  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BSC = 'bsc'\n</code></pre> <p>Identifier of the BSC (Binance Smart Chain) chain in Birdeye API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain.OPTIMISM","title":"OPTIMISM  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>OPTIMISM = 'optimism'\n</code></pre> <p>Identifier of the Optimism chain in Birdeye API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain.POLYGON","title":"POLYGON  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>POLYGON = 'polygon'\n</code></pre> <p>Identifier of the Polygon chain in Birdeye API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain.BASE","title":"BASE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BASE = 'base'\n</code></pre> <p>Identifier of the Base chain in Birdeye API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeChain.ZKSYNC","title":"ZKSYNC  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ZKSYNC = 'zksync'\n</code></pre> <p>Identifier of the zkSync chain in Birdeye API.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeOrder","title":"BirdeyeOrder","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Birdeye's orders.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeOrder.ASCENDING","title":"ASCENDING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ASCENDING = 'asc'\n</code></pre> <p>Ascending sort order.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeOrder.DESCENDING","title":"DESCENDING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DESCENDING = 'desc'\n</code></pre> <p>Descending sort order.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeSort","title":"BirdeyeSort","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Birdeye's sorting types.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeSort.SORT_MC","title":"SORT_MC  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SORT_MC = 'mc'\n</code></pre> <p>Sort the results by Market Cap (MC)</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeSort.SORT_V24HUSD","title":"SORT_V24HUSD  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SORT_V24HUSD = 'v24hUSD'\n</code></pre> <p>Sort the results by USD Volume in the last 24h</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeSort.SORT_V24HCHANGEPERCENT","title":"SORT_V24HCHANGEPERCENT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SORT_V24HCHANGEPERCENT = 'v24hChangePercent'\n</code></pre> <p>Sort the results by percent changing in the last 24h</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame","title":"BirdeyeTimeFrame","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Birdeye's timeframe sizes.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.MIN1","title":"MIN1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MIN1 = '1m'\n</code></pre> <p>1 minute</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.MIN3","title":"MIN3  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MIN3 = '3m'\n</code></pre> <p>3 minute</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.MIN5","title":"MIN5  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MIN5 = '5m'\n</code></pre> <p>5 minute</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.MIN15","title":"MIN15  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MIN15 = '15m'\n</code></pre> <p>15 minute</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.MIN30","title":"MIN30  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MIN30 = '30m'\n</code></pre> <p>30 minute</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.H1","title":"H1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H1 = '1H'\n</code></pre> <p>1 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.H2","title":"H2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H2 = '2H'\n</code></pre> <p>2 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.H4","title":"H4  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H4 = '4H'\n</code></pre> <p>4 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.H6","title":"H6  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H6 = '6H'\n</code></pre> <p>6 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.H8","title":"H8  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H8 = '8H'\n</code></pre> <p>8 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.H12","title":"H12  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H12 = '12H'\n</code></pre> <p>12 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.D1","title":"D1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>D1 = '1D'\n</code></pre> <p>1 day</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.D3","title":"D3  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>D3 = '3D'\n</code></pre> <p>3 day</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.W1","title":"W1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>W1 = '1W'\n</code></pre> <p>1 week</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTimeFrame.M1","title":"M1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>M1 = '1M'\n</code></pre> <p>1 month</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeHourTimeFrame","title":"BirdeyeHourTimeFrame","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Birdeye's timeframe sizes with hour as unit size.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeHourTimeFrame.H1","title":"H1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H1 = '1h'\n</code></pre> <p>1 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeHourTimeFrame.H2","title":"H2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H2 = '2h'\n</code></pre> <p>2 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeHourTimeFrame.H4","title":"H4  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H4 = '4h'\n</code></pre> <p>4 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeHourTimeFrame.H8","title":"H8  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H8 = '8h'\n</code></pre> <p>8 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeHourTimeFrame.H24","title":"H24  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>H24 = '24h'\n</code></pre> <p>24 hour</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeAddressType","title":"BirdeyeAddressType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Birdeye's address' types.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeAddressType.TOKEN","title":"TOKEN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TOKEN = 'token'\n</code></pre> <p>The address is refering to a token on the chain.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeAddressType.PAIR","title":"PAIR  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PAIR = 'pair'\n</code></pre> <p>The address is refering to a token pair on the chain. (e.g. SOL/USDT)</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTradeType","title":"BirdeyeTradeType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Birdeye's transactions' types.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTradeType.SWAP","title":"SWAP  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SWAP = 'swap'\n</code></pre> <p>A classic exchange between two currencies.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTradeType.ADD","title":"ADD  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ADD = 'add'\n</code></pre> <p>Transactions that add liquidity.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTradeType.REMOVE","title":"REMOVE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>REMOVE = 'remove'\n</code></pre> <p>Transactions that remove liquidity.</p>"},{"location":"interactions/birdeye/param.html#cyhole.birdeye.param.BirdeyeTradeType.ALL","title":"ALL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ALL = 'all'\n</code></pre> <p>All type of transactions (swap, add, remove).</p>"},{"location":"interactions/birdeye/schema.html","title":"Response Schema","text":"<p>Each response has been mapped into a <code>pydantic</code> schema in a way that makes it easy to read and write codes that use them.</p> <p>The classes identifying the response schema of an endpoint are the only ones ending with <code>Response</code> word, all other sub-schemes are used to identify the structures obtained from the responses.</p> <p>Schema Enhancement</p> <p>If some schema are incorrect or needs to be enhanced (optional/mandatory fields changes, incorrect datatype or schema update) feel free to open a pull request or issue by attaching:</p> <pre><code>- method\n- endpoint call executed\n- response obtained\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema","title":"cyhole.birdeye.schema","text":""},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo","title":"GetTokenListInfo","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.liquidity","title":"liquidity  <code>instance-attribute</code>","text":"<pre><code>liquidity: float\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.volume_24h_usd","title":"volume_24h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_24h_usd: float = Field(alias='v24hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.market_cap","title":"market_cap  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap: float = Field(alias='mc')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.volume_24h_change","title":"volume_24h_change  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_24h_change: float | None = Field(\n    alias=\"v24hChangePercent\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.last_trade_unix_time","title":"last_trade_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_trade_unix_time: float = Field(\n    alias=\"lastTradeUnixTime\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListInfo.logo_uri","title":"logo_uri  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>logo_uri: str | None = Field(alias='logoURI', default=None)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListData","title":"GetTokenListData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListData.total","title":"total  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total: int | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListData.update_time","title":"update_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>update_time: datetime = Field(alias='updateTime')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListData.update_unix_time","title":"update_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>update_unix_time: int = Field(alias='updateUnixTime')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListData.tokens","title":"tokens  <code>instance-attribute</code>","text":"<pre><code>tokens: list[GetTokenListInfo]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListData.parse_update_time","title":"parse_update_time","text":"<pre><code>parse_update_time(\n    update_time_raw: str | datetime,\n) -&gt; datetime\n</code></pre> Source code in <code>src/cyhole/birdeye/schema.py</code> <pre><code>@field_validator(\"update_time\")\ndef parse_update_time(cls, update_time_raw: str | datetime) -&gt; datetime:\n    if isinstance(update_time_raw, str):\n        return datetime.strptime(update_time_raw, \"%Y-%m-%dT%H:%M:%S\")\n    return update_time_raw\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListResponse","title":"GetTokenListResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Token - List endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTokenListData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenListResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana","title":"GetTokenSecurityDataSolana","text":"<p>               Bases: <code>BaseModel</code></p> <p>Data specific only for Solana chain</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.creator_address","title":"creator_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>creator_address: str | None = Field(\n    alias=\"creatorAddress\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.owner_address","title":"owner_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>owner_address: str | None = Field(\n    alias=\"ownerAddress\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.creation_transaction","title":"creation_transaction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>creation_transaction: str | None = Field(\n    alias=\"creationTx\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.creation_time_unix","title":"creation_time_unix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>creation_time_unix: int | None = Field(\n    alias=\"creationTime\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.creation_slot","title":"creation_slot  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>creation_slot: int | None = Field(\n    alias=\"creationSlot\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.mint_transaction","title":"mint_transaction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_transaction: str | None = Field(\n    alias=\"mintTx\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.mint_time_unix","title":"mint_time_unix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_time_unix: int | None = Field(\n    alias=\"mintTime\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.mint_slot","title":"mint_slot  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_slot: int | None = Field(\n    alias=\"mintSlot\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.mintable","title":"mintable  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mintable: bool | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.renounce","title":"renounce  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>renounce: bool | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.creator_balance","title":"creator_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>creator_balance: float | None = Field(\n    alias=\"creatorBalance\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.creator_percentage","title":"creator_percentage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>creator_percentage: float | None = Field(\n    alias=\"creatorPercentage\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.owner_balance","title":"owner_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>owner_balance: float | None = Field(\n    alias=\"ownerBalance\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.owner_percentage","title":"owner_percentage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>owner_percentage: float | None = Field(\n    alias=\"ownerPercentage\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.metaplex_update_authority","title":"metaplex_update_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>metaplex_update_authority: str = Field(\n    alias=\"metaplexUpdateAuthority\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.metaplex_update_balance","title":"metaplex_update_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>metaplex_update_balance: float = Field(\n    alias=\"metaplexUpdateAuthorityBalance\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.metaplex_update_percentage","title":"metaplex_update_percentage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>metaplex_update_percentage: float = Field(\n    alias=\"metaplexUpdateAuthorityPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.mutable_metadata","title":"mutable_metadata  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mutable_metadata: bool = Field(alias='mutableMetadata')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.top_10_holder_balance","title":"top_10_holder_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>top_10_holder_balance: float = Field(\n    alias=\"top10HolderBalance\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.top_10_holder_percentage","title":"top_10_holder_percentage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>top_10_holder_percentage: float = Field(\n    alias=\"top10HolderPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.top_10_user_balance","title":"top_10_user_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>top_10_user_balance: float = Field(alias=\"top10UserBalance\")\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.top_10_user_percentage","title":"top_10_user_percentage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>top_10_user_percentage: float = Field(\n    alias=\"top10UserPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.is_true_token","title":"is_true_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_true_token: bool | None = Field(\n    alias=\"isTrueToken\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.total_supply","title":"total_supply  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_supply: float = Field(alias='totalSupply')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.pre_market_holder","title":"pre_market_holder  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pre_market_holder: list[str] = Field(\n    alias=\"preMarketHolder\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.lock_info","title":"lock_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>lock_info: Any | None = Field(\n    alias=\"lockInfo\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.freezeable","title":"freezeable  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>freezeable: bool | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.freeze_authority","title":"freeze_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>freeze_authority: str | None = Field(\n    alias=\"freezeAuthority\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.transfer_fee_enable","title":"transfer_fee_enable  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transfer_fee_enable: bool | None = Field(\n    alias=\"transferFeeEnable\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.transfer_fee_data","title":"transfer_fee_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transfer_fee_data: Any | None = Field(\n    alias=\"transferFeeData\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.is_token_2022","title":"is_token_2022  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_token_2022: bool = Field(alias='isToken2022')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityDataSolana.non_transferable","title":"non_transferable  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>non_transferable: bool | None = Field(\n    alias=\"nonTransferable\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityResponse","title":"GetTokenSecurityResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Token - Security endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTokenSecurityDataSolana | dict[str, Any]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenSecurityResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData","title":"GetTokenOverviewData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.extensions","title":"extensions  <code>instance-attribute</code>","text":"<pre><code>extensions: dict[str, str | None]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.logo_uri","title":"logo_uri  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>logo_uri: str = Field(alias='logoURI')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.liquidity","title":"liquidity  <code>instance-attribute</code>","text":"<pre><code>liquidity: float\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.supply","title":"supply  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supply: float | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.market_cap","title":"market_cap  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap: float | None = Field(alias='mc', default=None)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.history_30m_price","title":"history_30m_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>history_30m_price: float = Field(alias='history30mPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.price_change_30m_percent","title":"price_change_30m_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_30m_percent: float = Field(\n    alias=\"priceChange30mPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.history_1h_price","title":"history_1h_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>history_1h_price: float = Field(alias='history1hPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.price_change_1h_percent","title":"price_change_1h_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_1h_percent: float = Field(\n    alias=\"priceChange1hPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.history_2h_price","title":"history_2h_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>history_2h_price: float = Field(alias='history2hPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.price_change_2h_percent","title":"price_change_2h_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_2h_percent: float = Field(\n    alias=\"priceChange2hPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.history_4h_price","title":"history_4h_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>history_4h_price: float = Field(alias='history4hPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.price_change_4h_percent","title":"price_change_4h_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_4h_percent: float = Field(\n    alias=\"priceChange4hPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.history_6h_price","title":"history_6h_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>history_6h_price: float = Field(alias='history6hPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.price_change_6h_percent","title":"price_change_6h_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_6h_percent: float = Field(\n    alias=\"priceChange6hPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.history_8h_price","title":"history_8h_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>history_8h_price: float = Field(alias='history8hPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.price_change_8h_percent","title":"price_change_8h_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_8h_percent: float = Field(\n    alias=\"priceChange8hPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.history_12h_price","title":"history_12h_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>history_12h_price: float = Field(alias='history12hPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.price_change_12h_percent","title":"price_change_12h_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_12h_percent: float = Field(\n    alias=\"priceChange12hPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.history_24h_price","title":"history_24h_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>history_24h_price: float = Field(alias='history24hPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.price_change_24h_percent","title":"price_change_24h_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_24h_percent: float = Field(\n    alias=\"priceChange24hPercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_30m","title":"unique_wallet_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_30m: int = Field(alias='uniqueWallet30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_history_30m","title":"unique_wallet_history_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_history_30m: int = Field(\n    alias=\"uniqueWalletHistory30m\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_30m_change_percent","title":"unique_wallet_30m_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_30m_change_percent: float = Field(\n    alias=\"uniqueWallet30mChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_1h","title":"unique_wallet_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_1h: int = Field(alias='uniqueWallet1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_history_1h","title":"unique_wallet_history_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_history_1h: int = Field(\n    alias=\"uniqueWalletHistory1h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_1h_change_percent","title":"unique_wallet_1h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_1h_change_percent: float = Field(\n    alias=\"uniqueWallet1hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_2h","title":"unique_wallet_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_2h: int = Field(alias='uniqueWallet2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_history_2h","title":"unique_wallet_history_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_history_2h: int = Field(\n    alias=\"uniqueWalletHistory2h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_2h_change_percent","title":"unique_wallet_2h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_2h_change_percent: float = Field(\n    alias=\"uniqueWallet2hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_4h","title":"unique_wallet_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_4h: int = Field(alias='uniqueWallet4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_history_4h","title":"unique_wallet_history_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_history_4h: int = Field(\n    alias=\"uniqueWalletHistory4h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_4h_change_percent","title":"unique_wallet_4h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_4h_change_percent: float = Field(\n    alias=\"uniqueWallet4hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_6h","title":"unique_wallet_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_6h: int = Field(alias='uniqueWallet6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_history_6h","title":"unique_wallet_history_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_history_6h: int = Field(\n    alias=\"uniqueWalletHistory6h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_6h_change_percent","title":"unique_wallet_6h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_6h_change_percent: float = Field(\n    alias=\"uniqueWallet6hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_8h","title":"unique_wallet_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_8h: int = Field(alias='uniqueWallet8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_history_8h","title":"unique_wallet_history_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_history_8h: int = Field(\n    alias=\"uniqueWalletHistory8h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_8h_change_percent","title":"unique_wallet_8h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_8h_change_percent: float = Field(\n    alias=\"uniqueWallet8hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_12h","title":"unique_wallet_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_12h: int = Field(alias='uniqueWallet12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_history_12h","title":"unique_wallet_history_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_history_12h: int = Field(\n    alias=\"uniqueWalletHistory12h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_12h_change_percent","title":"unique_wallet_12h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_12h_change_percent: float = Field(\n    alias=\"uniqueWallet12hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_24h","title":"unique_wallet_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_24h: int = Field(alias='uniqueWallet24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_history_24h","title":"unique_wallet_history_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_history_24h: int = Field(\n    alias=\"uniqueWalletHistory24h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_wallet_24h_change_percent","title":"unique_wallet_24h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_wallet_24h_change_percent: float = Field(\n    alias=\"uniqueWallet24hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.last_trade_unix_time","title":"last_trade_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_trade_unix_time: int = Field(alias=\"lastTradeUnixTime\")\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.last_trade_human_time","title":"last_trade_human_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_trade_human_time: datetime = Field(\n    alias=\"lastTradeHumanTime\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_30m","title":"trade_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_30m: int = Field(alias='trade30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_history_30m","title":"trade_history_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_history_30m: int = Field(alias='tradeHistory30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_30m_change_percent","title":"trade_30m_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_30m_change_percent: float = Field(\n    alias=\"trade30mChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_30m","title":"sell_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_30m: int = Field(alias='sell30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_history_30m","title":"sell_history_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_history_30m: int = Field(alias='sellHistory30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_30m_change_percent","title":"sell_30m_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_30m_change_percent: float = Field(\n    alias=\"sell30mChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_30m","title":"buy_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_30m: int = Field(alias='buy30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_history_30m","title":"buy_history_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_history_30m: int = Field(alias='buyHistory30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_30m_change_percent","title":"buy_30m_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_30m_change_percent: float = Field(\n    alias=\"buy30mChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_30m","title":"volume_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_30m: float = Field(alias='v30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_30m_usd","title":"volume_30m_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_30m_usd: float = Field(alias='v30mUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_30m","title":"volume_history_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_30m: float = Field(alias='vHistory30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_30m_usd","title":"volume_history_30m_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_30m_usd: float = Field(\n    alias=\"vHistory30mUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_30m_change_percent","title":"volume_30m_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_30m_change_percent: float = Field(\n    alias=\"v30mChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_30m","title":"volume_buy_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_30m: float = Field(alias='vBuy30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_30m_usd","title":"volume_buy_30m_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_30m_usd: float = Field(alias='vBuy30mUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_30m","title":"volume_buy_history_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_30m: float = Field(\n    alias=\"vBuyHistory30m\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_30m_usd","title":"volume_buy_history_30m_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_30m_usd: float = Field(\n    alias=\"vBuyHistory30mUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_30m_change_percent","title":"volume_buy_30m_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_30m_change_percent: float = Field(\n    alias=\"vBuy30mChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_30m","title":"volume_sell_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_30m: float = Field(alias='vSell30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_30m_usd","title":"volume_sell_30m_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_30m_usd: float = Field(alias='vSell30mUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_30m","title":"volume_sell_history_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_30m: float = Field(\n    alias=\"vSellHistory30m\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_30m_usd","title":"volume_sell_history_30m_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_30m_usd: float = Field(\n    alias=\"vSellHistory30mUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_30m_change_percent","title":"volume_sell_30m_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_30m_change_percent: float = Field(\n    alias=\"vSell30mChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_1h","title":"trade_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_1h: int = Field(alias='trade1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_history_1h","title":"trade_history_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_history_1h: int = Field(alias='tradeHistory1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_1h_change_percent","title":"trade_1h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_1h_change_percent: float = Field(\n    alias=\"trade1hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_1h","title":"sell_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_1h: int = Field(alias='sell1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_history_1h","title":"sell_history_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_history_1h: int = Field(alias='sellHistory1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_1h_change_percent","title":"sell_1h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_1h_change_percent: float = Field(\n    alias=\"sell1hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_1h","title":"buy_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_1h: int = Field(alias='buy1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_history_1h","title":"buy_history_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_history_1h: int = Field(alias='buyHistory1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_1h_change_percent","title":"buy_1h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_1h_change_percent: float = Field(\n    alias=\"buy1hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_1h","title":"volume_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_1h: float = Field(alias='v1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_1h_usd","title":"volume_1h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_1h_usd: float = Field(alias='v1hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_1h","title":"volume_history_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_1h: float = Field(alias='vHistory1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_1h_usd","title":"volume_history_1h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_1h_usd: float = Field(alias='vHistory1hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_1h_change_percent","title":"volume_1h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_1h_change_percent: float = Field(\n    alias=\"v1hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_1h","title":"volume_buy_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_1h: float = Field(alias='vBuy1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_1h_usd","title":"volume_buy_1h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_1h_usd: float = Field(alias='vBuy1hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_1h","title":"volume_buy_history_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_1h: float = Field(alias='vBuyHistory1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_1h_usd","title":"volume_buy_history_1h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_1h_usd: float = Field(\n    alias=\"vBuyHistory1hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_1h_change_percent","title":"volume_buy_1h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_1h_change_percent: float = Field(\n    alias=\"vBuy1hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_1h","title":"volume_sell_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_1h: float = Field(alias='vSell1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_1h_usd","title":"volume_sell_1h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_1h_usd: float = Field(alias='vSell1hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_1h","title":"volume_sell_history_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_1h: float = Field(\n    alias=\"vSellHistory1h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_1h_usd","title":"volume_sell_history_1h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_1h_usd: float = Field(\n    alias=\"vSellHistory1hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_1h_change_percent","title":"volume_sell_1h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_1h_change_percent: float = Field(\n    alias=\"vSell1hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_2h","title":"trade_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_2h: int = Field(alias='trade2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_history_2h","title":"trade_history_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_history_2h: int = Field(alias='tradeHistory2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_2h_change_percent","title":"trade_2h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_2h_change_percent: float = Field(\n    alias=\"trade2hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_2h","title":"sell_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_2h: int = Field(alias='sell2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_history_2h","title":"sell_history_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_history_2h: int = Field(alias='sellHistory2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_2h_change_percent","title":"sell_2h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_2h_change_percent: float = Field(\n    alias=\"sell2hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_2h","title":"buy_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_2h: int = Field(alias='buy2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_history_2h","title":"buy_history_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_history_2h: int = Field(alias='buyHistory2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_2h_change_percent","title":"buy_2h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_2h_change_percent: float = Field(\n    alias=\"buy2hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_2h","title":"volume_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_2h: float = Field(alias='v2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_2h_usd","title":"volume_2h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_2h_usd: float = Field(alias='v2hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_2h","title":"volume_history_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_2h: float = Field(alias='vHistory2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_2h_usd","title":"volume_history_2h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_2h_usd: float = Field(alias='vHistory2hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_2h_change_percent","title":"volume_2h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_2h_change_percent: float = Field(\n    alias=\"v2hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_2h","title":"volume_buy_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_2h: float = Field(alias='vBuy2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_2h_usd","title":"volume_buy_2h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_2h_usd: float = Field(alias='vBuy2hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_2h","title":"volume_buy_history_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_2h: float = Field(alias='vBuyHistory2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_2h_usd","title":"volume_buy_history_2h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_2h_usd: float = Field(\n    alias=\"vBuyHistory2hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_2h_change_percent","title":"volume_buy_2h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_2h_change_percent: float = Field(\n    alias=\"vBuy2hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_2h","title":"volume_sell_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_2h: float = Field(alias='vSell2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_2h_usd","title":"volume_sell_2h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_2h_usd: float = Field(alias='vSell2hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_2h","title":"volume_sell_history_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_2h: float = Field(\n    alias=\"vSellHistory2h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_2h_usd","title":"volume_sell_history_2h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_2h_usd: float = Field(\n    alias=\"vSellHistory2hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_2h_change_percent","title":"volume_sell_2h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_2h_change_percent: float = Field(\n    alias=\"vSell2hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_4h","title":"trade_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_4h: int = Field(alias='trade4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_history_4h","title":"trade_history_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_history_4h: int = Field(alias='tradeHistory4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_4h_change_percent","title":"trade_4h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_4h_change_percent: float = Field(\n    alias=\"trade4hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_4h","title":"sell_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_4h: int = Field(alias='sell4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_history_4h","title":"sell_history_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_history_4h: int = Field(alias='sellHistory4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_4h_change_percent","title":"sell_4h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_4h_change_percent: float = Field(\n    alias=\"sell4hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_4h","title":"buy_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_4h: int = Field(alias='buy4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_history_4h","title":"buy_history_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_history_4h: int = Field(alias='buyHistory4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_4h_change_percent","title":"buy_4h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_4h_change_percent: float = Field(\n    alias=\"buy4hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_4h","title":"volume_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_4h: float = Field(alias='v4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_4h_usd","title":"volume_4h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_4h_usd: float = Field(alias='v4hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_4h","title":"volume_history_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_4h: float = Field(alias='vHistory4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_4h_usd","title":"volume_history_4h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_4h_usd: float = Field(alias='vHistory4hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_4h_change_percent","title":"volume_4h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_4h_change_percent: float = Field(\n    alias=\"v4hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_4h","title":"volume_buy_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_4h: float = Field(alias='vBuy4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_4h_usd","title":"volume_buy_4h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_4h_usd: float = Field(alias='vBuy4hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_4h","title":"volume_buy_history_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_4h: float = Field(alias='vBuyHistory4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_4h_usd","title":"volume_buy_history_4h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_4h_usd: float = Field(\n    alias=\"vBuyHistory4hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_4h_change_percent","title":"volume_buy_4h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_4h_change_percent: float = Field(\n    alias=\"vBuy4hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_4h","title":"volume_sell_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_4h: float = Field(alias='vSell4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_4h_usd","title":"volume_sell_4h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_4h_usd: float = Field(alias='vSell4hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_4h","title":"volume_sell_history_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_4h: float = Field(\n    alias=\"vSellHistory4h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_4h_usd","title":"volume_sell_history_4h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_4h_usd: float = Field(\n    alias=\"vSellHistory4hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_4h_change_percent","title":"volume_sell_4h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_4h_change_percent: float = Field(\n    alias=\"vSell4hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_6h","title":"trade_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_6h: int = Field(alias='trade6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_history_6h","title":"trade_history_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_history_6h: int = Field(alias='tradeHistory6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_6h_change_percent","title":"trade_6h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_6h_change_percent: float = Field(\n    alias=\"trade6hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_6h","title":"sell_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_6h: int = Field(alias='sell6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_history_6h","title":"sell_history_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_history_6h: int = Field(alias='sellHistory6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_6h_change_percent","title":"sell_6h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_6h_change_percent: float = Field(\n    alias=\"sell6hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_6h","title":"buy_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_6h: int = Field(alias='buy6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_history_6h","title":"buy_history_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_history_6h: int = Field(alias='buyHistory6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_6h_change_percent","title":"buy_6h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_6h_change_percent: float = Field(\n    alias=\"buy6hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_6h","title":"volume_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_6h: float = Field(alias='v6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_6h_usd","title":"volume_6h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_6h_usd: float = Field(alias='v6hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_6h","title":"volume_history_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_6h: float = Field(alias='vHistory6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_6h_usd","title":"volume_history_6h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_6h_usd: float = Field(alias='vHistory6hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_6h_change_percent","title":"volume_6h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_6h_change_percent: float = Field(\n    alias=\"v6hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_6h","title":"volume_buy_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_6h: float = Field(alias='vBuy6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_6h_usd","title":"volume_buy_6h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_6h_usd: float = Field(alias='vBuy6hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_6h","title":"volume_buy_history_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_6h: float = Field(alias='vBuyHistory6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_6h_usd","title":"volume_buy_history_6h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_6h_usd: float = Field(\n    alias=\"vBuyHistory6hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_6h_change_percent","title":"volume_buy_6h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_6h_change_percent: float = Field(\n    alias=\"vBuy6hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_6h","title":"volume_sell_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_6h: float = Field(alias='vSell6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_6h_usd","title":"volume_sell_6h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_6h_usd: float = Field(alias='vSell6hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_6h","title":"volume_sell_history_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_6h: float = Field(\n    alias=\"vSellHistory6h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_6h_usd","title":"volume_sell_history_6h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_6h_usd: float = Field(\n    alias=\"vSellHistory6hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_6h_change_percent","title":"volume_sell_6h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_6h_change_percent: float = Field(\n    alias=\"vSell6hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_8h","title":"trade_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_8h: int = Field(alias='trade8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_history_8h","title":"trade_history_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_history_8h: int = Field(alias='tradeHistory8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_8h_change_percent","title":"trade_8h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_8h_change_percent: float = Field(\n    alias=\"trade8hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_8h","title":"sell_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_8h: int = Field(alias='sell8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_history_8h","title":"sell_history_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_history_8h: int = Field(alias='sellHistory8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_8h_change_percent","title":"sell_8h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_8h_change_percent: float = Field(\n    alias=\"sell8hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_8h","title":"buy_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_8h: int = Field(alias='buy8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_history_8h","title":"buy_history_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_history_8h: int = Field(alias='buyHistory8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_8h_change_percent","title":"buy_8h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_8h_change_percent: float = Field(\n    alias=\"buy8hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_8h","title":"volume_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_8h: float = Field(alias='v8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_8h_usd","title":"volume_8h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_8h_usd: float = Field(alias='v8hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_8h","title":"volume_history_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_8h: float = Field(alias='vHistory8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_8h_usd","title":"volume_history_8h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_8h_usd: float = Field(alias='vHistory8hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_8h_change_percent","title":"volume_8h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_8h_change_percent: float = Field(\n    alias=\"v8hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_8h","title":"volume_buy_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_8h: float = Field(alias='vBuy8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_8h_usd","title":"volume_buy_8h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_8h_usd: float = Field(alias='vBuy8hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_8h","title":"volume_buy_history_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_8h: float = Field(alias='vBuyHistory8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_8h_usd","title":"volume_buy_history_8h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_8h_usd: float = Field(\n    alias=\"vBuyHistory8hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_8h_change_percent","title":"volume_buy_8h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_8h_change_percent: float = Field(\n    alias=\"vBuy8hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_8h","title":"volume_sell_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_8h: float = Field(alias='vSell8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_8h_usd","title":"volume_sell_8h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_8h_usd: float = Field(alias='vSell8hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_8h","title":"volume_sell_history_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_8h: float = Field(\n    alias=\"vSellHistory8h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_8h_usd","title":"volume_sell_history_8h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_8h_usd: float = Field(\n    alias=\"vSellHistory8hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_8h_change_percent","title":"volume_sell_8h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_8h_change_percent: float = Field(\n    alias=\"vSell8hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_12h","title":"trade_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_12h: int = Field(alias='trade12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_history_12h","title":"trade_history_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_history_12h: int = Field(alias='tradeHistory12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_12h_change_percent","title":"trade_12h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_12h_change_percent: float = Field(\n    alias=\"trade12hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_12h","title":"sell_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_12h: int = Field(alias='sell12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_history_12h","title":"sell_history_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_history_12h: int = Field(alias='sellHistory12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_12h_change_percent","title":"sell_12h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_12h_change_percent: float = Field(\n    alias=\"sell12hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_12h","title":"buy_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_12h: int = Field(alias='buy12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_history_12h","title":"buy_history_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_history_12h: int = Field(alias='buyHistory12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_12h_change_percent","title":"buy_12h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_12h_change_percent: float = Field(\n    alias=\"buy12hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_12h","title":"volume_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_12h: float = Field(alias='v12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_12h_usd","title":"volume_12h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_12h_usd: float = Field(alias='v12hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_12h","title":"volume_history_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_12h: float = Field(alias='vHistory12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_12h_usd","title":"volume_history_12h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_12h_usd: float = Field(\n    alias=\"vHistory12hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_12h_change_percent","title":"volume_12h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_12h_change_percent: float = Field(\n    alias=\"v12hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_12h","title":"volume_buy_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_12h: float = Field(alias='vBuy12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_12h_usd","title":"volume_buy_12h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_12h_usd: float = Field(alias='vBuy12hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_12h","title":"volume_buy_history_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_12h: float = Field(\n    alias=\"vBuyHistory12h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_12h_usd","title":"volume_buy_history_12h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_12h_usd: float = Field(\n    alias=\"vBuyHistory12hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_12h_change_percent","title":"volume_buy_12h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_12h_change_percent: float = Field(\n    alias=\"vBuy12hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_12h","title":"volume_sell_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_12h: float = Field(alias='vSell12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_12h_usd","title":"volume_sell_12h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_12h_usd: float = Field(alias='vSell12hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_12h","title":"volume_sell_history_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_12h: float = Field(\n    alias=\"vSellHistory12h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_12h_usd","title":"volume_sell_history_12h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_12h_usd: float = Field(\n    alias=\"vSellHistory12hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_12h_change_percent","title":"volume_sell_12h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_12h_change_percent: float = Field(\n    alias=\"vSell12hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_24h","title":"trade_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_24h: int = Field(alias='trade24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_history_24h","title":"trade_history_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_history_24h: int = Field(alias='tradeHistory24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.trade_24h_change_percent","title":"trade_24h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_24h_change_percent: float = Field(\n    alias=\"trade24hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_24h","title":"sell_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_24h: int = Field(alias='sell24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_history_24h","title":"sell_history_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_history_24h: int = Field(alias='sellHistory24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.sell_24h_change_percent","title":"sell_24h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_24h_change_percent: float = Field(\n    alias=\"sell24hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_24h","title":"buy_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_24h: int = Field(alias='buy24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_history_24h","title":"buy_history_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_history_24h: int = Field(alias='buyHistory24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.buy_24h_change_percent","title":"buy_24h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_24h_change_percent: float = Field(\n    alias=\"buy24hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_24h","title":"volume_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_24h: float = Field(alias='v24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_24h_usd","title":"volume_24h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_24h_usd: float = Field(alias='v24hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_24h","title":"volume_history_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_24h: float = Field(alias='vHistory24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_history_24h_usd","title":"volume_history_24h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_history_24h_usd: float = Field(\n    alias=\"vHistory24hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_24h_change_percent","title":"volume_24h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_24h_change_percent: float = Field(\n    alias=\"v24hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_24h","title":"volume_buy_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_24h: float = Field(alias='vBuy24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_24h_usd","title":"volume_buy_24h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_24h_usd: float = Field(alias='vBuy24hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_24h","title":"volume_buy_history_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_24h: float = Field(\n    alias=\"vBuyHistory24h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_history_24h_usd","title":"volume_buy_history_24h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_history_24h_usd: float = Field(\n    alias=\"vBuyHistory24hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_buy_24h_change_percent","title":"volume_buy_24h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_buy_24h_change_percent: float = Field(\n    alias=\"vBuy24hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_24h","title":"volume_sell_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_24h: float = Field(alias='vSell24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_24h_usd","title":"volume_sell_24h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_24h_usd: float = Field(alias='vSell24hUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_24h","title":"volume_sell_history_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_24h: float = Field(\n    alias=\"vSellHistory24h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_history_24h_usd","title":"volume_sell_history_24h_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_history_24h_usd: float = Field(\n    alias=\"vSellHistory24hUSD\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.volume_sell_24h_change_percent","title":"volume_sell_24h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_sell_24h_change_percent: float = Field(\n    alias=\"vSell24hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.watch","title":"watch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>watch: int = Field(alias='watch')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_30m","title":"view_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_30m: int = Field(alias='view30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_history_30m","title":"view_history_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_history_30m: int = Field(alias='viewHistory30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_30m_change_percent","title":"view_30m_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_30m_change_percent: float = Field(\n    alias=\"view30mChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_1h","title":"view_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_1h: int = Field(alias='view1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_history_1h","title":"view_history_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_history_1h: int = Field(alias='viewHistory1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_1h_change_percent","title":"view_1h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_1h_change_percent: float = Field(\n    alias=\"view1hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_2h","title":"view_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_2h: int = Field(alias='view2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_history_2h","title":"view_history_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_history_2h: int = Field(alias='viewHistory2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_2h_change_percent","title":"view_2h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_2h_change_percent: float = Field(\n    alias=\"view2hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_4h","title":"view_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_4h: int = Field(alias='view4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_history_4h","title":"view_history_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_history_4h: int = Field(alias='viewHistory4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_4h_change_percent","title":"view_4h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_4h_change_percent: float = Field(\n    alias=\"view4hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_6h","title":"view_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_6h: int = Field(alias='view6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_history_6h","title":"view_history_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_history_6h: int = Field(alias='viewHistory6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_6h_change_percent","title":"view_6h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_6h_change_percent: float = Field(\n    alias=\"view6hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_8h","title":"view_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_8h: int = Field(alias='view8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_history_8h","title":"view_history_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_history_8h: int = Field(alias='viewHistory8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_8h_change_percent","title":"view_8h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_8h_change_percent: float = Field(\n    alias=\"view8hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_12h","title":"view_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_12h: int = Field(alias='view12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_history_12h","title":"view_history_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_history_12h: int = Field(alias='viewHistory12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_12h_change_percent","title":"view_12h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_12h_change_percent: float = Field(\n    alias=\"view12hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_24h","title":"view_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_24h: int = Field(alias='view24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_history_24h","title":"view_history_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_history_24h: int = Field(alias='viewHistory24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.view_24h_change_percent","title":"view_24h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_24h_change_percent: float = Field(\n    alias=\"view24hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_30m","title":"unique_view_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_30m: int = Field(alias='uniqueView30m')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_history_30m","title":"unique_view_history_30m  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_history_30m: int = Field(\n    alias=\"uniqueViewHistory30m\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_30m_change_percent","title":"unique_view_30m_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_30m_change_percent: float = Field(\n    alias=\"uniqueView30mChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_1h","title":"unique_view_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_1h: int = Field(alias='uniqueView1h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_history_1h","title":"unique_view_history_1h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_history_1h: int = Field(\n    alias=\"uniqueViewHistory1h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_1h_change_percent","title":"unique_view_1h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_1h_change_percent: float = Field(\n    alias=\"uniqueView1hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_2h","title":"unique_view_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_2h: int = Field(alias='uniqueView2h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_history_2h","title":"unique_view_history_2h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_history_2h: int = Field(\n    alias=\"uniqueViewHistory2h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_2h_change_percent","title":"unique_view_2h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_2h_change_percent: float = Field(\n    alias=\"uniqueView2hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_4h","title":"unique_view_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_4h: int = Field(alias='uniqueView4h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_history_4h","title":"unique_view_history_4h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_history_4h: int = Field(\n    alias=\"uniqueViewHistory4h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_4h_change_percent","title":"unique_view_4h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_4h_change_percent: float = Field(\n    alias=\"uniqueView4hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_6h","title":"unique_view_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_6h: int = Field(alias='uniqueView6h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_history_6h","title":"unique_view_history_6h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_history_6h: int = Field(\n    alias=\"uniqueViewHistory6h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_6h_change_percent","title":"unique_view_6h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_6h_change_percent: float = Field(\n    alias=\"uniqueView6hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_8h","title":"unique_view_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_8h: int = Field(alias='uniqueView8h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_history_8h","title":"unique_view_history_8h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_history_8h: int = Field(\n    alias=\"uniqueViewHistory8h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_8h_change_percent","title":"unique_view_8h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_8h_change_percent: float = Field(\n    alias=\"uniqueView8hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_12h","title":"unique_view_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_12h: int = Field(alias='uniqueView12h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_history_12h","title":"unique_view_history_12h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_history_12h: int = Field(\n    alias=\"uniqueViewHistory12h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_12h_change_percent","title":"unique_view_12h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_12h_change_percent: float = Field(\n    alias=\"uniqueView12hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_24h","title":"unique_view_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_24h: int = Field(alias='uniqueView24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_history_24h","title":"unique_view_history_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_history_24h: int = Field(\n    alias=\"uniqueViewHistory24h\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewData.unique_view_24h_change_percent","title":"unique_view_24h_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unique_view_24h_change_percent: float = Field(\n    alias=\"uniqueView24hChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewResponse","title":"GetTokenOverviewResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Token - Overview endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTokenOverviewData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenOverviewResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenCreationInfoData","title":"GetTokenCreationInfoData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenCreationInfoData.transaction_hash","title":"transaction_hash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_hash: str = Field(alias='txHash')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenCreationInfoData.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenCreationInfoData.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str = Field(alias='tokenAddress')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenCreationInfoData.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenCreationInfoData.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenCreationInfoResponse","title":"GetTokenCreationInfoResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Token - Creation Token Info endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenCreationInfoResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTokenCreationInfoData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTokenCreationInfoResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceData","title":"GetPriceData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceData.value","title":"value  <code>instance-attribute</code>","text":"<pre><code>value: float\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceData.liquidity","title":"liquidity  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>liquidity: float | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceData.update_human_time","title":"update_human_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>update_human_time: datetime = Field(alias=\"updateHumanTime\")\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceData.update_unix_time","title":"update_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>update_unix_time: int = Field(alias='updateUnixTime')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceData.parse_update_human_time","title":"parse_update_human_time","text":"<pre><code>parse_update_human_time(\n    update_human_time_raw: str | datetime,\n) -&gt; datetime\n</code></pre> Source code in <code>src/cyhole/birdeye/schema.py</code> <pre><code>@field_validator(\"update_human_time\")\ndef parse_update_human_time(cls, update_human_time_raw: str | datetime) -&gt; datetime:\n    if isinstance(update_human_time_raw, str):\n        return datetime.strptime(update_human_time_raw, \"%Y-%m-%dT%H:%M:%S\")\n    return update_human_time_raw\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceResponse","title":"GetPriceResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Price endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetPriceData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceMultipleData","title":"GetPriceMultipleData","text":"<p>               Bases: <code>GetPriceData</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceMultipleData.price_change_24h","title":"price_change_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_24h: float = Field(alias='priceChange24h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceMultipleResponse","title":"GetPriceMultipleResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Price - Multiple endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceMultipleResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: dict[str, GetPriceMultipleData]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceMultipleResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceHistoricalMeasure","title":"GetPriceHistoricalMeasure","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceHistoricalMeasure.unix_time","title":"unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unix_time: int = Field(alias='unixTime')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceHistoricalMeasure.value","title":"value  <code>instance-attribute</code>","text":"<pre><code>value: float\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceHistoricalData","title":"GetPriceHistoricalData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceHistoricalData.items","title":"items  <code>instance-attribute</code>","text":"<pre><code>items: list[GetPriceHistoricalMeasure]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceHistoricalResponse","title":"GetPriceHistoricalResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Price - Historical endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceHistoricalResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetPriceHistoricalData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceHistoricalResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleData","title":"GetPriceVolumeSingleData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleData.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleData.update_unix_time","title":"update_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>update_unix_time: int = Field(alias='updateUnixTime')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleData.update_human_time","title":"update_human_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>update_human_time: datetime = Field(alias=\"updateHumanTime\")\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleData.volume_usd","title":"volume_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_usd: float = Field(alias='volumeUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleData.volume_change_percent","title":"volume_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_change_percent: float = Field(\n    alias=\"volumeChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleData.price_change_percent","title":"price_change_percent  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_percent: float = Field(\n    alias=\"priceChangePercent\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleData.parse_update_human_time","title":"parse_update_human_time","text":"<pre><code>parse_update_human_time(\n    update_human_time_raw: str | datetime,\n) -&gt; datetime\n</code></pre> Source code in <code>src/cyhole/birdeye/schema.py</code> <pre><code>@field_validator(\"update_human_time\")\ndef parse_update_human_time(cls, update_human_time_raw: str | datetime) -&gt; datetime:\n    if isinstance(update_human_time_raw, str):\n        return datetime.strptime(update_human_time_raw, \"%Y-%m-%dT%H:%M:%S\")\n    return update_human_time_raw\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleResponse","title":"GetPriceVolumeSingleResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Price Volume - Single Token endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetPriceVolumeSingleData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetPriceVolumeSingleResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.PostPriceVolumeMultiData","title":"PostPriceVolumeMultiData","text":"<p>               Bases: <code>GetPriceVolumeSingleData</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.PostPriceVolumeMultiData.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.PostPriceVolumeMultiResponse","title":"PostPriceVolumeMultiResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Price Volume - Multiple Token endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.PostPriceVolumeMultiResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[PostPriceVolumeMultiData]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.PostPriceVolumeMultiResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken","title":"GetTradesTokenTradeToken","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.type_swap","title":"type_swap  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type_swap: str = Field(alias='typeSwap')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.ui_amount","title":"ui_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_amount: float = Field(alias='uiAmount')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.price","title":"price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price: float | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.nearest_price","title":"nearest_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nearest_price: float = Field(alias='nearestPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.change_amount","title":"change_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_amount: float = Field(alias='changeAmount')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.ui_change_amount","title":"ui_change_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_change_amount: float = Field(alias='uiChangeAmount')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTradeToken.icon","title":"icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icon: str | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade","title":"GetTradesTokenTrade","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.volume","title":"volume  <code>instance-attribute</code>","text":"<pre><code>volume: float\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.volume_usd","title":"volume_usd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_usd: float = Field(alias='volumeUSD')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.trade_hash","title":"trade_hash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_hash: str = Field(alias='txHash')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.block_unix_time","title":"block_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_unix_time: int = Field(alias='blockUnixTime')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.block_human_time","title":"block_human_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_human_time: datetime = Field(alias='blockHumanTime')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.trade_type","title":"trade_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_type: str = Field(alias='txType')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.trade_status","title":"trade_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_status: str = Field(alias='txStatus')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.outliers","title":"outliers  <code>instance-attribute</code>","text":"<pre><code>outliers: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.nearest_price_base_coin","title":"nearest_price_base_coin  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nearest_price_base_coin: float = Field(\n    alias=\"nearestPriceBaseCoin\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.nearest_price_quote_coin","title":"nearest_price_quote_coin  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nearest_price_quote_coin: float = Field(\n    alias=\"nearestPriceQuoteCoin\"\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.ins_index","title":"ins_index  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ins_index: int = Field(alias='insIndex')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.inner_ins_index","title":"inner_ins_index  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>inner_ins_index: int | None = Field(\n    alias=\"innerInsIndex\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.be_bevenue","title":"be_bevenue  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>be_bevenue: str | None = Field(\n    alias=\"beRevenue\", default=None\n)\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.event_type","title":"event_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>event_type: str = Field(alias='eventType')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.side","title":"side  <code>instance-attribute</code>","text":"<pre><code>side: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.price_pair","title":"price_pair  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_pair: float = Field(alias='pricePair')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.alias","title":"alias  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>alias: str | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.platform","title":"platform  <code>instance-attribute</code>","text":"<pre><code>platform: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.toke_price","title":"toke_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>toke_price: float = Field(alias='tokenPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.proce_mark","title":"proce_mark  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>proce_mark: bool = Field(alias='priceMark')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.network","title":"network  <code>instance-attribute</code>","text":"<pre><code>network: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.trade_from","title":"trade_from  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_from: GetTradesTokenTradeToken = Field(alias='from')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.trade_to","title":"trade_to  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_to: GetTradesTokenTradeToken = Field(alias='to')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenTrade.parse_update_human_time","title":"parse_update_human_time","text":"<pre><code>parse_update_human_time(dt_raw: str | datetime) -&gt; datetime\n</code></pre> Source code in <code>src/cyhole/birdeye/schema.py</code> <pre><code>@field_validator(\"block_human_time\")\ndef parse_update_human_time(cls, dt_raw: str | datetime) -&gt; datetime:\n    if isinstance(dt_raw, str):\n        return datetime.strptime(dt_raw, \"%Y-%m-%dT%H:%M:%S\")\n    return dt_raw\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenData","title":"GetTradesTokenData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenData.items","title":"items  <code>instance-attribute</code>","text":"<pre><code>items: list[GetTradesTokenTrade]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenData.has_next","title":"has_next  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>has_next: bool = Field(alias='hasNext')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenResponse","title":"GetTradesTokenResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Trades - Token endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTradesTokenData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesTokenResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken","title":"GetTradesPairTradeToken","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.type_swap","title":"type_swap  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type_swap: str = Field(alias='typeSwap')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.ui_amount","title":"ui_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_amount: float = Field(alias='uiAmount')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.price","title":"price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price: float | None = None\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.nearest_price","title":"nearest_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nearest_price: float = Field(alias='nearestPrice')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.change_amount","title":"change_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_amount: float = Field(alias='changeAmount')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTradeToken.ui_change_amount","title":"ui_change_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_change_amount: float = Field(alias='uiChangeAmount')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTrade","title":"GetTradesPairTrade","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTrade.trade_hash","title":"trade_hash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_hash: str = Field(alias='txHash')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTrade.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTrade.block_unix_time","title":"block_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_unix_time: int = Field(alias='blockUnixTime')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTrade.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTrade.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTrade.trade_from","title":"trade_from  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_from: GetTradesPairTradeToken = Field(alias='from')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairTrade.trade_to","title":"trade_to  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_to: GetTradesPairTradeToken = Field(alias='to')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairData","title":"GetTradesPairData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairData.items","title":"items  <code>instance-attribute</code>","text":"<pre><code>items: list[GetTradesPairTrade]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairData.has_next","title":"has_next  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>has_next: bool = Field(alias='hasNext')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairResponse","title":"GetTradesPairResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Trades - Pair endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTradesPairData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetTradesPairResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVInterval","title":"GetOHLCVInterval","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVInterval.close","title":"close  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>close: float = Field(alias='c')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVInterval.high","title":"high  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>high: float = Field(alias='h')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVInterval.low","title":"low  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>low: float = Field(alias='l')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVInterval.open","title":"open  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>open: float = Field(alias='o')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVInterval.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVInterval.unix_time","title":"unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unix_time: int = Field(alias='unixTime')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVTokenPairInterval","title":"GetOHLCVTokenPairInterval","text":"<p>               Bases: <code>GetOHLCVInterval</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVTokenPairInterval.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVTokenPairInterval.volume","title":"volume  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume: float = Field(alias='v')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVTokenPairData","title":"GetOHLCVTokenPairData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVTokenPairData.items","title":"items  <code>instance-attribute</code>","text":"<pre><code>items: list[GetOHLCVTokenPairInterval]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVTokenPairResponse","title":"GetOHLCVTokenPairResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the OHLCV - Token/Pair endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVTokenPairResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetOHLCVTokenPairData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVTokenPairResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteInterval","title":"GetOHLCVBaseQuoteInterval","text":"<p>               Bases: <code>GetOHLCVInterval</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteInterval.base_address","title":"base_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>base_address: str = Field(alias='baseAddress')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteInterval.quote_address","title":"quote_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quote_address: str = Field(alias='quoteAddress')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteInterval.base_volume","title":"base_volume  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>base_volume: float = Field(alias='vBase')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteInterval.quote_volume","title":"quote_volume  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quote_volume: float = Field(alias='vQuote')\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteData","title":"GetOHLCVBaseQuoteData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteData.items","title":"items  <code>instance-attribute</code>","text":"<pre><code>items: list[GetOHLCVBaseQuoteInterval]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteResponse","title":"GetOHLCVBaseQuoteResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the OHLCV - Token/Pair endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetOHLCVBaseQuoteData\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetOHLCVBaseQuoteResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetWalletSupportedNetworksResponse","title":"GetWalletSupportedNetworksResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Wallet - Supported Networks endpoint from birdeye API.</p>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetWalletSupportedNetworksResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[str]\n</code></pre>"},{"location":"interactions/birdeye/schema.html#cyhole.birdeye.schema.GetWalletSupportedNetworksResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/jupiter/index.html","title":"- Jupiter","text":"<p>Jupiter (https://jup.ag) is one of the most popular DEX on Solana ecosystem with an active community, the cats! The platform provides many useful services directly from the site, but it also gives the possibility to other developers to create new powerful tools via the many open to use API endopints. Jupiter's documentation is well written and can be access from here.</p> <p>The API connector is <code>Jupiter</code> class imported from <code>cyhole.jupiter</code> path.</p>"},{"location":"interactions/jupiter/index.html#quick-examples","title":"Quick Examples","text":""},{"location":"interactions/jupiter/index.html#get-latest-token-price","title":"Get Latest Token Price","text":"<p>Extract the latest <code>JUP</code> buy price over <code>USDC</code> in few lines of code by using <code>get_price</code> in asynchronous logic.</p> <pre><code>import asyncio\nfrom cyhole.jupiter import Jupiter\nfrom cyhole.core.token.solana import JUP\n\n# get current price of JUP on Solana\nasync def main() -&gt; None:\n    jupiter = Jupiter()\n    async with jupiter.async_client as client:\n        response = await client.get_price([JUP.address])\n        print(\"Current JUP/USDC:\", response.data[JUP.address].price)\n\nasyncio.run(main())\n</code></pre>"},{"location":"interactions/jupiter/index.html#create-limit-order-transaction","title":"Create Limit Order Transaction","text":"<p>Get the transaction for the creation of a new Limit Order by using <code>post_limit_order_create</code> in synchronous logic.</p> <pre><code>from solders.keypair import Keypair\n\nfrom cyhole.jupiter import Jupiter\nfrom cyhole.jupiter.schema import PostLimitOrderCreateBody\nfrom cyhole.core.token.solana import JUP, USDC\n\njupiter = Jupiter()\n\n# create body for the request\nkey = Keypair()\nbody = PostLimitOrderCreateBody(\n    user_public_key = \"YOUR-WALLET-PUBLIC-KEY\",\n    input_amount = 100_000,\n    output_amount = 100_000,\n    input_token = USDC.address,\n    output_token = JUP.address,\n    base = str(key.pubkey())\n)\n\n# send request\nresponse = jupiter.client.post_limit_order_create(body)\nprint(\"Transaction:\", response.transaction)\n</code></pre> <p>Info</p> <p>The transaction should be then signed and sent on RPC to be validated and executed.</p>"},{"location":"interactions/jupiter/index.html#content","title":"Content","text":"<p>The documentation follows the library's structure by providing all the technical details required to use it.</p> <ul> <li> <p> Connector</p> <p><code>cyhole.jupiter</code> - Explore the <code>Jupiter</code> API connector and all its methods. </p> <p> Reference</p> </li> <li> <p> API Parameters</p> <p><code>cyhole.jupiter.param</code> - Ensure to use the correct parameters during the API calls.</p> <p> Reference</p> </li> <li> <p> Response Schema</p> <p><code>cyhole.jupiter.schema</code> - Extract only what is necessary by exploiting reponse mapping thanks to <code>pydantic</code> schemes.</p> <p> Reference</p> </li> <li> <p> Exceptions</p> <p><code>cyhole.jupiter.exception</code> - Make sure you intercept all exceptions correctly.</p> <p> Reference</p> </li> </ul>"},{"location":"interactions/jupiter/index.html#endpoints","title":"Endpoints","text":"Endpoint Type Method <code>cyhole</code> Release Deprecated Price <code>GET</code> <code>get_price</code> <code>0.1.0</code> - Quote <code>GET</code> <code>get_quote</code> <code>0.1.0</code> - Quote Tokens <code>GET</code> <code>get_quote_tokens</code> <code>0.1.0</code> - Quote Program ID to Label <code>GET</code> <code>get_quote_program_id_label</code> <code>0.1.0</code> - Swap <code>POST</code> <code>post_swap</code> <code>0.1.0</code> - Token Info <code>GET</code> <code>get_token_info</code> <code>0.2.5</code> - Token List <code>GET</code> <code>get_token_list</code> <code>0.1.0</code> - Limit Order - Create <code>POST</code> <code>post_limit_order_create</code> <code>0.1.0</code> - Limit Order - Cancel <code>POST</code> <code>post_limit_order_cancel</code> <code>0.1.0</code> - Limit Order - Open <code>GET</code> <code>get_limit_order_open</code> <code>0.1.0</code> - Limit Order - History <code>GET</code> <code>get_limit_order_history</code> <code>0.1.0</code> - Limit Order - Trade History <code>GET</code> <code>get_limit_order_trade_history</code> <code>0.1.0</code> -"},{"location":"interactions/jupiter/client.html","title":"Client","text":""},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client","title":"cyhole.jupiter.client","text":""},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient","title":"JupiterClient","text":"<pre><code>JupiterClient(\n    interaction: Jupiter, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>APIClient</code></p> <p>Client used for synchronous API calls for <code>Jupiter</code> interaction.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def __init__(self, interaction: Jupiter, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction: Jupiter = self._interaction\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_price","title":"get_price","text":"<pre><code>get_price(\n    address: list[str],\n    extra_info: bool = False,\n    vs_address: str | None = None,\n) -&gt; GetPriceResponse\n</code></pre> <p>Call the Jupiter's GET Price API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_price</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_price(self, address: list[str], extra_info: bool = False, vs_address: str | None = None) -&gt; GetPriceResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Price](https://station.jup.ag/docs/utility/price-api)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_price`][cyhole.jupiter.interaction.Jupiter._get_price].\n    \"\"\"\n    return self._interaction._get_price(True, address, extra_info, vs_address)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_quote","title":"get_quote","text":"<pre><code>get_quote(input: GetQuoteInput) -&gt; GetQuoteResponse\n</code></pre> <p>Call the Jupiter's GET Quote API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_quote</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_quote(self, input: GetQuoteInput) -&gt; GetQuoteResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Quote](https://station.jup.ag/api-v6/get-quote)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_quote`][cyhole.jupiter.interaction.Jupiter._get_quote].\n    \"\"\"\n    return self._interaction._get_quote(True, input)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_quote_tokens","title":"get_quote_tokens","text":"<pre><code>get_quote_tokens() -&gt; GetQuoteTokensResponse\n</code></pre> <p>Call the Jupiter's GET Quote Tokens API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_quote_tokens</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_quote_tokens(self) -&gt; GetQuoteTokensResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Quote Tokens](https://station.jup.ag/api-v6/get-tokens)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_quote_tokens`][cyhole.jupiter.interaction.Jupiter._get_quote_tokens].\n    \"\"\"\n    return self._interaction._get_quote_tokens(True)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_quote_program_id_label","title":"get_quote_program_id_label","text":"<pre><code>get_quote_program_id_label() -&gt; (\n    GetQuoteProgramIdLabelResponse\n)\n</code></pre> <p>Call the Jupiter's GET Quote Program ID to Label API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_quote_program_id_label</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_quote_program_id_label(self) -&gt; GetQuoteProgramIdLabelResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Quote Program ID to Label](https://station.jup.ag/api-v6/get-program-id-to-label)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_quote_program_id_label`][cyhole.jupiter.interaction.Jupiter._get_quote_program_id_label].\n    \"\"\"\n    return self._interaction._get_quote_program_id_label(True)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.post_swap","title":"post_swap","text":"<pre><code>post_swap(body: PostSwapBody) -&gt; PostSwapResponse\n</code></pre> <p>Call the Jupiter's POST Swap API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._post_swap</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def post_swap(self, body: PostSwapBody) -&gt; PostSwapResponse:\n    \"\"\"\n        Call the Jupiter's POST **[Swap](https://station.jup.ag/api-v6/post-swap)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._post_swap`][cyhole.jupiter.interaction.Jupiter._post_swap].\n    \"\"\"\n    return self._interaction._post_swap(True, body)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_token_info","title":"get_token_info","text":"<pre><code>get_token_info(address: str) -&gt; GetTokenInfoResponse\n</code></pre> <p>Call the Jupiter's GET Token API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_token_info</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_token_info(self, address: str) -&gt; GetTokenInfoResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Token](https://station.jup.ag/docs/api/token-information)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_token_info`][cyhole.jupiter.interaction.Jupiter._get_token_info].\n    \"\"\"\n    return self._interaction._get_token_info(True, address)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_token_market_mints","title":"get_token_market_mints","text":"<pre><code>get_token_market_mints(\n    address: str,\n) -&gt; GetTokenMarketMintsResponse\n</code></pre> <p>Call the Jupiter's GET Token Market Mints API for synchronous logic. All the API endopint details are available on <code>Jupiter._get_token_market_mints</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_token_market_mints(self, address: str) -&gt; GetTokenMarketMintsResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Token Market Mints](https://station.jup.ag/docs/api/mints-in-market)** API for synchronous logic.\n        All the API endopint details are available on [`Jupiter._get_token_market_mints`][cyhole.jupiter.interaction.Jupiter._get_token_market_mints].\n    \"\"\"\n    return self._interaction._get_token_market_mints(True, address)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_token_new","title":"get_token_new","text":"<pre><code>get_token_new(\n    limit: int = 10, offset: int | None = None\n) -&gt; GetTokenNewResponse\n</code></pre> <p>Call the Jupiter's GET New Token API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_token_new</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_token_new(self, limit: int = 10, offset: int | None = None) -&gt; GetTokenNewResponse:\n    \"\"\"\n        Call the Jupiter's GET **[New Token](https://station.jup.ag/docs/api/new)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_token_new`][cyhole.jupiter.interaction.Jupiter._get_token_new].\n    \"\"\"\n    return self._interaction._get_token_new(True, limit, offset)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_token_tagged","title":"get_token_tagged","text":"<pre><code>get_token_tagged(\n    tag: str | JupiterTokenTagType,\n) -&gt; GetTokenTaggedResponse\n</code></pre> <p>Call the Jupiter's GET [Tagged Token]https://station.jup.ag/docs/api/tagged) API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_token_tagged</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_token_tagged(self, tag: str | JupiterTokenTagType) -&gt; GetTokenTaggedResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Tagged Token]https://station.jup.ag/docs/api/tagged)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_token_tagged`][cyhole.jupiter.interaction.Jupiter._get_token_tagged].\n    \"\"\"\n    return self._interaction._get_token_tagged(True, tag)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.post_limit_order_create","title":"post_limit_order_create","text":"<pre><code>post_limit_order_create(\n    body: PostLimitOrderCreateBody,\n) -&gt; PostLimitOrderCreateResponse\n</code></pre> <p>Call the Jupiter's POST Limit Order - Create API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._post_limit_order_create</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def post_limit_order_create(self, body: PostLimitOrderCreateBody) -&gt; PostLimitOrderCreateResponse:\n    \"\"\"\n        Call the Jupiter's POST **[Limit Order - Create](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._post_limit_order_create`][cyhole.jupiter.interaction.Jupiter._post_limit_order_create].\n    \"\"\"\n    return self._interaction._post_limit_order_create(True, body)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.post_limit_order_cancel","title":"post_limit_order_cancel","text":"<pre><code>post_limit_order_cancel(\n    body: PostLimitOrderCancelBody,\n) -&gt; PostLimitOrderCancelResponse\n</code></pre> <p>Call the Jupiter's POST Limit Order - Cancel API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._post_limit_order_cancel</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def post_limit_order_cancel(self, body: PostLimitOrderCancelBody) -&gt; PostLimitOrderCancelResponse:\n    \"\"\"\n        Call the Jupiter's POST **[Limit Order - Cancel](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._post_limit_order_cancel`][cyhole.jupiter.interaction.Jupiter._post_limit_order_cancel].\n    \"\"\"\n    return self._interaction._post_limit_order_cancel(True, body)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_limit_order_open","title":"get_limit_order_open","text":"<pre><code>get_limit_order_open(\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n) -&gt; GetLimitOrderOpenResponse\n</code></pre> <p>Call the Jupiter's GET Limit Order - Open API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_limit_order_open</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_limit_order_open(\n        self,\n        wallet: str | None = None,\n        input_token: str | None = None,\n        output_token: str | None = None\n    ) -&gt; GetLimitOrderOpenResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Limit Order - Open](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_limit_order_open`][cyhole.jupiter.interaction.Jupiter._get_limit_order_open].\n    \"\"\"\n    return self._interaction._get_limit_order_open(True, wallet, input_token, output_token)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_limit_order_history","title":"get_limit_order_history","text":"<pre><code>get_limit_order_history(\n    wallet: str,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; GetLimitOrderHistoryResponse\n</code></pre> <p>Call the Jupiter's GET Limit Order - History API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_limit_order_history</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_limit_order_history(\n    self,\n    wallet: str,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None\n) -&gt; GetLimitOrderHistoryResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Limit Order - History](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_limit_order_history`][cyhole.jupiter.interaction.Jupiter._get_limit_order_history].\n    \"\"\"\n    return self._interaction._get_limit_order_history(True, wallet, cursor, skip, take)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterClient.get_limit_order_trade_history","title":"get_limit_order_trade_history","text":"<pre><code>get_limit_order_trade_history(\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; GetLimitOrderTradeHistoryResponse\n</code></pre> <p>Call the Jupiter's GET Limit Order - Trade History API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_limit_order_trade_history</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def get_limit_order_trade_history(\n    self,\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None\n) -&gt; GetLimitOrderTradeHistoryResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Limit Order - Trade History](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_limit_order_trade_history`][cyhole.jupiter.interaction.Jupiter._get_limit_order_trade_history].\n    \"\"\"\n    return self._interaction._get_limit_order_trade_history(True, wallet, input_token, output_token, cursor, skip, take)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient","title":"JupiterAsyncClient","text":"<pre><code>JupiterAsyncClient(\n    interaction: Jupiter, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>AsyncAPIClient</code></p> <p>Client used for asynchronous API calls for <code>Jupiter</code> interaction.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>def __init__(self, interaction: Jupiter, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction: Jupiter = self._interaction\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_price","title":"get_price  <code>async</code>","text":"<pre><code>get_price(\n    address: list[str],\n    extra_info: bool = False,\n    vs_address: str | None = None,\n) -&gt; GetPriceResponse\n</code></pre> <p>Call the Jupiter's GET Price API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_price</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_price(self, address: list[str], extra_info: bool = False, vs_address: str | None = None) -&gt; GetPriceResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Price](https://station.jup.ag/docs/utility/price-api)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_price`][cyhole.jupiter.interaction.Jupiter._get_price].\n    \"\"\"\n    return await self._interaction._get_price(False, address, extra_info, vs_address)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_quote","title":"get_quote  <code>async</code>","text":"<pre><code>get_quote(input: GetQuoteInput) -&gt; GetQuoteResponse\n</code></pre> <p>Call the Jupiter's GET Quote API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_quote</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_quote(self, input: GetQuoteInput) -&gt; GetQuoteResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Quote](https://station.jup.ag/api-v6/get-quote)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_quote`][cyhole.jupiter.interaction.Jupiter._get_quote].\n    \"\"\"\n    return await self._interaction._get_quote(False, input)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_quote_tokens","title":"get_quote_tokens  <code>async</code>","text":"<pre><code>get_quote_tokens() -&gt; GetQuoteTokensResponse\n</code></pre> <p>Call the Jupiter's GET Quote Tokens API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_quote_tokens</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_quote_tokens(self) -&gt; GetQuoteTokensResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Quote Tokens](https://station.jup.ag/api-v6/get-tokens)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_quote_tokens`][cyhole.jupiter.interaction.Jupiter._get_quote_tokens].\n    \"\"\"\n    return await self._interaction._get_quote_tokens(False)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_quote_program_id_label","title":"get_quote_program_id_label  <code>async</code>","text":"<pre><code>get_quote_program_id_label() -&gt; (\n    GetQuoteProgramIdLabelResponse\n)\n</code></pre> <p>Call the Jupiter's GET Quote Program ID to Label API endpoint for synchronous logic.  All the API endopint details are available on <code>Jupiter._get_quote_program_id_label</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_quote_program_id_label(self) -&gt; GetQuoteProgramIdLabelResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Quote Program ID to Label](https://station.jup.ag/api-v6/get-program-id-to-label)** API endpoint for synchronous logic. \n        All the API endopint details are available on [`Jupiter._get_quote_program_id_label`][cyhole.jupiter.interaction.Jupiter._get_quote_program_id_label].\n    \"\"\"\n    return await self._interaction._get_quote_program_id_label(False)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.post_swap","title":"post_swap  <code>async</code>","text":"<pre><code>post_swap(body: PostSwapBody) -&gt; PostSwapResponse\n</code></pre> <p>Call the Jupiter's POST Swap API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_quote_program_id_label</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def post_swap(self, body: PostSwapBody) -&gt; PostSwapResponse:\n    \"\"\"\n        Call the Jupiter's POST **[Swap](https://station.jup.ag/api-v6/post-swap)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_quote_program_id_label`][cyhole.jupiter.interaction.Jupiter._get_quote_program_id_label].\n    \"\"\"\n    return await self._interaction._post_swap(False, body)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_token_info","title":"get_token_info  <code>async</code>","text":"<pre><code>get_token_info(address: str) -&gt; GetTokenInfoResponse\n</code></pre> <p>Call the Jupiter's GET Token API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_token_info</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_token_info(self, address: str) -&gt; GetTokenInfoResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Token](https://station.jup.ag/docs/api/token-information)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_token_info`][cyhole.jupiter.interaction.Jupiter._get_token_info].\n    \"\"\"\n    return await self._interaction._get_token_info(False, address)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_token_market_mints","title":"get_token_market_mints  <code>async</code>","text":"<pre><code>get_token_market_mints(\n    address: str,\n) -&gt; GetTokenMarketMintsResponse\n</code></pre> <p>Call the Jupiter's GET Token Market Mints API for asynchronous logic. All the API endopint details are available on <code>Jupiter._get_token_market_mints</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_token_market_mints(self, address: str) -&gt; GetTokenMarketMintsResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Token Market Mints](https://station.jup.ag/docs/api/mints-in-market)** API for asynchronous logic.\n        All the API endopint details are available on [`Jupiter._get_token_market_mints`][cyhole.jupiter.interaction.Jupiter._get_token_market_mints].\n    \"\"\"\n    return await self._interaction._get_token_market_mints(False, address)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_token_tagged","title":"get_token_tagged  <code>async</code>","text":"<pre><code>get_token_tagged(\n    tag: str | JupiterTokenTagType,\n) -&gt; GetTokenTaggedResponse\n</code></pre> <p>Call the Jupiter's GET [Tagged Token]https://station.jup.ag/docs/api/tagged) API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_token_tagged</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_token_tagged(self, tag: str | JupiterTokenTagType) -&gt; GetTokenTaggedResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Tagged Token]https://station.jup.ag/docs/api/tagged)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_token_tagged`][cyhole.jupiter.interaction.Jupiter._get_token_tagged].\n    \"\"\"\n    return await self._interaction._get_token_tagged(False, tag)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_token_new","title":"get_token_new  <code>async</code>","text":"<pre><code>get_token_new(\n    limit: int = 10, offset: int | None = None\n) -&gt; GetTokenNewResponse\n</code></pre> <p>Call the Jupiter's GET New Token API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_token_new</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_token_new(self, limit: int = 10, offset: int | None = None) -&gt; GetTokenNewResponse:\n    \"\"\"\n        Call the Jupiter's GET **[New Token](https://station.jup.ag/docs/api/new)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_token_new`][cyhole.jupiter.interaction.Jupiter._get_token_new].\n    \"\"\"\n    return await self._interaction._get_token_new(False, limit, offset)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.post_limit_order_create","title":"post_limit_order_create  <code>async</code>","text":"<pre><code>post_limit_order_create(\n    body: PostLimitOrderCreateBody,\n) -&gt; PostLimitOrderCreateResponse\n</code></pre> <p>Call the Jupiter's POST Limit Order - Create API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._post_limit_order_create</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def post_limit_order_create(self, body: PostLimitOrderCreateBody) -&gt; PostLimitOrderCreateResponse:\n    \"\"\"\n        Call the Jupiter's POST **[Limit Order - Create](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._post_limit_order_create`][cyhole.jupiter.interaction.Jupiter._post_limit_order_create].\n    \"\"\"\n    return await self._interaction._post_limit_order_create(False, body)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.post_limit_order_cancel","title":"post_limit_order_cancel  <code>async</code>","text":"<pre><code>post_limit_order_cancel(\n    body: PostLimitOrderCancelBody,\n) -&gt; PostLimitOrderCancelResponse\n</code></pre> <p>Call the Jupiter's POST Limit Order - Cancel API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._post_limit_order_cancel</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def post_limit_order_cancel(self, body: PostLimitOrderCancelBody) -&gt; PostLimitOrderCancelResponse:\n    \"\"\"\n        Call the Jupiter's POST **[Limit Order - Cancel](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._post_limit_order_cancel`][cyhole.jupiter.interaction.Jupiter._post_limit_order_cancel].\n    \"\"\"\n    return await self._interaction._post_limit_order_cancel(False, body)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_limit_order_open","title":"get_limit_order_open  <code>async</code>","text":"<pre><code>get_limit_order_open(\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n) -&gt; GetLimitOrderOpenResponse\n</code></pre> <p>Call the Jupiter's GET Limit Order - Open API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_limit_order_open</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_limit_order_open(\n        self,\n        wallet: str | None = None,\n        input_token: str | None = None,\n        output_token: str | None = None\n    ) -&gt; GetLimitOrderOpenResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Limit Order - Open](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_limit_order_open`][cyhole.jupiter.interaction.Jupiter._get_limit_order_open].\n    \"\"\"\n    return await self._interaction._get_limit_order_open(False, wallet, input_token, output_token)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_limit_order_history","title":"get_limit_order_history  <code>async</code>","text":"<pre><code>get_limit_order_history(\n    wallet: str,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; GetLimitOrderHistoryResponse\n</code></pre> <p>Call the Jupiter's GET Limit Order - History API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_limit_order_history</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_limit_order_history(\n    self,\n    wallet: str,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None\n) -&gt; GetLimitOrderHistoryResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Limit Order - History](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_limit_order_history`][cyhole.jupiter.interaction.Jupiter._get_limit_order_history].\n    \"\"\"\n    return await self._interaction._get_limit_order_history(False, wallet, cursor, skip, take)\n</code></pre>"},{"location":"interactions/jupiter/client.html#cyhole.jupiter.client.JupiterAsyncClient.get_limit_order_trade_history","title":"get_limit_order_trade_history  <code>async</code>","text":"<pre><code>get_limit_order_trade_history(\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; GetLimitOrderTradeHistoryResponse\n</code></pre> <p>Call the Jupiter's GET Limit Order - Trade History API endpoint for asynchronous logic.  All the API endopint details are available on <code>Jupiter._get_limit_order_trade_history</code>.</p> Source code in <code>src/cyhole/jupiter/client.py</code> <pre><code>async def get_limit_order_trade_history(\n    self,\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None\n) -&gt; GetLimitOrderTradeHistoryResponse:\n    \"\"\"\n        Call the Jupiter's GET **[Limit Order - Trade History](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint for asynchronous logic. \n        All the API endopint details are available on [`Jupiter._get_limit_order_trade_history`][cyhole.jupiter.interaction.Jupiter._get_limit_order_trade_history].\n    \"\"\"\n    return await self._interaction._get_limit_order_trade_history(False, wallet, input_token, output_token, cursor, skip, take)\n</code></pre>"},{"location":"interactions/jupiter/exception.html","title":"Exceptions","text":""},{"location":"interactions/jupiter/exception.html#cyhole.jupiter.exception","title":"cyhole.jupiter.exception","text":""},{"location":"interactions/jupiter/exception.html#cyhole.jupiter.exception.JupiterException","title":"JupiterException","text":"<pre><code>JupiterException(description)\n</code></pre> <p>               Bases: <code>CyholeException</code></p> <p>General Exception for Jupiter API.</p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/jupiter/exception.html#cyhole.jupiter.exception.JupiterNoRouteFoundError","title":"JupiterNoRouteFoundError","text":"<pre><code>JupiterNoRouteFoundError(description)\n</code></pre> <p>               Bases: <code>JupiterException</code></p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/jupiter/exception.html#cyhole.jupiter.exception.JupiterInvalidRequest","title":"JupiterInvalidRequest","text":"<pre><code>JupiterInvalidRequest(description)\n</code></pre> <p>               Bases: <code>JupiterException</code></p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/jupiter/interaction.html","title":"Interaction","text":""},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter","title":"cyhole.jupiter.Jupiter","text":"<pre><code>Jupiter(headers: Any | None = None)\n</code></pre> <p>               Bases: <code>Interaction</code></p> <p>Class used to connect Jupiter API, one of them most popular Solana DEX.  To have access Jupiter API is not required an API key.</p> <p>Check https://station.jup.ag/docs/api for all the details on the available endpoints.</p> <p>Example</p> <pre><code>import asyncio\nfrom cyhole.jupiter import Jupiter\nfrom cyhole.core.token.solana import JUP\n\njupiter = Jupiter()\n\n# Get current price of JUP on Solana\n# synchronous\nresponse = jupiter.client.get_price([JUP.address])\nprint(\"Current JUP/USDC:\", response.data[JUP.address].price)\n\n# asynchronous\nasync def main() -&gt; None:\n    async with jupiter.async_client as client:\n        response = await client.get_price([JUP.address])\n        print(\"Current JUP/USDC:\", response.data[JUP.address].price)\n\nasyncio.run(main())\n</code></pre> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def __init__(self, headers: Any | None = None) -&gt; None:\n    super().__init__(headers)\n\n    # clients\n    self.client = JupiterClient(self)\n    self.async_client = JupiterAsyncClient(self)\n\n    # API urls\n    self.url_api_price = \"https://api.jup.ag/price/v2\"\n    self.url_api_quote = \"https://api.jup.ag/swap/v1/\"\n    self.url_api_token = \"https://api.jup.ag/tokens/v1/\"\n    self.url_api_limit = \"https://jup.ag/api/limit/v1/\"\n    return\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_price","title":"_get_price","text":"<pre><code>_get_price(\n    sync: Literal[True],\n    address: list[str],\n    extra_info: bool = False,\n    vs_address: str | None = None,\n) -&gt; GetPriceResponse\n</code></pre><pre><code>_get_price(\n    sync: Literal[False],\n    address: list[str],\n    extra_info: bool = False,\n    vs_address: str | None = None,\n) -&gt; Coroutine[None, None, GetPriceResponse]\n</code></pre> <pre><code>_get_price(\n    sync: bool,\n    address: list[str],\n    extra_info: bool = False,\n    vs_address: str | None = None,\n) -&gt; (\n    GetPriceResponse\n    | Coroutine[None, None, GetPriceResponse]\n)\n</code></pre> <p>This function refers to the GET Price API endpoint,  and it is used to get the current price of a list of tokens on Solana chain with respect to another token taken from Jupiter Swap.</p> <p>The API returns the unit buy price for the tokens; by default, the price is provided according to  the value of <code>USDC</code> token. It is also possible to provide another comparison token in the request.</p> <p>Info</p> <p>Observe that when the token address or comparison token address are not found,  the response provided will have a <code>data</code> object with the token address as key and the value will be <code>None</code>.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>list[str]</code> <p>list of tokens addresses to get the price. For example, <code>So11111111111111111111111111111111111111112</code>.</p> required <code>extra_info</code> <code>bool</code> <p>flag to include extra information in the response that could be useful fot analysis (e.g., last swap, current quote price). More important, if activated, then <code>vs_address</code> is ignored.</p> <code>False</code> <code>vs_address</code> <code>str | None</code> <p>comparison token address. Default Value: <code>None</code> (<code>USDC</code>)</p> <code>None</code> <p>Returns:</p> Type Description <code>GetPriceResponse | Coroutine[None, None, GetPriceResponse]</code> <p>tokens' prices.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_price(self, sync: bool, address: list[str], extra_info: bool = False, vs_address: str | None = None) -&gt; GetPriceResponse | Coroutine[None, None, GetPriceResponse]:\n    \"\"\"\n        This function refers to the GET **[Price](https://station.jup.ag/docs/utility/price-api)** API endpoint, \n        and it is used to get the current price of a list of tokens on Solana chain with respect to another token\n        taken from [Jupiter Swap](https://jup.ag).\n\n        The API returns the unit buy price for the tokens; by default, the price is provided according to \n        the value of `USDC` token. It is also possible to provide another comparison token in the request.\n\n        !!! info\n            Observe that when the token address or comparison token address are not found, \n            the response provided will have a `data` object with the token address as key and\n            the value will be `None`.\n\n        Parameters:\n            address: list of tokens addresses to get the price.\n                For example, `So11111111111111111111111111111111111111112`.\n            extra_info: flag to include extra information in the response\n                that could be useful fot analysis (e.g., last swap, current quote price).\n                More important, if activated, then `vs_address` is ignored.\n            vs_address: comparison token address.\n                Default Value: `None` (`USDC`)\n\n        Returns:\n            tokens' prices.\n    \"\"\"\n\n    # extra_info consistency\n    if extra_info:\n        vs_address = None\n\n    # set params\n    params = {\n        \"ids\": \",\".join(address),\n        \"vsToken\": vs_address,\n        \"showExtraInfo\": \"true\" if extra_info else \"false\"\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, self.url_api_price, params = params)\n        return GetPriceResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, self.url_api_price, params = params)\n            return GetPriceResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_quote","title":"_get_quote","text":"<pre><code>_get_quote(\n    sync: Literal[True], input: GetQuoteInput\n) -&gt; GetQuoteResponse\n</code></pre><pre><code>_get_quote(\n    sync: Literal[False], input: GetQuoteInput\n) -&gt; Coroutine[None, None, GetQuoteResponse]\n</code></pre> <pre><code>_get_quote(\n    sync: bool, input: GetQuoteInput\n) -&gt; (\n    GetQuoteResponse\n    | Coroutine[None, None, GetQuoteResponse]\n)\n</code></pre> <p>This function refers to the GET Quote API endpoint,  and it is used to get a quote for swapping a specific amount of tokens. The function can be combined with the <code>post_swap</code> enpdpoint to implement a payment mechanism.</p> <p>Parameters:</p> Name Type Description Default <code>input</code> <code>GetQuoteInput</code> <p>an input schema used to describe the request. More details in the object definition.</p> required <p>Returns:</p> Type Description <code>GetQuoteResponse | Coroutine[None, None, GetQuoteResponse]</code> <p>Quote found by Jupiter API.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_quote(self, sync: bool, input: GetQuoteInput) -&gt; GetQuoteResponse | Coroutine[None, None, GetQuoteResponse]:\n    \"\"\"\n        This function refers to the GET **[Quote](https://station.jup.ag/docs/api/quote)** API endpoint, \n        and it is used to get a quote for swapping a specific amount of tokens.  \n        The function can be combined with the `post_swap` enpdpoint to implement a payment mechanism.\n\n        Parameters:\n            input: an input schema used to describe the request.\n                More details in the object definition.\n\n        Returns:\n            Quote found by Jupiter API.\n    \"\"\"\n    # set params\n    url = self.url_api_quote + \"quote\"\n    params = input.model_dump(\n        by_alias = True, \n        exclude_defaults = True\n    )\n\n    # execute request\n    if sync:\n        try:\n            content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        except HTTPError as e:\n            raise self._raise(e)\n        return GetQuoteResponse(**content_raw.json())\n    else:\n        async def async_request():\n            try:\n                content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            except HTTPError as e:\n                raise self._raise(e)\n            return GetQuoteResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_quote_tokens","title":"_get_quote_tokens","text":"<pre><code>_get_quote_tokens(\n    sync: Literal[True],\n) -&gt; GetQuoteTokensResponse\n</code></pre><pre><code>_get_quote_tokens(\n    sync: Literal[False],\n) -&gt; Coroutine[None, None, GetQuoteTokensResponse]\n</code></pre> <pre><code>_get_quote_tokens(\n    sync: bool,\n) -&gt; (\n    GetQuoteTokensResponse\n    | Coroutine[None, None, GetQuoteTokensResponse]\n)\n</code></pre> <p>This function refers to the GET Quote Tokens API endpoint,  and it is used to get the list of the current supported tradable tokens. </p> <p>Returns:</p> Type Description <code>GetQuoteTokensResponse | Coroutine[None, None, GetQuoteTokensResponse]</code> <p>List of tradable tokens.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_quote_tokens(self, sync: bool) -&gt; GetQuoteTokensResponse | Coroutine[None, None, GetQuoteTokensResponse]:\n    \"\"\"\n        This function refers to the GET **[Quote Tokens](https://station.jup.ag/api-v6/get-tokens)** API endpoint, \n        and it is used to get the list of the current supported tradable tokens. \n\n        Returns:\n            List of tradable tokens.\n    \"\"\"\n    # set params\n    url = self.url_api_quote + \"tokens\"\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url)\n        return GetQuoteTokensResponse(tokens = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url)\n            return GetQuoteTokensResponse(tokens = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_quote_program_id_label","title":"_get_quote_program_id_label","text":"<pre><code>_get_quote_program_id_label(\n    sync: Literal[True],\n) -&gt; GetQuoteProgramIdLabelResponse\n</code></pre><pre><code>_get_quote_program_id_label(\n    sync: Literal[False],\n) -&gt; Coroutine[None, None, GetQuoteProgramIdLabelResponse]\n</code></pre> <pre><code>_get_quote_program_id_label(\n    sync: bool,\n) -&gt; (\n    GetQuoteProgramIdLabelResponse\n    | Coroutine[None, None, GetQuoteProgramIdLabelResponse]\n)\n</code></pre> <p>This function refers to the GET Quote Program ID to Label API endpoint,  and it is used to get the list of supported DEXes to use in quote endpoint. </p> <p>Returns:</p> Type Description <code>GetQuoteProgramIdLabelResponse | Coroutine[None, None, GetQuoteProgramIdLabelResponse]</code> <p>List of DEXs addresses and labels.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_quote_program_id_label(self, sync: bool) -&gt; GetQuoteProgramIdLabelResponse | Coroutine[None, None, GetQuoteProgramIdLabelResponse]:\n    \"\"\"\n        This function refers to the GET **[Quote Program ID to Label](https://api.jup.ag/swap/v1/program-id-to-label)** API endpoint, \n        and it is used to get the list of supported DEXes to use in quote endpoint. \n\n        Returns:\n            List of DEXs addresses and labels.\n    \"\"\"\n    # set params\n    url = self.url_api_quote + \"program-id-to-label\"\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url)\n        return GetQuoteProgramIdLabelResponse(dexes = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url)\n            return GetQuoteProgramIdLabelResponse(dexes = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._post_swap","title":"_post_swap","text":"<pre><code>_post_swap(\n    sync: Literal[True], body: PostSwapBody\n) -&gt; PostSwapResponse\n</code></pre><pre><code>_post_swap(\n    sync: Literal[False], body: PostSwapBody\n) -&gt; Coroutine[None, None, PostSwapResponse]\n</code></pre> <pre><code>_post_swap(\n    sync: bool, body: PostSwapBody\n) -&gt; (\n    PostSwapResponse\n    | Coroutine[None, None, PostSwapResponse]\n)\n</code></pre> <p>This function refers to the POST Swap API endpoint,  and it is used to recive the transaction to perform the swap initialised from <code>get_quote</code>  endopoint for the desired pair. The function should be combined with the <code>get_quote</code> endpoint.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>PostSwapBody</code> <p>the body to sent to Jupiter API that describe the swap. More details in the object definition.</p> required <p>Returns:</p> Type Description <code>PostSwapResponse | Coroutine[None, None, PostSwapResponse]</code> <p>Transaction found by Jupiter API.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _post_swap(self, sync: bool, body: PostSwapBody) -&gt; PostSwapResponse | Coroutine[None, None, PostSwapResponse]:\n    \"\"\"\n        This function refers to the POST **[Swap](https://station.jup.ag/api-v6/post-swap)** API endpoint, \n        and it is used to recive the transaction to perform the swap initialised from `get_quote` \n        endopoint for the desired pair.  \n        The function should be combined with the `get_quote` endpoint.\n\n        Parameters:\n            body: the body to sent to Jupiter API that describe the swap.\n                More details in the object definition.\n\n        Returns:\n            Transaction found by Jupiter API.\n    \"\"\"\n    # set params\n    url = self.url_api_quote + \"swap\"\n    headers = {\n        \"Content-Type\": \"application/json\"\n    }\n\n    # execute request\n    if sync:\n        try:\n            content_raw = self.client.api(\n                type = RequestType.POST.value,\n                url = url,\n                headers = headers,\n                json = body.model_dump(by_alias = True, exclude_defaults = True)\n            )\n        except HTTPError as e:\n            raise self._raise(e)\n        return PostSwapResponse(**content_raw.json())\n    else:\n        async def async_request():\n            try:\n                content_raw = await self.async_client.api(\n                    type = RequestType.POST.value,\n                    url = url,\n                    headers = headers,\n                    json = body.model_dump(by_alias = True, exclude_defaults = True)\n                )\n            except HTTPError as e:\n                raise self._raise(e)\n            return PostSwapResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_token_info","title":"_get_token_info","text":"<pre><code>_get_token_info(\n    sync: Literal[True], address: str\n) -&gt; GetTokenInfoResponse\n</code></pre><pre><code>_get_token_info(\n    sync: Literal[False], address: str\n) -&gt; Coroutine[None, None, GetTokenInfoResponse]\n</code></pre> <pre><code>_get_token_info(\n    sync: bool, address: str\n) -&gt; (\n    GetTokenInfoResponse\n    | Coroutine[None, None, GetTokenInfoResponse]\n)\n</code></pre> <p>This function refers to the GET Token API endpoint, with a specific focus on retrieving the information of a token given its address.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>address of the token to check. For example, <code>So11111111111111111111111111111111111111112</code>.</p> required <p>Returns:</p> Type Description <code>GetTokenInfoResponse | Coroutine[None, None, GetTokenInfoResponse]</code> <p>Information of the token.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_token_info(self, sync: bool, address: str) -&gt; GetTokenInfoResponse | Coroutine[None, None, GetTokenInfoResponse]:\n    \"\"\"\n        This function refers to the GET **[Token](https://station.jup.ag/docs/api/token-information)** API endpoint,\n        with a specific focus on retrieving the information of a token given its address.\n\n        Parameters:\n            address: address of the token to check.\n                For example, `So11111111111111111111111111111111111111112`.\n\n        Returns:\n            Information of the token.\n    \"\"\"\n    # set url\n    url = self.url_api_token + address\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url)\n        return GetTokenInfoResponse(**content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url)\n            return GetTokenInfoResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_token_market_mints","title":"_get_token_market_mints","text":"<pre><code>_get_token_market_mints(\n    sync: Literal[True], address: str\n) -&gt; GetTokenMarketMintsResponse\n</code></pre><pre><code>_get_token_market_mints(\n    sync: Literal[False], address: str\n) -&gt; Coroutine[None, None, GetTokenMarketMintsResponse]\n</code></pre> <pre><code>_get_token_market_mints(\n    sync: bool, address: str\n) -&gt; (\n    GetTokenMarketMintsResponse\n    | Coroutine[None, None, GetTokenMarketMintsResponse]\n)\n</code></pre> <p>This function refers to the GET Token Market Mints API endpoint, and can be used to retrieve the list of token addresses that belong to a market/pool address.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>address of the market/pool to check.</p> required <p>Returns:</p> Type Description <code>GetTokenMarketMintsResponse | Coroutine[None, None, GetTokenMarketMintsResponse]</code> <p>List of token addresses.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_token_market_mints(self, sync: bool, address: str) -&gt; GetTokenMarketMintsResponse | Coroutine[None, None, GetTokenMarketMintsResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Market Mints](https://station.jup.ag/docs/api/mints-in-market)** API endpoint,\n        and can be used to retrieve the list of token addresses that belong to a market/pool address.\n\n        Parameters:\n            address: address of the market/pool to check.\n\n        Returns:\n            List of token addresses.\n    \"\"\"\n    # set url\n    url = self.url_api_token + f\"market/{address}/mints\"\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url)\n        return GetTokenMarketMintsResponse(mints = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url)\n            return GetTokenMarketMintsResponse(mints = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_token_tagged","title":"_get_token_tagged","text":"<pre><code>_get_token_tagged(\n    sync: Literal[True], tag: str | JupiterTokenTagType\n) -&gt; GetTokenTaggedResponse\n</code></pre><pre><code>_get_token_tagged(\n    sync: Literal[False], tag: str | JupiterTokenTagType\n) -&gt; Coroutine[None, None, GetTokenTaggedResponse]\n</code></pre> <pre><code>_get_token_tagged(\n    sync: bool, tag: str | JupiterTokenTagType\n) -&gt; (\n    GetTokenTaggedResponse\n    | Coroutine[None, None, GetTokenTaggedResponse]\n)\n</code></pre> <p>This function refers to the GET Tagged Token API endpoint,  and it is used to retrieved the list of tokens eligible for trading, managed by Jupiter. Choose the tokens list according to <code>tag</code> field.</p> <p>Parameters:</p> Name Type Description Default <code>tag</code> <code>str | JupiterTokenTagType</code> <p>Jupiter manages the tradable tokens through a set of tags in order to guarantee its  core values and provide a secure service. The supported tages are available on <code>JupiterTokenTagType</code>.</p> required <p>Returns:</p> Type Description <code>GetTokenTaggedResponse | Coroutine[None, None, GetTokenTaggedResponse]</code> <p>List of Jupiter's tokens list.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_token_tagged(self, sync: bool, tag: str | JupiterTokenTagType) -&gt; GetTokenTaggedResponse | Coroutine[None, None, GetTokenTaggedResponse]:\n    \"\"\"\n        This function refers to the GET **[Tagged Token](https://station.jup.ag/docs/api/tagged)** API endpoint, \n        and it is used to retrieved the list of tokens eligible for trading, managed by Jupiter.  \n        Choose the tokens list according to `tag` field.\n\n        Parameters:\n            tag: Jupiter manages the tradable tokens through a set of tags in order to guarantee its \n                core values and provide a secure service. The supported tages are available on [`JupiterTokenTagType`][cyhole.jupiter.param.JupiterTokenTagType].\n\n        Returns:\n            List of Jupiter's tokens list.\n    \"\"\"\n    # check param consistency\n    tag_str = tag if isinstance(tag, str) else tag.value\n    JupiterTokenTagType.check(tag_str)\n\n    # set params\n    url = self.url_api_token + \"tagged/\" + tag_str\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url)\n        return GetTokenTaggedResponse(tokens = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url)\n            return GetTokenTaggedResponse(tokens = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_token_new","title":"_get_token_new","text":"<pre><code>_get_token_new(\n    sync: Literal[True],\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetTokenNewResponse\n</code></pre><pre><code>_get_token_new(\n    sync: Literal[False],\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; Coroutine[None, None, GetTokenNewResponse]\n</code></pre> <pre><code>_get_token_new(\n    sync: bool, limit: int = 10, offset: int | None = None\n) -&gt; (\n    GetTokenNewResponse\n    | Coroutine[None, None, GetTokenNewResponse]\n)\n</code></pre> <p>This function refers to the GET New Token API endpoint,  and it is used to retrieved the list of new tokens managed by Jupiter.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>number of tokens to retrieve.</p> <code>10</code> <code>offset</code> <code>int | None</code> <p>number of tokens to skip.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetTokenNewResponse | Coroutine[None, None, GetTokenNewResponse]</code> <p>List of Jupiter's tokens list.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_token_new(self, sync: bool, limit: int = 10, offset: int | None = None) -&gt; GetTokenNewResponse | Coroutine[None, None, GetTokenNewResponse]:\n    \"\"\"\n        This function refers to the GET **[New Token](https://station.jup.ag/docs/api/new)** API endpoint, \n        and it is used to retrieved the list of new tokens managed by Jupiter.\n\n        Parameters:\n            limit: number of tokens to retrieve.\n            offset: number of tokens to skip.\n\n        Returns:\n            List of Jupiter's tokens list.\n    \"\"\"\n    # set params\n    url = self.url_api_token + \"new\"\n    params = {\n        \"limit\": limit,\n        \"offset\": offset\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetTokenNewResponse(tokens = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetTokenNewResponse(tokens = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._post_limit_order_create","title":"_post_limit_order_create","text":"<pre><code>_post_limit_order_create(\n    sync: Literal[True], body: PostLimitOrderCreateBody\n) -&gt; PostLimitOrderCreateResponse\n</code></pre><pre><code>_post_limit_order_create(\n    sync: Literal[False], body: PostLimitOrderCreateBody\n) -&gt; Coroutine[None, None, PostLimitOrderCreateResponse]\n</code></pre> <pre><code>_post_limit_order_create(\n    sync: bool, body: PostLimitOrderCreateBody\n) -&gt; (\n    PostLimitOrderCreateResponse\n    | Coroutine[None, None, PostLimitOrderCreateResponse]\n)\n</code></pre> <p>This function refers to the POST Limit Order - Create API endpoint,  and it is used to receive the transaction to perform the creation of a Limit Order via Jupiter API.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>PostLimitOrderCreateBody</code> <p>the body to sent to Jupiter API that describe the swap. More details in the object definition.</p> required <p>Returns:</p> Type Description <code>PostLimitOrderCreateResponse | Coroutine[None, None, PostLimitOrderCreateResponse]</code> <p>Transaction created by Jupiter API.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _post_limit_order_create(self, sync: bool, body: PostLimitOrderCreateBody) -&gt; PostLimitOrderCreateResponse | Coroutine[None, None, PostLimitOrderCreateResponse]:\n    \"\"\"\n        This function refers to the POST **[Limit Order - Create](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint, \n        and it is used to receive the transaction to perform the creation of a Limit Order via Jupiter API.\n\n        Parameters:\n            body: the body to sent to Jupiter API that describe the swap.\n                More details in the object definition.\n\n        Returns:\n            Transaction created by Jupiter API.\n    \"\"\"\n\n    # set params\n    url = self.url_api_limit + \"createOrder\"\n    headers = {\n        \"Content-Type\": \"application/json\"\n    }\n\n    # execute request\n    if sync:\n        try:\n            content_raw = self.client.api(\n                type = RequestType.POST.value,\n                url = url,\n                headers = headers,\n                json = body.model_dump(by_alias = True, exclude_defaults = True)\n            )\n        except HTTPError as e:\n            raise self._raise(e)\n        return PostLimitOrderCreateResponse(**content_raw.json())\n    else:\n        async def async_request():\n            try:\n                content_raw = await self.async_client.api(\n                    type = RequestType.POST.value,\n                    url = url,\n                    headers = headers,\n                    json = body.model_dump(by_alias = True, exclude_defaults = True)\n                )\n            except HTTPError as e:\n                raise self._raise(e)\n            return PostLimitOrderCreateResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._post_limit_order_cancel","title":"_post_limit_order_cancel","text":"<pre><code>_post_limit_order_cancel(\n    sync: Literal[True], body: PostLimitOrderCancelBody\n) -&gt; PostLimitOrderCancelResponse\n</code></pre><pre><code>_post_limit_order_cancel(\n    sync: Literal[False], body: PostLimitOrderCancelBody\n) -&gt; Coroutine[None, None, PostLimitOrderCancelResponse]\n</code></pre> <pre><code>_post_limit_order_cancel(\n    sync: bool, body: PostLimitOrderCancelBody\n) -&gt; (\n    PostLimitOrderCancelResponse\n    | Coroutine[None, None, PostLimitOrderCancelResponse]\n)\n</code></pre> <p>This function refers to the POST Limit Order - Cancel API endpoint,  and it is used to receive the transaction to perform the cancellation of a Limit Order previously  opened via Jupiter API.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>PostLimitOrderCancelBody</code> <p>the body to sent to Jupiter API that describe the limit order to cancel. More details in the object definition.</p> required <p>Returns:</p> Type Description <code>PostLimitOrderCancelResponse | Coroutine[None, None, PostLimitOrderCancelResponse]</code> <p>Transaction created by Jupiter API.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _post_limit_order_cancel(self, sync: bool, body: PostLimitOrderCancelBody) -&gt; PostLimitOrderCancelResponse | Coroutine[None, None, PostLimitOrderCancelResponse]:\n    \"\"\"\n        This function refers to the POST **[Limit Order - Cancel](https://station.jup.ag/docs/limit-order/limit-order-api)** API endpoint, \n        and it is used to receive the transaction to perform the cancellation of a Limit Order previously \n        opened via Jupiter API.\n\n        Parameters:\n            body: the body to sent to Jupiter API that describe the limit order to cancel.\n                More details in the object definition.\n\n        Returns:\n            Transaction created by Jupiter API.\n    \"\"\"\n\n    # set params\n    url = self.url_api_limit + \"cancelOrders\"\n    headers = {\n        \"Content-Type\": \"application/json\"\n    }\n\n    # execute request\n    if sync:\n        try:\n            content_raw = self.client.api(\n                type = RequestType.POST.value,\n                url = url,\n                headers = headers,\n                json = body.model_dump(by_alias = True, exclude_defaults = True)\n            )\n        except HTTPError as e:\n            raise self._raise(e)\n        return PostLimitOrderCancelResponse(**content_raw.json())\n    else:\n        async def async_request():\n            try:\n                content_raw = await self.async_client.api(\n                    type = RequestType.POST.value,\n                    url = url,\n                    headers = headers,\n                    json = body.model_dump(by_alias = True, exclude_defaults = True)\n                )\n            except HTTPError as e:\n                raise self._raise(e)\n            return PostLimitOrderCancelResponse(**content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_limit_order_open","title":"_get_limit_order_open","text":"<pre><code>_get_limit_order_open(\n    sync: Literal[True],\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n) -&gt; GetLimitOrderOpenResponse\n</code></pre><pre><code>_get_limit_order_open(\n    sync: Literal[False],\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n) -&gt; Coroutine[None, None, GetLimitOrderOpenResponse]\n</code></pre> <pre><code>_get_limit_order_open(\n    sync: bool,\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n) -&gt; (\n    GetLimitOrderOpenResponse\n    | Coroutine[None, None, GetLimitOrderOpenResponse]\n)\n</code></pre> <p>This function refers to the GET Limit Order - Open  API endpoint, and it is used to receive the current open limit orders related to a wallet, input token  or output token via Jupiter API. </p> <p>Observe that all the input parameters are optional; if for example, only the <code>input_token</code> is provided,  then all the limit orders having that input token address are returned (if available).</p> <p>Parameters:</p> Name Type Description Default <code>wallet</code> <code>str | None</code> <p>address of the wallet to check.</p> <code>None</code> <code>input_token</code> <code>str | None</code> <p>address of the input token associated to the limit order.</p> <code>None</code> <code>output_token</code> <code>str | None</code> <p>address of the output token associated to the limit order.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetLimitOrderOpenResponse | Coroutine[None, None, GetLimitOrderOpenResponse]</code> <p>Open limit orders created by Jupiter API.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_limit_order_open(\n    self,\n    sync: bool,\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None\n) -&gt; GetLimitOrderOpenResponse | Coroutine[None, None, GetLimitOrderOpenResponse]:\n    \"\"\"\n        This function refers to the GET **[Limit Order - Open](https://station.jup.ag/docs/limit-order/limit-order-api)** \n        API endpoint, and it is used to receive the current open limit orders related to a wallet, input token \n        or output token via Jupiter API. \n\n        Observe that all the input parameters are optional; if for example, only the `input_token` is provided, \n        then **all** the limit orders having that input token address are returned (if available).\n\n        Parameters:\n            wallet: address of the wallet to check.\n            input_token: address of the input token associated to the limit order.\n            output_token: address of the output token associated to the limit order.\n\n        Returns:\n            Open limit orders created by Jupiter API.\n    \"\"\"\n    # set params\n    url = self.url_api_limit + \"openOrders\"\n    params = {\n        \"wallet\": wallet,\n        \"inputMint\": input_token,\n        \"outputMint\": output_token\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetLimitOrderOpenResponse(orders = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetLimitOrderOpenResponse(orders = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_limit_order_history","title":"_get_limit_order_history","text":"<pre><code>_get_limit_order_history(\n    sync: Literal[True],\n    wallet: str,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; GetLimitOrderHistoryResponse\n</code></pre><pre><code>_get_limit_order_history(\n    sync: Literal[False],\n    wallet: str,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; Coroutine[None, None, GetLimitOrderHistoryResponse]\n</code></pre> <pre><code>_get_limit_order_history(\n    sync: bool,\n    wallet: str,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; (\n    GetLimitOrderHistoryResponse\n    | Coroutine[None, None, GetLimitOrderHistoryResponse]\n)\n</code></pre> <p>This function refers to the GET Limit Order - History  API endpoint, and it is used to retrieve the history of Limit Orders associated to a wallet via Jupiter API. </p> <p>Parameters:</p> Name Type Description Default <code>wallet</code> <code>str</code> <p>address of the wallet to check.</p> required <code>cursor</code> <code>int | None</code> <p>specify which 'page' of orders to return.</p> <code>None</code> <code>skip</code> <code>int | None</code> <p>specify the number of order to skip (from the top).</p> <code>None</code> <code>take</code> <code>int | None</code> <p>specify the number of orders to return.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetLimitOrderHistoryResponse | Coroutine[None, None, GetLimitOrderHistoryResponse]</code> <p>History of limit orders associated to the input wallet.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_limit_order_history(\n    self,\n    sync: bool,\n    wallet: str,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None\n) -&gt; GetLimitOrderHistoryResponse | Coroutine[None, None, GetLimitOrderHistoryResponse]:\n    \"\"\"\n        This function refers to the GET **[Limit Order - History](https://station.jup.ag/docs/limit-order/limit-order-api)** \n        API endpoint, and it is used to retrieve the history of Limit Orders associated to a wallet via Jupiter API. \n\n        Parameters:\n            wallet: address of the wallet to check.\n            cursor: specify which 'page' of orders to return.\n            skip: specify the number of order to skip (from the top).\n            take: specify the number of orders to return.\n\n        Returns:\n            History of limit orders associated to the input wallet.\n    \"\"\"\n    # set params\n    url = self.url_api_limit + \"orderHistory\"\n    params = {\n        \"wallet\": wallet,\n        \"cursor\": cursor,\n        \"skip\": skip,\n        \"take\": take\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetLimitOrderHistoryResponse(orders = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetLimitOrderHistoryResponse(orders = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._get_limit_order_trade_history","title":"_get_limit_order_trade_history","text":"<pre><code>_get_limit_order_trade_history(\n    sync: Literal[True],\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; GetLimitOrderTradeHistoryResponse\n</code></pre><pre><code>_get_limit_order_trade_history(\n    sync: Literal[False],\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; Coroutine[\n    None, None, GetLimitOrderTradeHistoryResponse\n]\n</code></pre> <pre><code>_get_limit_order_trade_history(\n    sync: bool,\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None,\n) -&gt; (\n    GetLimitOrderTradeHistoryResponse\n    | Coroutine[\n        None, None, GetLimitOrderTradeHistoryResponse\n    ]\n)\n</code></pre> <p>This function refers to the GET Limit Order - Trade History  API endpoint, and it is used to retrieve the trades history related to Limit Orders extracted with specific  requirements via Jupiter API. </p> <p>Parameters:</p> Name Type Description Default <code>wallet</code> <code>str | None</code> <p>address of the wallet to check.</p> <code>None</code> <code>input_token</code> <code>str | None</code> <p>address of the input token associated to the limit order.</p> <code>None</code> <code>output_token</code> <code>str | None</code> <p>address of the output token associated to the limit order.</p> <code>None</code> <code>cursor</code> <code>int | None</code> <p>specify which 'page' of orders to return.</p> <code>None</code> <code>skip</code> <code>int | None</code> <p>specify the number of order to skip (from the top).</p> <code>None</code> <code>take</code> <code>int | None</code> <p>specify the number of orders to return.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetLimitOrderTradeHistoryResponse | Coroutine[None, None, GetLimitOrderTradeHistoryResponse]</code> <p>Hostory of limit orders associated to the input wallet.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _get_limit_order_trade_history(\n    self,\n    sync: bool,\n    wallet: str | None = None,\n    input_token: str | None = None,\n    output_token: str | None = None,\n    cursor: int | None = None,\n    skip: int | None = None,\n    take: int | None = None\n) -&gt; GetLimitOrderTradeHistoryResponse | Coroutine[None, None, GetLimitOrderTradeHistoryResponse]:\n    \"\"\"\n        This function refers to the GET **[Limit Order - Trade History](https://station.jup.ag/docs/limit-order/limit-order-api)** \n        API endpoint, and it is used to retrieve the trades history related to Limit Orders extracted with specific \n        requirements via Jupiter API. \n\n        Parameters:\n            wallet: address of the wallet to check.\n            input_token: address of the input token associated to the limit order.\n            output_token: address of the output token associated to the limit order.\n            cursor: specify which 'page' of orders to return.\n            skip: specify the number of order to skip (from the top).\n            take: specify the number of orders to return.\n\n        Returns:\n            Hostory of limit orders associated to the input wallet.\n    \"\"\"\n    # set params\n    url = self.url_api_limit + \"tradeHistory\"\n    params = {\n        \"wallet\": wallet,\n        \"inputMint\": input_token,\n        \"outputMint\": output_token,\n        \"cursor\": cursor,\n        \"skip\": skip,\n        \"take\": take\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = params)\n        return GetLimitOrderTradeHistoryResponse(orders = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = params)\n            return GetLimitOrderTradeHistoryResponse(orders = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/jupiter/interaction.html#cyhole.jupiter.Jupiter._raise","title":"_raise","text":"<pre><code>_raise(exception: HTTPError) -&gt; JupiterException\n</code></pre> <p>Internal function used to raise the correct  Jupiter exception according to the error code  provided by the API.</p> <p>Parameters:</p> Name Type Description Default <code>exception</code> <code>HTTPError</code> <p>the HTTP error returned from Jupiter API.</p> required <p>Raises:</p> Type Description <code>JupiterNoRouteFoundError</code> <p>for error code <code>COULD_NOT_FIND_ANY_ROUTE</code>  during the creation of a quote.</p> <code>JupiterInvalidRequest</code> <p>for error code <code>INVALID_REQUEST</code>.</p> <code>JupiterException</code> <p>general exception raised when an unknown  error code is found or a different error is found.</p> Source code in <code>src/cyhole/jupiter/interaction.py</code> <pre><code>def _raise(self, exception: HTTPError) -&gt; JupiterException:\n    \"\"\"\n        Internal function used to raise the correct \n        Jupiter exception according to the error code \n        provided by the API.\n\n        Parameters:\n            exception: the HTTP error returned from Jupiter API.\n\n        Raises:\n            JupiterNoRouteFoundError: for error code `COULD_NOT_FIND_ANY_ROUTE` \n                during the creation of a quote.\n            JupiterInvalidRequest: for error code `INVALID_REQUEST`.\n            JupiterException: general exception raised when an unknown \n                error code is found or a different error is found.\n    \"\"\"\n    try:\n        error = JupiterHTTPError(**exception.response.json())\n        match error.code:\n            case \"COULD_NOT_FIND_ANY_ROUTE\":\n                return JupiterNoRouteFoundError(error.msg)\n            case \"INVALID_REQUEST\":\n                return JupiterInvalidRequest(error.msg)\n            case _:\n                return JupiterException(error.model_dump_json())\n    except Exception:\n        return JupiterException(exception.response.content.decode())\n</code></pre>"},{"location":"interactions/jupiter/param.html","title":"Parameters","text":"<p>Some endpoints require input parameters belonging to specific domains. On this page, all domains can be found in order to be in line with the standards required by the API.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param","title":"cyhole.jupiter.param","text":""},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterSwapMode","title":"JupiterSwapMode","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Jupiter's swap modes.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterSwapDex","title":"JupiterSwapDex","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Jupiter's swap DEXes.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterLimitOrderState","title":"JupiterLimitOrderState","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Jupiter's limit order states.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterLimitOrderState.OPEN","title":"OPEN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>OPEN = 'Open'\n</code></pre> <p>The limit order is still open.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterLimitOrderState.COMPLETED","title":"COMPLETED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>COMPLETED = 'Completed'\n</code></pre> <p>The limit order is completed.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterLimitOrderState.CANCELLED","title":"CANCELLED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CANCELLED = 'Cancelled'\n</code></pre> <p>The limit order was cancelled.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterTokenTagType","title":"JupiterTokenTagType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Jupiter's token tag types.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterTokenTagType.MOONSHOT","title":"MOONSHOT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MOONSHOT = 'moonshot'\n</code></pre> <p>A list of tokens minted via Moonshot.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterTokenTagType.PUMPFUN","title":"PUMPFUN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PUMPFUN = 'pump'\n</code></pre> <p>A list of tokens minted via Pump.fun.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterTokenTagType.TOKEN_2022","title":"TOKEN_2022  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TOKEN_2022 = 'token-2022'\n</code></pre> <p>A list of all token-2022 tokens.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterTokenTagType.LIQUID_STAKED","title":"LIQUID_STAKED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIQUID_STAKED = 'lst'\n</code></pre> <p>A list of liquid staked tokens, maintained with Sanctum.</p>"},{"location":"interactions/jupiter/param.html#cyhole.jupiter.param.JupiterTokenTagType.VERIFIED","title":"VERIFIED  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>VERIFIED = 'verified'\n</code></pre> <p>A list of verified tokens, consisting of community-verified tokens  via catdetlist.jup.ag and the previous  standard of Jupiter Strict.</p>"},{"location":"interactions/jupiter/schema.html","title":"Response Schema","text":"<p>Each response has been mapped into a <code>pydantic</code> schema in a way that makes it easy to read and write codes that use them.</p> <p>The classes identifying the response schema of an endpoint are the only ones ending with <code>Response</code> word, all other sub-schemes are used to identify the structures obtained from the responses.</p> <p>Schema Enhancement</p> <p>If some schema are incorrect or needs to be enhanced (optional/mandatory fields changes, incorrect datatype or schema update) feel free to open a pull request or issue by attaching:</p> <pre><code>- method\n- endpoint call executed\n- response obtained\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema","title":"cyhole.jupiter.schema","text":""},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.JupiterHTTPError","title":"JupiterHTTPError","text":"<p>               Bases: <code>BaseModel</code></p> <p>Jupiter API returns an error schema on failed request  that can be used to investigated the error. This schema  is used to strandardise the HTTPErrors.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.JupiterHTTPError.code","title":"code  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>code: str = Field(\n    validation_alias=AliasChoices(\"errorCode\", \"error_code\")\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.JupiterHTTPError.msg","title":"msg  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>msg: str = Field(alias='error')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepthValues","title":"GetPriceDepthValues","text":"<p>               Bases: <code>BaseModel</code></p> <p>Depth values.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepthValues.amount_10_sol","title":"amount_10_sol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_10_sol: float = Field(alias='10')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepthValues.amount_100_sol","title":"amount_100_sol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_100_sol: float = Field(alias='100')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepthValues.amount_1000_sol","title":"amount_1000_sol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_1000_sol: float = Field(alias='1000')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepthRatio","title":"GetPriceDepthRatio","text":"<p>               Bases: <code>BaseModel</code></p> <p>Depth ratio information.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepthRatio.timestamp_unix","title":"timestamp_unix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>timestamp_unix: int = Field(alias='timestamp')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepthRatio.depth","title":"depth  <code>instance-attribute</code>","text":"<pre><code>depth: GetPriceDepthValues\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepth","title":"GetPriceDepth","text":"<p>               Bases: <code>BaseModel</code></p> <p>Depth information.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepth.buy_price_impact_ratio","title":"buy_price_impact_ratio  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_price_impact_ratio: GetPriceDepthRatio | None = Field(\n    default=None, alias=\"buyPriceImpactRatio\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceDepth.sell_price_impact_ratio","title":"sell_price_impact_ratio  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_price_impact_ratio: GetPriceDepthRatio | None = Field(\n    default=None, alias=\"sellPriceImpactRatio\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceLastSwappedPrice","title":"GetPriceLastSwappedPrice","text":"<p>               Bases: <code>BaseModel</code></p> <p>Last swapped price information.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceLastSwappedPrice.last_jupiter_sell_at_unix","title":"last_jupiter_sell_at_unix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_jupiter_sell_at_unix: int = Field(\n    alias=\"lastJupiterSellAt\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceLastSwappedPrice.last_jupiter_sell_price","title":"last_jupiter_sell_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_jupiter_sell_price: str = Field(\n    alias=\"lastJupiterSellPrice\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceLastSwappedPrice.last_jupiter_buy_at_unix","title":"last_jupiter_buy_at_unix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_jupiter_buy_at_unix: int = Field(\n    alias=\"lastJupiterBuyAt\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceLastSwappedPrice.last_jupiter_buy_price","title":"last_jupiter_buy_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_jupiter_buy_price: str = Field(\n    alias=\"lastJupiterBuyPrice\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceQuotedPrice","title":"GetPriceQuotedPrice","text":"<p>               Bases: <code>BaseModel</code></p> <p>Last quoted price information.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceQuotedPrice.buy_price","title":"buy_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_price: str = Field(alias='buyPrice')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceQuotedPrice.buy_at_unix","title":"buy_at_unix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>buy_at_unix: int = Field(alias='buyAt')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceQuotedPrice.sell_price","title":"sell_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_price: str | None = Field(\n    default=None, alias=\"sellPrice\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceQuotedPrice.sell_at_unix","title":"sell_at_unix  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sell_at_unix: int | None = Field(\n    default=None, alias=\"sellAt\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceExtraInfo","title":"GetPriceExtraInfo","text":"<p>               Bases: <code>BaseModel</code></p> <p>Extra information about the price.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceExtraInfo.last_swapped_price","title":"last_swapped_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_swapped_price: GetPriceLastSwappedPrice | None = Field(\n    default=None, alias=\"lastSwappedPrice\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceExtraInfo.quoted_price","title":"quoted_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quoted_price: GetPriceQuotedPrice = Field(\n    alias=\"quotedPrice\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceExtraInfo.confidence_level","title":"confidence_level  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>confidence_level: str = Field(alias='confidenceLevel')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceExtraInfo.depth","title":"depth  <code>instance-attribute</code>","text":"<pre><code>depth: GetPriceDepth\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceData","title":"GetPriceData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceData.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre> <p>Chain address of the token.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceData.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre> <p>The type of the token.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceData.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: str\n</code></pre> <p>The price of the token.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceData.extra_info","title":"extra_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>extra_info: None | GetPriceExtraInfo = Field(\n    default=None, alias=\"extraInfo\"\n)\n</code></pre> <p>Extra information about the price. Only available if request param <code>extra_info</code> is set to <code>True</code>.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceResponse","title":"GetPriceResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Price endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: dict[str, GetPriceData | None]\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetPriceResponse.time_taken","title":"time_taken  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_taken: float = Field(alias='timeTaken')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput","title":"GetQuoteInput","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the inputs params required by  a GET Quote request.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.input_token","title":"input_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_token: str = Field(serialization_alias='inputMint')\n</code></pre> <p>The address of the input token on the chain.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.output_token","title":"output_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_token: str = Field(serialization_alias='outputMint')\n</code></pre> <p>The address of the output token on the chain.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre> <p>The amount to swap, factoring in the token decimals. For example, if the token has 6 decimals, then <code>1.0</code> = <code>1_000_000</code>.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.slippage_base_points","title":"slippage_base_points  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>slippage_base_points: int = Field(\n    default=50, serialization_alias=\"slippageBps\"\n)\n</code></pre> <p>Slippage tolerance in basis points. Observe that if the slippage exeeded this value, then the swap will fail.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.swap_mode","title":"swap_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>swap_mode: str = Field(\n    default=JupiterSwapMode.EXACT_IN.value,\n    serialization_alias=\"swapMode\",\n)\n</code></pre> <p>Define if the slippage is on the input or output token.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.dexes","title":"dexes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dexes: list[str] | None = None\n</code></pre> <p>List of DEXes to include; by default, all the DEXes are included. See <code>JupiterSwapDex</code> for all the supported DEXs</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.exclude_dexes","title":"exclude_dexes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exclude_dexes: list[str] | None = Field(\n    default=None, serialization_alias=\"excludeDexes\"\n)\n</code></pre> <p>List of DEXes to exclude. See <code>JupiterSwapDex</code> for all the supported DEXs</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.restrict_intermediate_tokens","title":"restrict_intermediate_tokens  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>restrict_intermediate_tokens: bool | None = Field(\n    default=None,\n    serialization_alias=\"restrictIntermediateTokens\",\n)\n</code></pre> <p>Restrict to a top token set for stable liquidity. This will help to reduce exposure to potential high slippage routes.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.only_direct_routes","title":"only_direct_routes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>only_direct_routes: bool = Field(\n    default=False, serialization_alias=\"onlyDirectRoutes\"\n)\n</code></pre> <p>Limit to single hop routes only.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.as_legacy_transaction","title":"as_legacy_transaction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>as_legacy_transaction: bool = Field(\n    default=False, serialization_alias=\"asLegacyTransaction\"\n)\n</code></pre> <p>Use legacy transactions instead of versioned ones.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.platform_fee_base_points","title":"platform_fee_base_points  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>platform_fee_base_points: int | None = Field(\n    default=None, serialization_alias=\"platformFeeBps\"\n)\n</code></pre> <p>Fee to charge. The value is in percent and taken from output token.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.max_accounts","title":"max_accounts  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>max_accounts: int | None = Field(\n    default=None, serialization_alias=\"maxAccounts\"\n)\n</code></pre> <p>Max accounts to be used for the quote. Jupiter Frontend uses a maxAccounts of 64.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.validator_dexes","title":"validator_dexes  <code>classmethod</code>","text":"<pre><code>validator_dexes(dexes: list[str]) -&gt; list[str]\n</code></pre> Source code in <code>src/cyhole/jupiter/schema.py</code> <pre><code>@field_validator(\"dexes\", \"exclude_dexes\")\n@classmethod\ndef validator_dexes(cls, dexes: list[str]) -&gt; list[str]:\n    for dex in dexes:\n        JupiterSwapDex.check(dex)\n    return dexes\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.serialize_dexes","title":"serialize_dexes  <code>classmethod</code>","text":"<pre><code>serialize_dexes(dexes: list[str] | None) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/jupiter/schema.py</code> <pre><code>@field_serializer(\"dexes\", \"exclude_dexes\")\n@classmethod\ndef serialize_dexes(cls, dexes: list[str] | None) -&gt; str | None:\n    return \",\".join(dexes) if dexes else None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.validator_swap_mode","title":"validator_swap_mode  <code>classmethod</code>","text":"<pre><code>validator_swap_mode(mode: str) -&gt; str\n</code></pre> Source code in <code>src/cyhole/jupiter/schema.py</code> <pre><code>@field_validator(\"swap_mode\")\n@classmethod\ndef validator_swap_mode(cls, mode: str) -&gt; str:\n    JupiterSwapMode.check(mode)\n    return mode\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteInput.serialize_flows","title":"serialize_flows  <code>classmethod</code>","text":"<pre><code>serialize_flows(value: bool | None) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/jupiter/schema.py</code> <pre><code>@field_serializer(\"restrict_intermediate_tokens\", \"only_direct_routes\", \"as_legacy_transaction\")\n@classmethod\ndef serialize_flows(cls, value: bool | None) -&gt; str | None:\n    if value is not None:\n        return \"true\" if value else \"false\"\n    return\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuotePlatformFees","title":"GetQuotePlatformFees","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuotePlatformFees.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuotePlatformFees.fee_base_points","title":"fee_base_points  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fee_base_points: str = Field(alias='feeBps')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteSwapInfo","title":"GetQuoteSwapInfo","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteSwapInfo.amm_key","title":"amm_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amm_key: str = Field(alias='ammKey')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteSwapInfo.amm_label","title":"amm_label  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amm_label: str | None = Field(default=None, alias='label')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteSwapInfo.input_token","title":"input_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_token: str = Field(alias='inputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteSwapInfo.input_amount","title":"input_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_amount: str = Field(alias='inAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteSwapInfo.output_token","title":"output_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_token: str = Field(alias='outputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteSwapInfo.output_amount","title":"output_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_amount: str = Field(alias='outAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteSwapInfo.fee_token","title":"fee_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fee_token: str = Field(alias='feeMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteSwapInfo.fee_amount","title":"fee_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fee_amount: str = Field(alias='feeAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteRoutePlan","title":"GetQuoteRoutePlan","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteRoutePlan.swap_info","title":"swap_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>swap_info: GetQuoteSwapInfo = Field(alias='swapInfo')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteRoutePlan.percent","title":"percent  <code>instance-attribute</code>","text":"<pre><code>percent: int\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse","title":"GetQuoteResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Quote endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.input_token","title":"input_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_token: str = Field(alias='inputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.input_amount","title":"input_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_amount: str = Field(alias='inAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.output_token","title":"output_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_token: str = Field(alias='outputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.output_amount","title":"output_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_amount: str = Field(alias='outAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.other_amount_threshold","title":"other_amount_threshold  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>other_amount_threshold: str = Field(\n    alias=\"otherAmountThreshold\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.swap_mode","title":"swap_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>swap_mode: str = Field(alias='swapMode')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.slippage_base_points","title":"slippage_base_points  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>slippage_base_points: int = Field(alias='slippageBps')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.platform_fees","title":"platform_fees  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>platform_fees: GetQuotePlatformFees | None = Field(\n    default=None, alias=\"platformFee\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.price_impact_pct","title":"price_impact_pct  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_impact_pct: str = Field(alias='priceImpactPct')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.route_plan","title":"route_plan  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>route_plan: list[GetQuoteRoutePlan] = Field(\n    alias=\"routePlan\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.context_slot","title":"context_slot  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>context_slot: int = Field(alias='contextSlot')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteResponse.time_taken","title":"time_taken  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_taken: float = Field(alias='timeTaken')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteTokensResponse","title":"GetQuoteTokensResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Quote/Token endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteTokensResponse.tokens","title":"tokens  <code>instance-attribute</code>","text":"<pre><code>tokens: list[str]\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteProgramIdLabelResponse","title":"GetQuoteProgramIdLabelResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Quote/Program ID to Label endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetQuoteProgramIdLabelResponse.dexes","title":"dexes  <code>instance-attribute</code>","text":"<pre><code>dexes: dict[str, str]\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody","title":"PostSwapBody","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the body required by a POST Swap request.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.user_public_key","title":"user_public_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_public_key: str = Field(\n    serialization_alias=\"userPublicKey\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.wrap_unwrap_sol","title":"wrap_unwrap_sol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>wrap_unwrap_sol: bool = Field(\n    default=None, serialization_alias=\"wrapAndUnwrapSol\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.use_shared_accounts","title":"use_shared_accounts  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>use_shared_accounts: bool = Field(\n    default=None, serialization_alias=\"useSharedAccounts\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.fee_account","title":"fee_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fee_account: str = Field(\n    default=None, serialization_alias=\"feeAccount\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.tracking_account","title":"tracking_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tracking_account: str = Field(\n    default=None, serialization_alias=\"trackingAccount\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.compute_unit_price_micro_lamports","title":"compute_unit_price_micro_lamports  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>compute_unit_price_micro_lamports: int = Field(\n    default=None,\n    serialization_alias=\"computeUnitPriceMicroLamports\",\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.prioritization_fee_lamports","title":"prioritization_fee_lamports  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prioritization_fee_lamports: int = Field(\n    default=None,\n    serialization_alias=\"prioritizationFeeLamports\",\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.as_legacy_transaction","title":"as_legacy_transaction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>as_legacy_transaction: bool = Field(\n    default=None, serialization_alias=\"asLegacyTransaction\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.use_token_ledger","title":"use_token_ledger  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>use_token_ledger: bool = Field(\n    default=None, serialization_alias=\"useTokenLedger\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.destination_token_account","title":"destination_token_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination_token_account: str = Field(\n    default=None,\n    serialization_alias=\"destinationTokenAccount\",\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.dynamic_compute_unit_limit","title":"dynamic_compute_unit_limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dynamic_compute_unit_limit: bool = Field(\n    default=None,\n    serialization_alias=\"dynamicComputeUnitLimit\",\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.skip_user_accounts_rpc_calls","title":"skip_user_accounts_rpc_calls  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>skip_user_accounts_rpc_calls: bool = Field(\n    default=None,\n    serialization_alias=\"skipUserAccountsRpcCalls\",\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapBody.quote_response","title":"quote_response  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quote_response: GetQuoteResponse = Field(\n    serialization_alias=\"quoteResponse\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapResponse","title":"PostSwapResponse","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapResponse.swap_transaction","title":"swap_transaction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>swap_transaction: str = Field(alias='swapTransaction')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapResponse.last_valid_block_height","title":"last_valid_block_height  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_valid_block_height: int = Field(\n    alias=\"lastValidBlockHeight\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostSwapResponse.prioritization_fee_lamports","title":"prioritization_fee_lamports  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>prioritization_fee_lamports: int = Field(\n    default=0, alias=\"prioritizationFeeLamports\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse","title":"GetTokenInfoResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Token endpoint from Jupiter API focused on retrieving information about a token.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.created_at","title":"created_at  <code>instance-attribute</code>","text":"<pre><code>created_at: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.logoURI","title":"logoURI  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>logoURI: str | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.tags","title":"tags  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tags: list[str] | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.daily_volume","title":"daily_volume  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>daily_volume: float | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.freeze_authority","title":"freeze_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>freeze_authority: str | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.mint_authority","title":"mint_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_authority: str | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.minted_at","title":"minted_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>minted_at: str | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.permanent_delegate","title":"permanent_delegate  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>permanent_delegate: str | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenInfoResponse.extensions","title":"extensions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>extensions: dict[str, str] | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenMarketMintsResponse","title":"GetTokenMarketMintsResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Token Market Mints endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenMarketMintsResponse.mints","title":"mints  <code>instance-attribute</code>","text":"<pre><code>mints: list[str]\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenTaggedToken","title":"GetTokenTaggedToken","text":"<p>               Bases: <code>GetTokenInfoResponse</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenTaggedResponse","title":"GetTokenTaggedResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Token Tagged endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenTaggedResponse.tokens","title":"tokens  <code>instance-attribute</code>","text":"<pre><code>tokens: list[GetTokenTaggedToken]\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken","title":"GetTokenNewToken","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent a token information on the Token New endpoint.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.mint","title":"mint  <code>instance-attribute</code>","text":"<pre><code>mint: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.created_at","title":"created_at  <code>instance-attribute</code>","text":"<pre><code>created_at: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.known_markets","title":"known_markets  <code>instance-attribute</code>","text":"<pre><code>known_markets: list[str]\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.metadata_updated_at","title":"metadata_updated_at  <code>instance-attribute</code>","text":"<pre><code>metadata_updated_at: int\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.logo_uri","title":"logo_uri  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>logo_uri: str | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.mint_authority","title":"mint_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_authority: str | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewToken.freeze_authority","title":"freeze_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>freeze_authority: str | None = None\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewResponse","title":"GetTokenNewResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Token New endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetTokenNewResponse.tokens","title":"tokens  <code>instance-attribute</code>","text":"<pre><code>tokens: list[GetTokenNewToken]\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody","title":"PostLimitOrderCreateBody","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the body required by a POST Limit Order Create request.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody.user_public_key","title":"user_public_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_public_key: str = Field(serialization_alias='owner')\n</code></pre> <p>Public Key of the Owner wallet</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody.input_token","title":"input_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_token: str = Field(serialization_alias='inputMint')\n</code></pre> <p>The address of the input token on the chain used to buy.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody.input_amount","title":"input_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_amount: int = Field(serialization_alias='inAmount')\n</code></pre> <p>The amount of input token to use for the limit order.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody.output_token","title":"output_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_token: str = Field(serialization_alias='outputMint')\n</code></pre> <p>The address of the output token on the chain that will bought.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody.output_amount","title":"output_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_amount: int = Field(serialization_alias='outAmount')\n</code></pre> <p>The amount of output token to buy in the limit order.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody.base","title":"base  <code>instance-attribute</code>","text":"<pre><code>base: str\n</code></pre> <p>Public Key used to initiate the Limit Order</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody.expired_at_unix_time","title":"expired_at_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>expired_at_unix_time: int | None = Field(\n    default=None, serialization_alias=\"expiredAt\"\n)\n</code></pre> <p>Expiring date for the Limit Order expressed in UNIX time</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody.referral_public_key","title":"referral_public_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>referral_public_key: str | None = Field(\n    default=None, serialization_alias=\"referralAccount\"\n)\n</code></pre> <p>The address of the account used to get referral fees.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateBody.referral_name","title":"referral_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>referral_name: str | None = Field(\n    default=None, serialization_alias=\"referralName\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateResponse","title":"PostLimitOrderCreateResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Limit Order Create endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateResponse.transaction","title":"transaction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction: str = Field(alias='tx')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCreateResponse.order_public_key","title":"order_public_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>order_public_key: str = Field(alias='orderPubkey')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCancelBody","title":"PostLimitOrderCancelBody","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the body required by a POST Limit Order Cancel request.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCancelBody.user_public_key","title":"user_public_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_public_key: str = Field(serialization_alias='owner')\n</code></pre> <p>Public Key of the Owner wallet</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCancelBody.fee_payer_public_key","title":"fee_payer_public_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fee_payer_public_key: str = Field(\n    serialization_alias=\"feePayer\"\n)\n</code></pre> <p>Public Key of the fee payer.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCancelBody.orders","title":"orders  <code>instance-attribute</code>","text":"<pre><code>orders: list[str]\n</code></pre> <p>List of orders Public Keys to cancel.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCancelResponse","title":"PostLimitOrderCancelResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Limit Order Cancel endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.PostLimitOrderCancelResponse.transaction","title":"transaction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction: str = Field(alias='tx')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount","title":"GetLimitOrderOpenAccount","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount.maker","title":"maker  <code>instance-attribute</code>","text":"<pre><code>maker: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount.input_token","title":"input_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_token: str = Field(alias='inputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount.input_amount","title":"input_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_amount: str = Field(alias='inAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount.output_token","title":"output_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_token: str = Field(alias='outputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount.output_amount","title":"output_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_amount: str = Field(alias='outAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount.ori_input_token","title":"ori_input_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ori_input_token: str = Field(alias='oriInAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount.ori_output_amount","title":"ori_output_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ori_output_amount: str = Field(alias='oriOutAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount.expired_at_unix_time","title":"expired_at_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>expired_at_unix_time: int | None = Field(\n    default=None, alias=\"expiredAt\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenAccount.base","title":"base  <code>instance-attribute</code>","text":"<pre><code>base: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpen","title":"GetLimitOrderOpen","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpen.public_key","title":"public_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>public_key: str = Field(alias='publicKey')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpen.account","title":"account  <code>instance-attribute</code>","text":"<pre><code>account: GetLimitOrderOpenAccount\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenResponse","title":"GetLimitOrderOpenResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Limit Order Opens endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderOpenResponse.orders","title":"orders  <code>instance-attribute</code>","text":"<pre><code>orders: list[GetLimitOrderOpen]\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory","title":"GetLimitOrderHistory","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.maker","title":"maker  <code>instance-attribute</code>","text":"<pre><code>maker: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.order_key","title":"order_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>order_key: str = Field(alias='orderKey')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.input_token","title":"input_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_token: str = Field(alias='inputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.input_amount","title":"input_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_amount: str = Field(alias='inAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.output_token","title":"output_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_token: str = Field(alias='outputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.output_amount","title":"output_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_amount: str = Field(alias='outAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.ori_input_token","title":"ori_input_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ori_input_token: str = Field(alias='oriInAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.ori_output_amount","title":"ori_output_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ori_output_amount: str = Field(alias='oriOutAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.expired_at_unix_time","title":"expired_at_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>expired_at_unix_time: int | None = Field(\n    default=None, alias=\"expiredAt\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: str\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.create_transaction_id","title":"create_transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>create_transaction_id: str = Field(alias='createTxid')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.cancel_transaction_id","title":"cancel_transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cancel_transaction_id: str | None = Field(\n    default=None, alias=\"cancelTxid\"\n)\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.updated_at","title":"updated_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>updated_at: datetime = Field(alias='updatedAt')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.created_at","title":"created_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>created_at: datetime = Field(alias='createdAt')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.parse_datetime","title":"parse_datetime","text":"<pre><code>parse_datetime(datetime_raw: str | datetime) -&gt; datetime\n</code></pre> Source code in <code>src/cyhole/jupiter/schema.py</code> <pre><code>@field_validator(\"created_at\", \"updated_at\")\ndef parse_datetime(cls, datetime_raw: str | datetime) -&gt; datetime:\n    if isinstance(datetime_raw, str):\n        return datetime.strptime(datetime_raw, \"%Y-%m-%dT%H:%M:%S\")\n    return datetime_raw\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistory.validator_state","title":"validator_state  <code>classmethod</code>","text":"<pre><code>validator_state(state: str) -&gt; str\n</code></pre> Source code in <code>src/cyhole/jupiter/schema.py</code> <pre><code>@field_validator(\"state\")\n@classmethod\ndef validator_state(cls, state: str) -&gt; str:\n    JupiterLimitOrderState.check(state)\n    return state\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistoryResponse","title":"GetLimitOrderHistoryResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Limit Order History endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderHistoryResponse.orders","title":"orders  <code>instance-attribute</code>","text":"<pre><code>orders: list[GetLimitOrderHistory]\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistoryOrder","title":"GetLimitOrderTradeHistoryOrder","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistoryOrder.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistoryOrder.order_key","title":"order_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>order_key: str = Field(alias='orderKey')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistoryOrder.input_token","title":"input_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_token: str = Field(alias='inputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistoryOrder.output_token","title":"output_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_token: str = Field(alias='outputMint')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistory","title":"GetLimitOrderTradeHistory","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistory.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistory.input_amount","title":"input_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_amount: str = Field(alias='inAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistory.output_amount","title":"output_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>output_amount: str = Field(alias='outAmount')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistory.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='txid')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistory.updated_at","title":"updated_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>updated_at: datetime = Field(alias='updatedAt')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistory.created_at","title":"created_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>created_at: datetime = Field(alias='createdAt')\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistory.order","title":"order  <code>instance-attribute</code>","text":"<pre><code>order: GetLimitOrderTradeHistoryOrder\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistory.parse_datetime","title":"parse_datetime","text":"<pre><code>parse_datetime(datetime_raw: str | datetime) -&gt; datetime\n</code></pre> Source code in <code>src/cyhole/jupiter/schema.py</code> <pre><code>@field_validator(\"created_at\", \"updated_at\")\ndef parse_datetime(cls, datetime_raw: str | datetime) -&gt; datetime:\n    if isinstance(datetime_raw, str):\n        return datetime.strptime(datetime_raw, \"%Y-%m-%dT%H:%M:%S\")\n    return datetime_raw\n</code></pre>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistoryResponse","title":"GetLimitOrderTradeHistoryResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to represent the Limit Order Trade History endpoint from Jupiter API.</p>"},{"location":"interactions/jupiter/schema.html#cyhole.jupiter.schema.GetLimitOrderTradeHistoryResponse.orders","title":"orders  <code>instance-attribute</code>","text":"<pre><code>orders: list[GetLimitOrderTradeHistory]\n</code></pre>"},{"location":"interactions/solana_fm/index.html","title":"- SolanaFM","text":"<p>SolanaFM (https://solana.fm/) is a platform that provides a wide range of services for Solana blockchain, including on-chain exploration, API integration, and analytics. The services are designed to be user-friendly and easy to use, with free access to their APIs for developers. The documentation is well written and can be access from here.</p> <p>The API connector is <code>SolanaFM</code> class imported from <code>cyhole.solana_fm</code> path.</p>"},{"location":"interactions/solana_fm/index.html#quick-examples","title":"Quick Examples","text":""},{"location":"interactions/solana_fm/index.html#get-latest-transactions-of-an-account","title":"Get Latest Transactions of an Account","text":"<p>Extract the latest transactions executed by an account on the Solana chian in few lines of code by using <code>get_account_transactions</code> in asynchronous logic.</p> <pre><code>import asyncio\nfrom cyhole.solana_fm import SolanaFM\n\naccount = \"ACCOUNT_ID\"\n\n# extract latest transactions\nasync def main() -&gt; None:\n    solana_fm = SolanaFM()\n    async with solana_fm.async_client as client:\n        response = await client.get_account_transactions(account)\n        print(\"Transactions Extracted:\", len(response.result.data))\n\nasyncio.run(main())\n</code></pre>"},{"location":"interactions/solana_fm/index.html#content","title":"Content","text":"<p>The documentation follows the library's structure by providing all the technical details required to use it.</p> <ul> <li> <p> Connector</p> <p><code>cyhole.solana_fm</code> - Explore the <code>SolanaFM</code> API connector and all its methods. </p> <p> Reference</p> </li> <li> <p> API Parameters</p> <p><code>cyhole.solana_fm.param</code> - Ensure to use the correct parameters during the API calls.</p> <p> Reference</p> </li> <li> <p> Response Schema</p> <p><code>cyhole.solana_fm.schema</code> - Extract only what is necessary by exploiting reponse mapping thanks to <code>pydantic</code> schemes.</p> <p> Reference</p> </li> <li> <p> Exceptions</p> <p><code>cyhole.solana_fm.exception</code> - Make sure you intercept all exceptions correctly.</p> <p> Reference</p> </li> </ul>"},{"location":"interactions/solana_fm/index.html#endpoints","title":"Endpoints","text":"Endpoint Type Method <code>cyhole</code> Release Deprecated Account Transactions <code>GET</code> <code>get_account_transactions</code> <code>0.2.1</code> - Account Transactions Fees <code>GET</code> <code>_get_account_transactions_fees</code> <code>0.2.2</code> - Account Transfers <code>GET</code> <code>_get_account_transfers</code> <code>0.2.2</code> - Account Transfers CSV Export <code>GET</code> <code>_get_account_transfers_csv_export</code> <code>0.2.2</code> - Blocks <code>GET</code> <code>_get_blocks</code> <code>0.2.2</code> - Block <code>GET</code> <code>_get_block</code> <code>0.2.2</code> - Multiple Blocks <code>POST</code> <code>_post_multiple_blocks</code> <code>0.2.2</code> - Solana Daily Transaction Fees <code>GET</code> <code>_get_solana_daily_transaction_fees</code> <code>0.2.2</code> - Tagged Tokens List <code>GET</code> <code>_get_tagged_tokens_list</code> <code>0.2.2</code> - Token Info V0 <code>GET</code> <code>_get_token_info_v0</code> <code>0.2.2</code> - Token Multiple Info V0 <code>POST</code> <code>_post_token_multiple_info_v0</code> <code>0.2.2</code> - Token Info V1 <code>GET</code> <code>_get_token_info_v1</code> <code>0.2.2</code> - Token Multiple Info V1 <code>POST</code> <code>_post_token_multiple_info_v1</code> <code>0.2.2</code> - User Token Accounts <code>POST</code> <code>_post_user_token_accounts</code> <code>0.2.2</code> - Mint Token Accounts <code>GET</code> <code>_get_mint_token_accounts</code> <code>0.2.2</code> - On-Chain Token Data <code>GET</code> <code>_get_on_chain_token_data</code> <code>0.2.2</code> - Token Supply <code>GET</code> <code>_get_token_supply</code> <code>0.2.2</code> - Transfer Transactions <code>GET</code> <code>_get_transfer_transactions</code> <code>0.2.2</code> - Multiple Transfer Transactions <code>POST</code> <code>_post_multiple_transfer_transactions</code> <code>0.2.2</code> - All Transfer Actions <code>GET</code> <code>_get_all_transfer_actions</code> <code>0.2.2</code> -"},{"location":"interactions/solana_fm/client.html","title":"Client","text":""},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client","title":"cyhole.solana_fm.client","text":""},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient","title":"SolanaFMClient","text":"<pre><code>SolanaFMClient(\n    interaction: SolanaFM, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>APIClient</code></p> <p>Client used for synchronous API calls for <code>SolanaFM</code> interaction.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def __init__(self, interaction: SolanaFM, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction: SolanaFM = self._interaction\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_account_transactions","title":"get_account_transactions","text":"<pre><code>get_account_transactions(\n    account: str,\n    params: GetAccountTransactionsParam = GetAccountTransactionsParam(),\n) -&gt; GetAccountTransactionsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Account Transactions for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_account_transactions</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_account_transactions(self, account: str, params: GetAccountTransactionsParam = GetAccountTransactionsParam()) -&gt; GetAccountTransactionsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Account Transactions](https://docs.solana.fm/reference/get_account_transactions)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_account_transactions`][cyhole.solana_fm.interaction.SolanaFM._get_account_transactions].\n    \"\"\"\n    return self._interaction._get_account_transactions(True, account, params)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_account_transactions_fees","title":"get_account_transactions_fees","text":"<pre><code>get_account_transactions_fees(\n    account: str,\n    dt_from: datetime | None = None,\n    dt_to: datetime | None = None,\n) -&gt; GetAccountTransactionsFeesResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Account Transactions Fees for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_account_transactions_fees</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_account_transactions_fees(self, account: str, dt_from: datetime | None = None, dt_to: datetime | None = None) -&gt; GetAccountTransactionsFeesResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Account Transactions Fees](https://docs.solana.fm/reference/get_account_tx_fees)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_account_transactions_fees`][cyhole.solana_fm.interaction.SolanaFM._get_account_transactions_fees].\n    \"\"\"\n    return self._interaction._get_account_transactions_fees(True, account, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_account_transfers","title":"get_account_transfers","text":"<pre><code>get_account_transfers(\n    account: str,\n    params: GetAccountTransfersParam = GetAccountTransfersParam(),\n) -&gt; GetAccountTransfersResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Account Transfers for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_account_transfers</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_account_transfers(self, account: str, params: GetAccountTransfersParam = GetAccountTransfersParam()) -&gt; GetAccountTransfersResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Account Transfers](https://docs.solana.fm/reference/get_account_transfers_v1)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_account_transfers`][cyhole.solana_fm.interaction.SolanaFM._get_account_transfers].\n    \"\"\"\n    return self._interaction._get_account_transfers(True, account, params)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_account_transfers_csv_export","title":"get_account_transfers_csv_export","text":"<pre><code>get_account_transfers_csv_export(\n    account: str,\n    params: GetAccountTransfersCsvExportParam = GetAccountTransfersCsvExportParam(),\n) -&gt; GetAccountTransfersCsvExportResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Account Transfers CSV Export for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_account_transfers_csv_export</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_account_transfers_csv_export(self, account: str, params: GetAccountTransfersCsvExportParam = GetAccountTransfersCsvExportParam()) -&gt; GetAccountTransfersCsvExportResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Account Transfers CSV Export](https://docs.solana.fm/reference/download_csv_v1)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_account_transfers_csv_export`][cyhole.solana_fm.interaction.SolanaFM._get_account_transfers_csv_export].\n    \"\"\"\n    return self._interaction._get_account_transfers_csv_export(True, account, params)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_blocks","title":"get_blocks","text":"<pre><code>get_blocks(\n    from_block: int | None = None,\n    page_size: int = 50,\n    page_type: str = SolanaFMBlocksPaginationType.BLOCK_NUMBER.value,\n    ascending: bool | None = None,\n) -&gt; GetBlocksResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Blocks for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_blocks</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_blocks(\n    self,\n    from_block: int | None = None,\n    page_size: int = 50,\n    page_type: str = SolanaFMBlocksPaginationType.BLOCK_NUMBER.value,\n    ascending: bool | None = None\n) -&gt; GetBlocksResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Blocks](https://docs.solana.fm/reference/get_blocks_by_pagination)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_blocks`][cyhole.solana_fm.interaction.SolanaFM._get_blocks].\n    \"\"\"\n    return self._interaction._get_blocks(True, from_block, page_size, page_type, ascending)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_block","title":"get_block","text":"<pre><code>get_block(block_number: int) -&gt; GetBlockResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Block for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_block</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_block(self, block_number: int) -&gt; GetBlockResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Block](https://docs.solana.fm/reference/get_block)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_block`][cyhole.solana_fm.interaction.SolanaFM._get_block].\n    \"\"\"\n    return self._interaction._get_block(True, block_number)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.post_multiple_blocks","title":"post_multiple_blocks","text":"<pre><code>post_multiple_blocks(\n    block_numbers: list[int], producer_details: bool = True\n) -&gt; PostMultipleBlocksResponse\n</code></pre> <p>Call the SolanaFM's API endpoint POST Multiple Blocks for synchronous logic.  All the API endopint details are available on <code>SolanaFM._post_multiple_blocks</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def post_multiple_blocks(self, block_numbers: list[int], producer_details: bool = True) -&gt; PostMultipleBlocksResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[Multiple Blocks](https://docs.solana.fm/reference/get_multiple_blocks)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_multiple_blocks`][cyhole.solana_fm.interaction.SolanaFM._post_multiple_blocks].\n    \"\"\"\n    return self._interaction._post_multiple_blocks(True, block_numbers, producer_details)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_solana_daily_transaction_fees","title":"get_solana_daily_transaction_fees","text":"<pre><code>get_solana_daily_transaction_fees(\n    dt: datetime = datetime.now(),\n) -&gt; GetSolanaDailyTransactionFeesResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Solana Daily Transaction Fees for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_solana_daily_transaction_fees</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_solana_daily_transaction_fees(self, dt: datetime = datetime.now()) -&gt; GetSolanaDailyTransactionFeesResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Solana Daily Transaction Fees](https://docs.solana.fm/reference/get_daily_tx_fees)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_solana_daily_transaction_fees`][cyhole.solana_fm.interaction.SolanaFM._get_solana_daily_transaction_fees].\n    \"\"\"\n    return self._interaction._get_solana_daily_transaction_fees(True, dt)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_tagged_tokens_list","title":"get_tagged_tokens_list","text":"<pre><code>get_tagged_tokens_list() -&gt; GetTaggedTokensListResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Tagged Tokens List for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_tagged_tokens_list</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_tagged_tokens_list(self) -&gt; GetTaggedTokensListResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Tagged Tokens List](https://docs.solana.fm/reference/get_tokens_by_pagination)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_tagged_tokens_list`][cyhole.solana_fm.interaction.SolanaFM._get_tagged_tokens_list].\n    \"\"\"\n    return self._interaction._get_tagged_tokens_list(True)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_token_info_v0","title":"get_token_info_v0","text":"<pre><code>get_token_info_v0(address: str) -&gt; GetTokenInfoV0Response\n</code></pre> <p>Call the SolanaFM's API endpoint GET Token Info V0 for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_token_info_v0</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_token_info_v0(self, address: str) -&gt; GetTokenInfoV0Response:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Token Info V0](https://docs.solana.fm/reference/get_token_by_account_hash)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_token_info_v0`][cyhole.solana_fm.interaction.SolanaFM._get_token_info_v0].\n    \"\"\"\n    return self._interaction._get_token_info_v0(True, address)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.post_token_multiple_info_v0","title":"post_token_multiple_info_v0","text":"<pre><code>post_token_multiple_info_v0(\n    addresses: list[str],\n) -&gt; PostTokenMultipleInfoV0Response\n</code></pre> <p>Call the SolanaFM's API endpoint POST Token Multiple Info V0 for synchronous logic.  All the API endopint details are available on <code>SolanaFM._post_token_multiple_info_v0</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def post_token_multiple_info_v0(self, addresses: list[str]) -&gt; PostTokenMultipleInfoV0Response:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[Token Multiple Info V0](https://docs.solana.fm/reference/get_tokens_by_account_hashes)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_token_multiple_info_v0`][cyhole.solana_fm.interaction.SolanaFM._post_token_multiple_info_v0].\n    \"\"\"\n    return self._interaction._post_token_multiple_info_v0(True, addresses)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_token_info_v1","title":"get_token_info_v1","text":"<pre><code>get_token_info_v1(address: str) -&gt; GetTokenInfoV1Response\n</code></pre> <p>Call the SolanaFM's API endpoint GET Token Info V1 for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_token_info_v1</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_token_info_v1(self, address: str) -&gt; GetTokenInfoV1Response:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Token Info V1](https://docs.solana.fm/reference/get_one_token)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_token_info_v1`][cyhole.solana_fm.interaction.SolanaFM._get_token_info_v1].\n    \"\"\"\n    return self._interaction._get_token_info_v1(True, address)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.post_token_multiple_info_v1","title":"post_token_multiple_info_v1","text":"<pre><code>post_token_multiple_info_v1(\n    addresses: list[str],\n) -&gt; PostTokenMultipleInfoV1Response\n</code></pre> <p>Call the SolanaFM's API endpoint POST Token Multiple Info V1 for synchronous logic.  All the API endopint details are available on <code>SolanaFM._post_token_multiple_info_v1</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def post_token_multiple_info_v1(self, addresses: list[str]) -&gt; PostTokenMultipleInfoV1Response:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[Token Multiple Info V1](https://docs.solana.fm/reference/retrieve_multiple_tokens)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_token_multiple_info_v1`][cyhole.solana_fm.interaction.SolanaFM._post_token_multiple_info_v1].\n    \"\"\"\n    return self._interaction._post_token_multiple_info_v1(True, addresses)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.post_user_token_accounts","title":"post_user_token_accounts","text":"<pre><code>post_user_token_accounts(\n    address: str,\n    include_sol_balance: bool = False,\n    tokens: list[str] | None = None,\n) -&gt; PostUserTokenAccountsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint POST User Token Accounts for synchronous logic.  All the API endopint details are available on <code>SolanaFM._post_user_token_accounts</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def post_user_token_accounts(self, address: str, include_sol_balance: bool = False, tokens: list[str] | None = None) -&gt; PostUserTokenAccountsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[User Token Accounts](https://docs.solana.fm/reference/get_user_token_accounts)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_user_token_accounts`][cyhole.solana_fm.interaction.SolanaFM._post_user_token_accounts].\n    \"\"\"\n    return self._interaction._post_user_token_accounts(True, address, include_sol_balance, tokens)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_mint_token_accounts","title":"get_mint_token_accounts","text":"<pre><code>get_mint_token_accounts(\n    address: str,\n    page: int | None = None,\n    page_size: int | None = None,\n) -&gt; GetMintTokenAccountsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Mint Token Accounts for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_mint_token_accounts</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_mint_token_accounts(self, address: str, page: int | None = None, page_size: int | None = None) -&gt; GetMintTokenAccountsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Mint Token Accounts](https://docs.solana.fm/reference/get_token_accounts_for_token_mint)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_mint_token_accounts`][cyhole.solana_fm.interaction.SolanaFM._get_mint_token_accounts].\n    \"\"\"\n    return self._interaction._get_mint_token_accounts(True, address, page, page_size)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_on_chain_token_data","title":"get_on_chain_token_data","text":"<pre><code>get_on_chain_token_data(\n    address: str,\n) -&gt; GetOnChainTokenDataResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET On Chain Token Data for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_on_chain_token_data</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_on_chain_token_data(self, address: str) -&gt; GetOnChainTokenDataResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[On Chain Token Data](https://docs.solana.fm/reference/get_tfi_token_data)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_on_chain_token_data`][cyhole.solana_fm.interaction.SolanaFM._get_on_chain_token_data].\n    \"\"\"\n    return self._interaction._get_on_chain_token_data(True, address)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_token_supply","title":"get_token_supply","text":"<pre><code>get_token_supply(address: str) -&gt; GetTokenSupplyResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Token Supply for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_token_supply</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_token_supply(self, address: str) -&gt; GetTokenSupplyResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Token Supply](https://docs.solana.fm/reference/get_token_circulating_supply)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_token_supply`][cyhole.solana_fm.interaction.SolanaFM._get_token_supply].\n    \"\"\"\n    return self._interaction._get_token_supply(True, address)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_transfer_transactions","title":"get_transfer_transactions","text":"<pre><code>get_transfer_transactions(\n    transaction: str,\n) -&gt; GetTransferTransactionsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Transfer Transactions for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_transfer_transactions</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_transfer_transactions(self, transaction: str) -&gt; GetTransferTransactionsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Transfer Transactions](https://docs.solana.fm/reference/get_transfers)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_transfer_transactions`][cyhole.solana_fm.interaction.SolanaFM._get_transfer_transactions].\n    \"\"\"\n    return self._interaction._get_transfer_transactions(True, transaction)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.post_multiple_transfer_transactions","title":"post_multiple_transfer_transactions","text":"<pre><code>post_multiple_transfer_transactions(\n    transactions: list[str],\n) -&gt; PostMultipleTransferTransactionsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint POST Multiple Transfer Transactions for synchronous logic.  All the API endopint details are available on <code>SolanaFM._post_multiple_transfer_transactions</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def post_multiple_transfer_transactions(self, transactions: list[str]) -&gt; PostMultipleTransferTransactionsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[Multiple Transfer Transactions](https://docs.solana.fm/reference/post_transfers)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_multiple_transfer_transactions`][cyhole.solana_fm.interaction.SolanaFM._post_multiple_transfer_transactions].\n    \"\"\"\n    return self._interaction._post_multiple_transfer_transactions(True, transactions)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMClient.get_all_transfer_actions","title":"get_all_transfer_actions","text":"<pre><code>get_all_transfer_actions() -&gt; GetAllTransferActionsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET All Transfer Actions for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_all_transfer_actions</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def get_all_transfer_actions(self) -&gt; GetAllTransferActionsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[All Transfer Actions](https://docs.solana.fm/reference/get_actions)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_all_transfer_actions`][cyhole.solana_fm.interaction.SolanaFM._get_all_transfer_actions].\n    \"\"\"\n    return self._interaction._get_all_transfer_actions(True)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient","title":"SolanaFMAsyncClient","text":"<pre><code>SolanaFMAsyncClient(\n    interaction: SolanaFM, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>AsyncAPIClient</code></p> <p>Client used for asynchronous API calls for <code>SolanaFM</code> interaction.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>def __init__(self, interaction: SolanaFM, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction: SolanaFM = self._interaction\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_account_transactions","title":"get_account_transactions  <code>async</code>","text":"<pre><code>get_account_transactions(\n    account: str,\n    params: GetAccountTransactionsParam = GetAccountTransactionsParam(),\n) -&gt; GetAccountTransactionsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Account Transactions for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_account_transactions</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_account_transactions(self, account: str, params: GetAccountTransactionsParam = GetAccountTransactionsParam()) -&gt; GetAccountTransactionsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Account Transactions](https://docs.solana.fm/reference/get_account_transactions)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_account_transactions`][cyhole.solana_fm.interaction.SolanaFM._get_account_transactions].\n    \"\"\"\n    return await self._interaction._get_account_transactions(False, account, params)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_account_transactions_fees","title":"get_account_transactions_fees  <code>async</code>","text":"<pre><code>get_account_transactions_fees(\n    account: str,\n    dt_from: datetime | None = None,\n    dt_to: datetime | None = None,\n) -&gt; GetAccountTransactionsFeesResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Account Transactions Fees for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_account_transactions_fees</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_account_transactions_fees(self, account: str, dt_from: datetime | None = None, dt_to: datetime | None = None) -&gt; GetAccountTransactionsFeesResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Account Transactions Fees](https://docs.solana.fm/reference/get_account_tx_fees)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_account_transactions_fees`][cyhole.solana_fm.interaction.SolanaFM._get_account_transactions_fees].\n    \"\"\"\n    return await self._interaction._get_account_transactions_fees(False, account, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_account_transfers","title":"get_account_transfers  <code>async</code>","text":"<pre><code>get_account_transfers(\n    account: str,\n    params: GetAccountTransfersParam = GetAccountTransfersParam(),\n) -&gt; GetAccountTransfersResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Account Transfers for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_account_transfers</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_account_transfers(self, account: str, params: GetAccountTransfersParam = GetAccountTransfersParam()) -&gt; GetAccountTransfersResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Account Transfers](https://docs.solana.fm/reference/get_account_transfers_v1)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_account_transfers`][cyhole.solana_fm.interaction.SolanaFM._get_account_transfers].\n    \"\"\"\n    return await self._interaction._get_account_transfers(False, account, params)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_account_transfers_csv_export","title":"get_account_transfers_csv_export  <code>async</code>","text":"<pre><code>get_account_transfers_csv_export(\n    account: str,\n    params: GetAccountTransfersCsvExportParam = GetAccountTransfersCsvExportParam(),\n) -&gt; GetAccountTransfersCsvExportResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Account Transfers CSV Export for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_account_transfers_csv_export</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_account_transfers_csv_export(self, account: str, params: GetAccountTransfersCsvExportParam = GetAccountTransfersCsvExportParam()) -&gt; GetAccountTransfersCsvExportResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Account Transfers CSV Export](https://docs.solana.fm/reference/download_csv_v1)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_account_transfers_csv_export`][cyhole.solana_fm.interaction.SolanaFM._get_account_transfers_csv_export].\n    \"\"\"\n    return await self._interaction._get_account_transfers_csv_export(False, account, params)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_blocks","title":"get_blocks  <code>async</code>","text":"<pre><code>get_blocks(\n    from_block: int | None = None,\n    page_size: int = 50,\n    page_type: str = SolanaFMBlocksPaginationType.BLOCK_NUMBER.value,\n    ascending: bool | None = None,\n) -&gt; GetBlocksResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Blocks for synchronous logic.  All the API endopint details are available on <code>SolanaFM._get_blocks</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_blocks(\n    self,\n    from_block: int | None = None,\n    page_size: int = 50,\n    page_type: str = SolanaFMBlocksPaginationType.BLOCK_NUMBER.value,\n    ascending: bool | None = None\n) -&gt; GetBlocksResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Blocks](https://docs.solana.fm/reference/get_blocks_by_pagination)** for synchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_blocks`][cyhole.solana_fm.interaction.SolanaFM._get_blocks].\n    \"\"\"\n    return await self._interaction._get_blocks(False, from_block, page_size, page_type, ascending)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_block","title":"get_block  <code>async</code>","text":"<pre><code>get_block(block_number: int) -&gt; GetBlockResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Block for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_block</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_block(self, block_number: int) -&gt; GetBlockResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Block](https://docs.solana.fm/reference/get_block)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_block`][cyhole.solana_fm.interaction.SolanaFM._get_block].\n    \"\"\"\n    return await self._interaction._get_block(False, block_number)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.post_multiple_blocks","title":"post_multiple_blocks  <code>async</code>","text":"<pre><code>post_multiple_blocks(\n    block_numbers: list[int], producer_details: bool = True\n) -&gt; PostMultipleBlocksResponse\n</code></pre> <p>Call the SolanaFM's API endpoint POST Multiple Blocks for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._post_multiple_blocks</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def post_multiple_blocks(self, block_numbers: list[int], producer_details: bool = True) -&gt; PostMultipleBlocksResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[Multiple Blocks](https://docs.solana.fm/reference/get_multiple_blocks)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_multiple_blocks`][cyhole.solana_fm.interaction.SolanaFM._post_multiple_blocks].\n    \"\"\"\n    return await self._interaction._post_multiple_blocks(False, block_numbers, producer_details)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_solana_daily_transaction_fees","title":"get_solana_daily_transaction_fees  <code>async</code>","text":"<pre><code>get_solana_daily_transaction_fees(\n    dt: datetime = datetime.now(),\n) -&gt; GetSolanaDailyTransactionFeesResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Solana Daily Transaction Fees for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_solana_daily_transaction_fees</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_solana_daily_transaction_fees(self, dt: datetime = datetime.now()) -&gt; GetSolanaDailyTransactionFeesResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Solana Daily Transaction Fees](https://docs.solana.fm/reference/get_daily_tx_fees)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_solana_daily_transaction_fees`][cyhole.solana_fm.interaction.SolanaFM._get_solana_daily_transaction_fees].\n    \"\"\"\n    return await self._interaction._get_solana_daily_transaction_fees(False, dt)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_tagged_tokens_list","title":"get_tagged_tokens_list  <code>async</code>","text":"<pre><code>get_tagged_tokens_list() -&gt; GetTaggedTokensListResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Tagged Tokens List for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_tagged_tokens_list</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_tagged_tokens_list(self) -&gt; GetTaggedTokensListResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Tagged Tokens List](https://docs.solana.fm/reference/get_tokens_by_pagination)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_tagged_tokens_list`][cyhole.solana_fm.interaction.SolanaFM._get_tagged_tokens_list].\n    \"\"\"\n    return await self._interaction._get_tagged_tokens_list(False)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_token_info_v0","title":"get_token_info_v0  <code>async</code>","text":"<pre><code>get_token_info_v0(address: str) -&gt; GetTokenInfoV0Response\n</code></pre> <p>Call the SolanaFM's API endpoint GET Token Info V0 for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_token_info_v0</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_token_info_v0(self, address: str) -&gt; GetTokenInfoV0Response:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Token Info V0](https://docs.solana.fm/reference/get_token_by_account_hash)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_token_info_v0`][cyhole.solana_fm.interaction.SolanaFM._get_token_info_v0].\n    \"\"\"\n    return await self._interaction._get_token_info_v0(False, address)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.post_token_multiple_info_v0","title":"post_token_multiple_info_v0  <code>async</code>","text":"<pre><code>post_token_multiple_info_v0(\n    addresses: list[str],\n) -&gt; PostTokenMultipleInfoV0Response\n</code></pre> <p>Call the SolanaFM's API endpoint POST Token Multiple Info V0 for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._post_token_multiple_info_v0</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def post_token_multiple_info_v0(self, addresses: list[str]) -&gt; PostTokenMultipleInfoV0Response:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[Token Multiple Info V0](https://docs.solana.fm/reference/get_tokens_by_account_hashes)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_token_multiple_info_v0`][cyhole.solana_fm.interaction.SolanaFM._post_token_multiple_info_v0].\n    \"\"\"\n    return await self._interaction._post_token_multiple_info_v0(False, addresses)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_token_info_v1","title":"get_token_info_v1  <code>async</code>","text":"<pre><code>get_token_info_v1(address: str) -&gt; GetTokenInfoV1Response\n</code></pre> <p>Call the SolanaFM's API endpoint GET Token Info V1 for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_token_info_v1</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_token_info_v1(self, address: str) -&gt; GetTokenInfoV1Response:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Token Info V1](https://docs.solana.fm/reference/get_one_token)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_token_info_v1`][cyhole.solana_fm.interaction.SolanaFM._get_token_info_v1].\n    \"\"\"\n    return await self._interaction._get_token_info_v1(False, address)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.post_token_multiple_info_v1","title":"post_token_multiple_info_v1  <code>async</code>","text":"<pre><code>post_token_multiple_info_v1(\n    addresses: list[str],\n) -&gt; PostTokenMultipleInfoV1Response\n</code></pre> <p>Call the SolanaFM's API endpoint POST Token Multiple Info V1 for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._post_token_multiple_info_v1</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def post_token_multiple_info_v1(self, addresses: list[str]) -&gt; PostTokenMultipleInfoV1Response:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[Token Multiple Info V1](https://docs.solana.fm/reference/retrieve_multiple_tokens)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_token_multiple_info_v1`][cyhole.solana_fm.interaction.SolanaFM._post_token_multiple_info_v1].\n    \"\"\"\n    return await self._interaction._post_token_multiple_info_v1(False, addresses)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.post_user_token_accounts","title":"post_user_token_accounts  <code>async</code>","text":"<pre><code>post_user_token_accounts(\n    address: str,\n    include_sol_balance: bool = False,\n    tokens: list[str] | None = None,\n) -&gt; PostUserTokenAccountsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint POST User Token Accounts for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._post_user_token_accounts</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def post_user_token_accounts(self, address: str, include_sol_balance: bool = False, tokens: list[str] | None = None) -&gt; PostUserTokenAccountsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[User Token Accounts](https://docs.solana.fm/reference/get_user_token_accounts)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_user_token_accounts`][cyhole.solana_fm.interaction.SolanaFM._post_user_token_accounts].\n    \"\"\"\n    return await self._interaction._post_user_token_accounts(False, address, include_sol_balance, tokens)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_mint_token_accounts","title":"get_mint_token_accounts  <code>async</code>","text":"<pre><code>get_mint_token_accounts(\n    address: str,\n    page: int | None = None,\n    page_size: int | None = None,\n) -&gt; GetMintTokenAccountsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Mint Token Accounts for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_mint_token_accounts</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_mint_token_accounts(self, address: str, page: int | None = None, page_size: int | None = None) -&gt; GetMintTokenAccountsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Mint Token Accounts](https://docs.solana.fm/reference/get_token_accounts_for_token_mint)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_mint_token_accounts`][cyhole.solana_fm.interaction.SolanaFM._get_mint_token_accounts].\n    \"\"\"\n    return await self._interaction._get_mint_token_accounts(False, address, page, page_size)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_on_chain_token_data","title":"get_on_chain_token_data  <code>async</code>","text":"<pre><code>get_on_chain_token_data(\n    address: str,\n) -&gt; GetOnChainTokenDataResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET On Chain Token Data for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_on_chain_token_data</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_on_chain_token_data(self, address: str) -&gt; GetOnChainTokenDataResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[On Chain Token Data](https://docs.solana.fm/reference/get_tfi_token_data)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_on_chain_token_data`][cyhole.solana_fm.interaction.SolanaFM._get_on_chain_token_data].\n    \"\"\"\n    return await self._interaction._get_on_chain_token_data(False, address)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_token_supply","title":"get_token_supply  <code>async</code>","text":"<pre><code>get_token_supply(address: str) -&gt; GetTokenSupplyResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Token Supply for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_token_supply</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_token_supply(self, address: str) -&gt; GetTokenSupplyResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Token Supply](https://docs.solana.fm/reference/get_token_circulating_supply)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_token_supply`][cyhole.solana_fm.interaction.SolanaFM._get_token_supply].\n    \"\"\"\n    return await self._interaction._get_token_supply(False, address)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_transfer_transactions","title":"get_transfer_transactions  <code>async</code>","text":"<pre><code>get_transfer_transactions(\n    transaction: str,\n) -&gt; GetTransferTransactionsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET Transfer Transactions for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_transfer_transactions</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_transfer_transactions(self, transaction: str) -&gt; GetTransferTransactionsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[Transfer Transactions](https://docs.solana.fm/reference/get_transfers)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_transfer_transactions`][cyhole.solana_fm.interaction.SolanaFM._get_transfer_transactions].\n    \"\"\"\n    return await self._interaction._get_transfer_transactions(False, transaction)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.post_multiple_transfer_transactions","title":"post_multiple_transfer_transactions  <code>async</code>","text":"<pre><code>post_multiple_transfer_transactions(\n    transactions: list[str],\n) -&gt; PostMultipleTransferTransactionsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint POST Multiple Transfer Transactions for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._post_multiple_transfer_transactions</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def post_multiple_transfer_transactions(self, transactions: list[str]) -&gt; PostMultipleTransferTransactionsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint POST **[Multiple Transfer Transactions](https://docs.solana.fm/reference/post_transfers)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._post_multiple_transfer_transactions`][cyhole.solana_fm.interaction.SolanaFM._post_multiple_transfer_transactions].\n    \"\"\"\n    return await self._interaction._post_multiple_transfer_transactions(False, transactions)\n</code></pre>"},{"location":"interactions/solana_fm/client.html#cyhole.solana_fm.client.SolanaFMAsyncClient.get_all_transfer_actions","title":"get_all_transfer_actions  <code>async</code>","text":"<pre><code>get_all_transfer_actions() -&gt; GetAllTransferActionsResponse\n</code></pre> <p>Call the SolanaFM's API endpoint GET All Transfer Actions for asynchronous logic.  All the API endopint details are available on <code>SolanaFM._get_all_transfer_actions</code>.</p> Source code in <code>src/cyhole/solana_fm/client.py</code> <pre><code>async def get_all_transfer_actions(self) -&gt; GetAllTransferActionsResponse:\n    \"\"\"\n        Call the SolanaFM's API endpoint GET **[All Transfer Actions](https://docs.solana.fm/reference/get_actions)** for asynchronous logic. \n        All the API endopint details are available on [`SolanaFM._get_all_transfer_actions`][cyhole.solana_fm.interaction.SolanaFM._get_all_transfer_actions].\n    \"\"\"\n    return await self._interaction._get_all_transfer_actions(False)\n</code></pre>"},{"location":"interactions/solana_fm/exception.html","title":"Exceptions","text":""},{"location":"interactions/solana_fm/exception.html#cyhole.solana_fm.exception","title":"cyhole.solana_fm.exception","text":""},{"location":"interactions/solana_fm/exception.html#cyhole.solana_fm.exception.SolanaFMException","title":"SolanaFMException","text":"<pre><code>SolanaFMException(description)\n</code></pre> <p>               Bases: <code>CyholeException</code></p> <p>General Exception for SolanaFM API.</p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html","title":"Interaction","text":""},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM","title":"cyhole.solana_fm.SolanaFM","text":"<pre><code>SolanaFM(api_key: str | None = None)\n</code></pre> <p>               Bases: <code>Interaction</code></p> <p>Class used to connect SolanaFM API, popular site to interact and explore Solana blockchain. To have access SolanaFM API is not required an API key, but it is recommended to have one to increase the rate limit. </p> <p>Check https://docs.solana.fm/ for all the details on the available endpoints.</p> <p>Info</p> <p>If the API key is not provided during the object creation, then it is tried to be  retrieved also from ENV variable SOLANA_FM_API_KEY.</p> <p>Parameters:</p> Name Type Description Default <code>api_key</code> <code>str | None</code> <p>specify the API key to use for the connection.</p> <code>None</code> <p>Example <pre><code>import asyncio\nfrom cyhole.solana_fm import SolanaFM\n\naccount = \"ACCOUNT_ID\"\nsolana_fm = SolanaFM()\n\n# Get account transactions\n# synchronous\nresponse = solana_fm.client.get_account_transactions(account)\nprint(\"Transactions Extracted:\", len(response.result.data))\n\n# asynchronous\nasync def main() -&gt; None:\n    async with solana_fm.async_client as client:\n        response = await client.get_account_transactions(account)\n        print(\"Transactions Extracted:\", len(response.result.data))\n\nasyncio.run(main())\n</code></pre></p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def __init__(self, api_key: str | None = None) -&gt; None:\n\n    # set API\n    self.api_key = api_key\n    if api_key is None:\n        self.api_key = os.environ.get(\"SOLANA_FM_API_KEY\")\n\n    # headers setup\n    headers = None\n    if self.api_key is not None:\n        headers = {\n            \"ApiKey\": self.api_key\n        }\n    super().__init__(headers)\n\n    # clients\n    self.client = SolanaFMClient(self, headers = headers)\n    self.async_client = SolanaFMAsyncClient(self, headers = headers)\n\n    # API urls\n    self.base_v0_url = \"https://api.solana.fm/v0/\"\n    self.base_v1_url = \"https://api.solana.fm/v1/\"\n\n    # private attributes\n    self._name = \"SolanaFM\"\n    self._description = \"Interact with SolanaFM API\"\n    return\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_account_transactions","title":"_get_account_transactions","text":"<pre><code>_get_account_transactions(\n    sync: Literal[True],\n    account: str,\n    params: GetAccountTransactionsParam = GetAccountTransactionsParam(),\n) -&gt; GetAccountTransactionsResponse\n</code></pre><pre><code>_get_account_transactions(\n    sync: Literal[False],\n    account: str,\n    params: GetAccountTransactionsParam = GetAccountTransactionsParam(),\n) -&gt; Coroutine[None, None, GetAccountTransactionsResponse]\n</code></pre> <pre><code>_get_account_transactions(\n    sync: bool,\n    account: str,\n    params: GetAccountTransactionsParam = GetAccountTransactionsParam(),\n) -&gt; (\n    GetAccountTransactionsResponse\n    | Coroutine[None, None, GetAccountTransactionsResponse]\n)\n</code></pre> <p>This function refers to the GET Account Transactions API endpoint,  and it is used to get the list of transactions for a given account according to input parameters.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>params</code> <code>GetAccountTransactionsParam</code> <p>The parameters to be used in the request. More details in the object definition.</p> <code>GetAccountTransactionsParam()</code> <p>Returns:</p> Type Description <code>GetAccountTransactionsResponse | Coroutine[None, None, GetAccountTransactionsResponse]</code> <p>List of transactions.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_account_transactions(self, sync: bool, account: str, params: GetAccountTransactionsParam = GetAccountTransactionsParam()) -&gt; GetAccountTransactionsResponse | Coroutine[None, None, GetAccountTransactionsResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Transactions](https://docs.solana.fm/reference/get_account_transactions)** API endpoint, \n        and it is used to get the list of transactions for a given account according to input parameters.\n\n        Parameters:\n            account: The account address.\n            params: The parameters to be used in the request.\n                More details in the object definition.\n\n        Returns:\n            List of transactions.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + f\"accounts/{account}/transactions\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountTransactionsResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_account_transactions_fees","title":"_get_account_transactions_fees","text":"<pre><code>_get_account_transactions_fees(\n    sync: Literal[True],\n    account: str,\n    dt_from: datetime | None = None,\n    dt_to: datetime | None = None,\n) -&gt; GetAccountTransactionsFeesResponse\n</code></pre><pre><code>_get_account_transactions_fees(\n    sync: Literal[False],\n    account: str,\n    dt_from: datetime | None = None,\n    dt_to: datetime | None = None,\n) -&gt; Coroutine[\n    None, None, GetAccountTransactionsFeesResponse\n]\n</code></pre> <pre><code>_get_account_transactions_fees(\n    sync: bool,\n    account: str,\n    dt_from: datetime | None = None,\n    dt_to: datetime | None = None,\n) -&gt; (\n    GetAccountTransactionsFeesResponse\n    | Coroutine[\n        None, None, GetAccountTransactionsFeesResponse\n    ]\n)\n</code></pre> <p>This function refers to the GET Account Transactions Fees API endpoint, and it is used to get the list of transactions fees for a given account according to input parameters.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>dt_from</code> <code>datetime | None</code> <p>The start date to filter transactions.</p> <code>None</code> <code>dt_to</code> <code>datetime | None</code> <p>The end date to filter transactions.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetAccountTransactionsFeesResponse | Coroutine[None, None, GetAccountTransactionsFeesResponse]</code> <p>List of transactions fees.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_account_transactions_fees(self, sync: bool, account: str, dt_from: datetime | None = None, dt_to: datetime | None = None) -&gt; GetAccountTransactionsFeesResponse | Coroutine[None, None, GetAccountTransactionsFeesResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Transactions Fees](https://docs.solana.fm/reference/get_account_tx_fees)** API endpoint,\n        and it is used to get the list of transactions fees for a given account according to input parameters.\n\n        Parameters:\n            account: The account address.\n            dt_from: The start date to filter transactions.\n            dt_to: The end date to filter transactions.\n\n        Returns:\n            List of transactions fees.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + f\"accounts/{account}/fees\"\n\n    api_params = {}\n    if dt_from is not None:\n        api_params[\"from\"] = dt_from.strftime(\"%Y-%m-%d\")\n    if dt_to is not None:\n        api_params[\"to\"] = dt_to.strftime(\"%Y-%m-%d\")\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetAccountTransactionsFeesResponse(data = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetAccountTransactionsFeesResponse(data = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_account_transfers","title":"_get_account_transfers","text":"<pre><code>_get_account_transfers(\n    sync: Literal[True],\n    account: str,\n    params: GetAccountTransfersParam = GetAccountTransfersParam(),\n) -&gt; GetAccountTransfersResponse\n</code></pre><pre><code>_get_account_transfers(\n    sync: Literal[False],\n    account: str,\n    params: GetAccountTransfersParam = GetAccountTransfersParam(),\n) -&gt; Coroutine[None, None, GetAccountTransfersResponse]\n</code></pre> <pre><code>_get_account_transfers(\n    sync: bool,\n    account: str,\n    params: GetAccountTransfersParam = GetAccountTransfersParam(),\n) -&gt; (\n    GetAccountTransfersResponse\n    | Coroutine[None, None, GetAccountTransfersResponse]\n)\n</code></pre> <p>This function refers to the GET Account Transfers API endpoint,  and it is used to get the list of transfers for a given account according to input parameters.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>params</code> <code>GetAccountTransfersParam</code> <p>The parameters to be used in the request. More details in the object definition.</p> <code>GetAccountTransfersParam()</code> <p>Returns:</p> Type Description <code>GetAccountTransfersResponse | Coroutine[None, None, GetAccountTransfersResponse]</code> <p>List of transfers.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_account_transfers(self, sync: bool, account: str, params: GetAccountTransfersParam = GetAccountTransfersParam()) -&gt; GetAccountTransfersResponse | Coroutine[None, None, GetAccountTransfersResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Transfers](https://docs.solana.fm/reference/get_account_transfers_v1)** API endpoint, \n        and it is used to get the list of transfers for a given account according to input parameters.\n\n        Parameters:\n            account: The account address.\n            params: The parameters to be used in the request.\n                More details in the object definition.\n\n        Returns:\n            List of transfers.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + f\"accounts/{account}/transfers\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountTransfersResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_account_transfers_csv_export","title":"_get_account_transfers_csv_export","text":"<pre><code>_get_account_transfers_csv_export(\n    sync: Literal[True],\n    account: str,\n    params: GetAccountTransfersCsvExportParam = GetAccountTransfersCsvExportParam(),\n) -&gt; GetAccountTransfersCsvExportResponse\n</code></pre><pre><code>_get_account_transfers_csv_export(\n    sync: Literal[False],\n    account: str,\n    params: GetAccountTransfersCsvExportParam = GetAccountTransfersCsvExportParam(),\n) -&gt; Coroutine[\n    None, None, GetAccountTransfersCsvExportResponse\n]\n</code></pre> <pre><code>_get_account_transfers_csv_export(\n    sync: bool,\n    account: str,\n    params: GetAccountTransfersCsvExportParam = GetAccountTransfersCsvExportParam(),\n) -&gt; (\n    GetAccountTransfersCsvExportResponse\n    | Coroutine[\n        None, None, GetAccountTransfersCsvExportResponse\n    ]\n)\n</code></pre> <p>This function refers to the GET Account Transfers CSV Export API endpoint, and it is used to get the list of transfers for a given account according to input parameters in CSV format.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>params</code> <code>GetAccountTransfersCsvExportParam</code> <p>The parameters to be used in the request. More details in the object definition.</p> <code>GetAccountTransfersCsvExportParam()</code> <p>Returns:</p> Type Description <code>GetAccountTransfersCsvExportResponse | Coroutine[None, None, GetAccountTransfersCsvExportResponse]</code> <p>List of transfers in CSV format.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_account_transfers_csv_export(self, sync: bool, account: str, params: GetAccountTransfersCsvExportParam = GetAccountTransfersCsvExportParam()) -&gt; GetAccountTransfersCsvExportResponse | Coroutine[None, None, GetAccountTransfersCsvExportResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Transfers CSV Export](https://docs.solana.fm/reference/download_csv_v1)** API endpoint,\n        and it is used to get the list of transfers for a given account according to input parameters in CSV format.\n\n        Parameters:\n            account: The account address.\n            params: The parameters to be used in the request.\n                More details in the object definition.\n\n        Returns:\n            List of transfers in CSV format.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + f\"accounts/{account}/transfers/csv\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetAccountTransfersCsvExportResponse(csv = content_raw.text)\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetAccountTransfersCsvExportResponse(csv = content_raw.text)\n        return async_request()\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_blocks","title":"_get_blocks","text":"<pre><code>_get_blocks(\n    sync: Literal[True],\n    from_block: int | None = None,\n    page_size: int = 50,\n    page_type: str = SolanaFMBlocksPaginationType.BLOCK_NUMBER.value,\n    ascending: bool | None = None,\n) -&gt; GetBlocksResponse\n</code></pre><pre><code>_get_blocks(\n    sync: Literal[False],\n    from_block: int | None = None,\n    page_size: int = 50,\n    page_type: str = SolanaFMBlocksPaginationType.BLOCK_NUMBER.value,\n    ascending: bool | None = None,\n) -&gt; Coroutine[None, None, GetBlocksResponse]\n</code></pre> <pre><code>_get_blocks(\n    sync: bool,\n    from_block: int | None = None,\n    page_size: int = 50,\n    page_type: str = SolanaFMBlocksPaginationType.BLOCK_NUMBER.value,\n    ascending: bool | None = None,\n) -&gt; (\n    GetBlocksResponse\n    | Coroutine[None, None, GetBlocksResponse]\n)\n</code></pre> <p>This function refers to the GET Blocks API endpoint, and it is used to get the list of blocks according to input parameters.</p> <p>Parameters:</p> Name Type Description Default <code>from_block</code> <code>int | None</code> <p>The block number to start from. If not provided, the latest block is returned.</p> <code>None</code> <code>page_size</code> <code>int</code> <p>The number of blocks to return.</p> <code>50</code> <code>page_type</code> <code>str</code> <p>The type of page to return. The supported types are available on <code>SolanaFMBlocksPaginationType</code>.</p> <code>SolanaFMBlocksPaginationType.BLOCK_NUMBER.value</code> <code>ascending</code> <code>bool | None</code> <p>The order of the blocks.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetBlocksResponse | Coroutine[None, None, GetBlocksResponse]</code> <p>List of blocks.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_blocks(\n    self,\n    sync: bool,\n    from_block: int | None = None,\n    page_size: int = 50,\n    page_type: str = SolanaFMBlocksPaginationType.BLOCK_NUMBER.value,\n    ascending: bool | None = None\n) -&gt; GetBlocksResponse | Coroutine[None, None, GetBlocksResponse]:\n    \"\"\"\n        This function refers to the GET **[Blocks](https://docs.solana.fm/reference/get_blocks_by_pagination)** API endpoint,\n        and it is used to get the list of blocks according to input parameters.\n\n        Parameters:\n            from_block: The block number to start from.\n                If not provided, the latest block is returned.\n            page_size: The number of blocks to return.\n            page_type: The type of page to return.\n                The supported types are available on [`SolanaFMBlocksPaginationType`][cyhole.solana_fm.param.SolanaFMBlocksPaginationType].\n            ascending: The order of the blocks.\n\n        Returns:\n            List of blocks.\n    \"\"\"\n    # check param consistency\n    SolanaFMBlocksPaginationType.check(page_type)\n\n    # set params\n    url = self.base_v0_url + \"blocks\"\n\n    api_params = {\n        \"from\": from_block,\n        \"pageSize\": page_size,\n        \"paginationType\": page_type,\n        \"reverse\": ascending\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetBlocksResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_block","title":"_get_block","text":"<pre><code>_get_block(\n    sync: Literal[True], block_number: int\n) -&gt; GetBlockResponse\n</code></pre><pre><code>_get_block(\n    sync: Literal[False], block_number: int\n) -&gt; Coroutine[None, None, GetBlockResponse]\n</code></pre> <pre><code>_get_block(\n    sync: bool, block_number: int\n) -&gt; (\n    GetBlockResponse\n    | Coroutine[None, None, GetBlockResponse]\n)\n</code></pre> <p>This function refers to the GET Block API endpoint, and it is used to get the block details for a given block Number.</p> <p>Parameters:</p> Name Type Description Default <code>block_number</code> <code>int</code> <p>The block number.</p> required <p>Returns:</p> Type Description <code>GetBlockResponse | Coroutine[None, None, GetBlockResponse]</code> <p>Block details.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_block(self, sync: bool, block_number: int) -&gt; GetBlockResponse | Coroutine[None, None, GetBlockResponse]:\n    \"\"\"\n        This function refers to the GET **[Block](https://docs.solana.fm/reference/get_block)** API endpoint,\n        and it is used to get the block details for a given block Number.\n\n        Parameters:\n            block_number: The block number.\n\n        Returns:\n            Block details.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + f\"blocks/{block_number}\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetBlockResponse\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._post_multiple_blocks","title":"_post_multiple_blocks","text":"<pre><code>_post_multiple_blocks(\n    sync: Literal[True],\n    block_numbers: list[int],\n    producer_details: bool = True,\n) -&gt; PostMultipleBlocksResponse\n</code></pre><pre><code>_post_multiple_blocks(\n    sync: Literal[False],\n    block_numbers: list[int],\n    producer_details: bool = True,\n) -&gt; Coroutine[None, None, PostMultipleBlocksResponse]\n</code></pre> <pre><code>_post_multiple_blocks(\n    sync: bool,\n    block_numbers: list[int],\n    producer_details: bool = True,\n) -&gt; (\n    PostMultipleBlocksResponse\n    | Coroutine[None, None, PostMultipleBlocksResponse]\n)\n</code></pre> <p>This function refers to the POST Multiple Blocks API endpoint, and it is used to get multiple blocks information from the SolanaFM API.</p> <p>Parameters:</p> Name Type Description Default <code>block_numbers</code> <code>list[int]</code> <p>The list of block numbers to get.</p> required <p>Returns:</p> Type Description <code>PostMultipleBlocksResponse | Coroutine[None, None, PostMultipleBlocksResponse]</code> <p>Block details.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _post_multiple_blocks(self, sync: bool, block_numbers: list[int], producer_details: bool = True) -&gt; PostMultipleBlocksResponse | Coroutine[None, None, PostMultipleBlocksResponse]:\n    \"\"\"\n        This function refers to the POST **[Multiple Blocks](https://docs.solana.fm/reference/get_multiple_blocks)** API endpoint,\n        and it is used to get multiple blocks information from the SolanaFM API.\n\n        Parameters:\n            block_numbers: The list of block numbers to get.\n\n        Returns:\n            Block details.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + \"blocks\"\n\n    headers = {\n        \"accept\": \"application/json\",\n        \"content-type\": \"application/json\"\n    }\n\n    json = {\n        \"hydration\": { \"accountHash\": producer_details },\n        \"blockNumbers\": block_numbers,\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.POST.value,\n        url = url,\n        response_model = PostMultipleBlocksResponse,\n        headers = headers,\n        json = json\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_solana_daily_transaction_fees","title":"_get_solana_daily_transaction_fees","text":"<pre><code>_get_solana_daily_transaction_fees(\n    sync: Literal[True], dt: datetime = datetime.now()\n) -&gt; GetSolanaDailyTransactionFeesResponse\n</code></pre><pre><code>_get_solana_daily_transaction_fees(\n    sync: Literal[False], dt: datetime = datetime.now()\n) -&gt; Coroutine[\n    None, None, GetSolanaDailyTransactionFeesResponse\n]\n</code></pre> <pre><code>_get_solana_daily_transaction_fees(\n    sync: bool, dt: datetime = datetime.now()\n) -&gt; (\n    GetSolanaDailyTransactionFeesResponse\n    | Coroutine[\n        None, None, GetSolanaDailyTransactionFeesResponse\n    ]\n)\n</code></pre> <p>This function refers to the GET Solana Daily Transaction Fees API endpoint, and it is used to get the daily transaction fees for a given date on the whole Solana chain.</p> <p>Observe that if the date is not provided, the current date is used and the result could change over time  as the day is not finished yet.</p> <p>Parameters:</p> Name Type Description Default <code>dt</code> <code>datetime</code> <p>The date to get the transaction fees. By default, the current date is used.</p> <code>datetime.now()</code> <p>Returns:</p> Type Description <code>GetSolanaDailyTransactionFeesResponse | Coroutine[None, None, GetSolanaDailyTransactionFeesResponse]</code> <p>Daily transaction fees.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_solana_daily_transaction_fees(self, sync: bool, dt: datetime = datetime.now()) -&gt; GetSolanaDailyTransactionFeesResponse | Coroutine[None, None, GetSolanaDailyTransactionFeesResponse]:\n    \"\"\"\n        This function refers to the GET **[Solana Daily Transaction Fees](https://docs.solana.fm/reference/get_daily_tx_fees)** API endpoint,\n        and it is used to get the daily transaction fees for a given date on the whole Solana chain.\n\n        Observe that if the date is not provided, the current date is used and the result could change over time \n        as the day is not finished yet.\n\n        Parameters:\n            dt: The date to get the transaction fees.\n                By default, the current date is used.\n\n        Returns:\n            Daily transaction fees.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + \"stats/tx-fees\"\n\n    api_params = {\n        \"date\": dt.strftime(\"%d-%m-%Y\")\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetSolanaDailyTransactionFeesResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_tagged_tokens_list","title":"_get_tagged_tokens_list","text":"<pre><code>_get_tagged_tokens_list(\n    sync: Literal[True],\n) -&gt; GetTaggedTokensListResponse\n</code></pre><pre><code>_get_tagged_tokens_list(\n    sync: Literal[False],\n) -&gt; Coroutine[None, None, GetTaggedTokensListResponse]\n</code></pre> <pre><code>_get_tagged_tokens_list(\n    sync: bool,\n) -&gt; (\n    GetTaggedTokensListResponse\n    | Coroutine[None, None, GetTaggedTokensListResponse]\n)\n</code></pre> <p>This function refers to the GET Tagged Tokens List API endpoint, and it is used to get the list of tagged tokens identified by the SolanaFM team (not tokens indexed on-chain).</p> <p>Returns:</p> Type Description <code>GetTaggedTokensListResponse | Coroutine[None, None, GetTaggedTokensListResponse]</code> <p>List of tagged tokens.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_tagged_tokens_list(self, sync: bool) -&gt; GetTaggedTokensListResponse | Coroutine[None, None, GetTaggedTokensListResponse]:\n    \"\"\"\n        This function refers to the GET **[Tagged Tokens List](https://docs.solana.fm/reference/get_tokens_by_pagination)** API endpoint,\n        and it is used to get the list of tagged tokens identified by the SolanaFM team (**not tokens indexed on-chain**).\n\n        Returns:\n            List of tagged tokens.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + \"tokens\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTaggedTokensListResponse\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_token_info_v0","title":"_get_token_info_v0","text":"<pre><code>_get_token_info_v0(\n    sync: Literal[True], address: str\n) -&gt; GetTokenInfoV0Response\n</code></pre><pre><code>_get_token_info_v0(\n    sync: Literal[False], address: str\n) -&gt; Coroutine[None, None, GetTokenInfoV0Response]\n</code></pre> <pre><code>_get_token_info_v0(\n    sync: bool, address: str\n) -&gt; (\n    GetTokenInfoV0Response\n    | Coroutine[None, None, GetTokenInfoV0Response]\n)\n</code></pre> <p>This function refers to the GET Token Info V0 API endpoint, and it is used to get the token information for a given token address.</p> <p>Info</p> <p>This endpoint refers to the V0 version of the API.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>The token address.</p> required <p>Returns:</p> Type Description <code>GetTokenInfoV0Response | Coroutine[None, None, GetTokenInfoV0Response]</code> <p>Token information.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_token_info_v0(self, sync: bool, address: str) -&gt; GetTokenInfoV0Response | Coroutine[None, None, GetTokenInfoV0Response]:\n    \"\"\"\n        This function refers to the GET **[Token Info V0](https://docs.solana.fm/reference/get_token_by_account_hash)** API endpoint,\n        and it is used to get the token information for a given token address.\n\n        !!! info\n            This endpoint refers to the **V0** version of the API.\n\n        Parameters:\n            address: The token address.\n\n        Returns:\n            Token information.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + f\"tokens/{address}\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenInfoV0Response\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._post_token_multiple_info_v0","title":"_post_token_multiple_info_v0","text":"<pre><code>_post_token_multiple_info_v0(\n    sync: Literal[True], addresses: list[str]\n) -&gt; PostTokenMultipleInfoV0Response\n</code></pre><pre><code>_post_token_multiple_info_v0(\n    sync: Literal[False], addresses: list[str]\n) -&gt; Coroutine[None, None, PostTokenMultipleInfoV0Response]\n</code></pre> <pre><code>_post_token_multiple_info_v0(\n    sync: bool, addresses: list[str]\n) -&gt; (\n    PostTokenMultipleInfoV0Response\n    | Coroutine[None, None, PostTokenMultipleInfoV0Response]\n)\n</code></pre> <p>This function refers to the POST Token Multiple Info V0 API endpoint, and it is used to get the token information for multiple token addresses.</p> <p>Info</p> <p>This endpoint refers to the V0 version of the API.</p> <p>Parameters:</p> Name Type Description Default <code>addresses</code> <code>list[str]</code> <p>The list of token addresses.</p> required <p>Returns:</p> Type Description <code>PostTokenMultipleInfoV0Response | Coroutine[None, None, PostTokenMultipleInfoV0Response]</code> <p>Token information.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _post_token_multiple_info_v0(self, sync: bool, addresses: list[str]) -&gt; PostTokenMultipleInfoV0Response | Coroutine[None, None, PostTokenMultipleInfoV0Response]:\n    \"\"\"\n        This function refers to the POST **[Token Multiple Info V0](https://docs.solana.fm/reference/get_tokens_by_account_hashes)** API endpoint,\n        and it is used to get the token information for multiple token addresses.\n\n        !!! info\n            This endpoint refers to the **V0** version of the API.\n\n        Parameters:\n            addresses: The list of token addresses.\n\n        Returns:\n            Token information.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + \"tokens\"\n\n    headers = {\n        \"accept\": \"application/json\",\n        \"content-type\": \"application/json\"\n    }\n\n    json = {\n        \"hydration\": { \"accountHash\": True },\n        \"tokenHashes\": addresses\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.POST.value,\n        url = url,\n        response_model = PostTokenMultipleInfoV0Response,\n        headers = headers,\n        json = json\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_token_info_v1","title":"_get_token_info_v1","text":"<pre><code>_get_token_info_v1(\n    sync: Literal[True], address: str\n) -&gt; GetTokenInfoV1Response\n</code></pre><pre><code>_get_token_info_v1(\n    sync: Literal[False], address: str\n) -&gt; Coroutine[None, None, GetTokenInfoV1Response]\n</code></pre> <pre><code>_get_token_info_v1(\n    sync: bool, address: str\n) -&gt; (\n    GetTokenInfoV1Response\n    | Coroutine[None, None, GetTokenInfoV1Response]\n)\n</code></pre> <p>This function refers to the GET Token Info V1 API endpoint, and it is used to get the token information for a given token address.</p> <p>Info</p> <p>This endpoint refers to the V1 version of the API.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>The token address.</p> required <p>Returns:</p> Type Description <code>GetTokenInfoV1Response | Coroutine[None, None, GetTokenInfoV1Response]</code> <p>Token information.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_token_info_v1(self, sync: bool, address: str) -&gt; GetTokenInfoV1Response | Coroutine[None, None, GetTokenInfoV1Response]:\n    \"\"\"\n        This function refers to the GET **[Token Info V1](https://docs.solana.fm/reference/get_one_token)** API endpoint,\n        and it is used to get the token information for a given token address.\n\n        !!! info\n            This endpoint refers to the **V1** version of the API.\n\n        Parameters:\n            address: The token address.\n\n        Returns:\n            Token information.\n    \"\"\"\n    # set params\n    url = self.base_v1_url + f\"tokens/{address}\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenInfoV1Response\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._post_token_multiple_info_v1","title":"_post_token_multiple_info_v1","text":"<pre><code>_post_token_multiple_info_v1(\n    sync: Literal[True], addresses: list[str]\n) -&gt; PostTokenMultipleInfoV1Response\n</code></pre><pre><code>_post_token_multiple_info_v1(\n    sync: Literal[False], addresses: list[str]\n) -&gt; Coroutine[None, None, PostTokenMultipleInfoV1Response]\n</code></pre> <pre><code>_post_token_multiple_info_v1(\n    sync: bool, addresses: list[str]\n) -&gt; (\n    PostTokenMultipleInfoV1Response\n    | Coroutine[None, None, PostTokenMultipleInfoV1Response]\n)\n</code></pre> <p>This function refers to the POST Token Multiple Info V1 API endpoint, and it is used to get the token information for multiple token addresses.</p> <p>Info</p> <p>This endpoint refers to the V1 version of the API.</p> <p>Parameters:</p> Name Type Description Default <code>addresses</code> <code>list[str]</code> <p>The list of token addresses.</p> required <p>Returns:</p> Type Description <code>PostTokenMultipleInfoV1Response | Coroutine[None, None, PostTokenMultipleInfoV1Response]</code> <p>Token information.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _post_token_multiple_info_v1(self, sync: bool, addresses: list[str]) -&gt; PostTokenMultipleInfoV1Response | Coroutine[None, None, PostTokenMultipleInfoV1Response]:\n    \"\"\"\n        This function refers to the POST **[Token Multiple Info V1](https://docs.solana.fm/reference/retrieve_multiple_tokens)** API endpoint,\n        and it is used to get the token information for multiple token addresses.\n\n        !!! info\n            This endpoint refers to the **V1** version of the API.\n\n        Parameters:\n            addresses: The list of token addresses.\n\n        Returns:\n            Token information.\n    \"\"\"\n    # set params\n    url = self.base_v1_url + \"tokens\"\n\n    headers = {\n        \"accept\": \"application/json\",\n        \"content-type\": \"application/json\"\n    }\n\n    json = {\n        \"tokens\": addresses\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.POST.value, url, headers = headers, json = json)\n        return PostTokenMultipleInfoV1Response(tokens = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.POST.value, url, headers = headers, json = json)\n            return PostTokenMultipleInfoV1Response(tokens = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._post_user_token_accounts","title":"_post_user_token_accounts","text":"<pre><code>_post_user_token_accounts(\n    sync: Literal[True],\n    address: str,\n    include_sol_balance: bool = False,\n    tokens: list[str] | None = None,\n) -&gt; PostUserTokenAccountsResponse\n</code></pre><pre><code>_post_user_token_accounts(\n    sync: Literal[False],\n    address: str,\n    include_sol_balance: bool = False,\n    tokens: list[str] | None = None,\n) -&gt; Coroutine[None, None, PostUserTokenAccountsResponse]\n</code></pre> <pre><code>_post_user_token_accounts(\n    sync: bool,\n    address: str,\n    include_sol_balance: bool = False,\n    tokens: list[str] | None = None,\n) -&gt; (\n    PostUserTokenAccountsResponse\n    | Coroutine[None, None, PostUserTokenAccountsResponse]\n)\n</code></pre> <p>This function refers to the POST User Token Accounts API endpoint, and it is used to get the token accounts for a given user address.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>The user address.</p> required <code>include_sol_balance</code> <code>bool</code> <p>Flag to include the Sol balance of the account.</p> <code>False</code> <code>tokens</code> <code>list[str] | None</code> <p>The list of token addresses to filter the accounts.</p> <code>None</code> <p>Returns:</p> Type Description <code>PostUserTokenAccountsResponse | Coroutine[None, None, PostUserTokenAccountsResponse]</code> <p>Token accounts.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _post_user_token_accounts(self, sync: bool, address: str, include_sol_balance: bool = False, tokens: list[str] | None = None) -&gt; PostUserTokenAccountsResponse | Coroutine[None, None, PostUserTokenAccountsResponse]:\n    \"\"\"\n        This function refers to the POST **[User Token Accounts](https://docs.solana.fm/reference/get_user_token_accounts)** API endpoint,\n        and it is used to get the token accounts for a given user address.\n\n        Parameters:\n            address: The user address.\n            include_sol_balance: Flag to include the Sol balance of the account.\n            tokens: The list of token addresses to filter the accounts.\n\n        Returns:\n            Token accounts.\n    \"\"\"\n    # set params\n    url = self.base_v1_url + f\"tokens/{address}/token-accounts\"\n\n    headers = {\n        \"accept\": \"application/json\",\n        \"content-type\": \"application/json\"\n    }\n\n    json = {\n        \"includeSolBalance\": include_sol_balance,\n        \"tokenHashes\": tokens\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.POST.value,\n        url = url,\n        response_model = PostUserTokenAccountsResponse,\n        headers = headers,\n        json = json\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_mint_token_accounts","title":"_get_mint_token_accounts","text":"<pre><code>_get_mint_token_accounts(\n    sync: Literal[True],\n    address: str,\n    page: int | None = None,\n    page_size: int | None = None,\n) -&gt; GetMintTokenAccountsResponse\n</code></pre><pre><code>_get_mint_token_accounts(\n    sync: Literal[False],\n    address: str,\n    page: int | None = None,\n    page_size: int | None = None,\n) -&gt; Coroutine[None, None, GetMintTokenAccountsResponse]\n</code></pre> <pre><code>_get_mint_token_accounts(\n    sync: bool,\n    address: str,\n    page: int | None = None,\n    page_size: int | None = None,\n) -&gt; (\n    GetMintTokenAccountsResponse\n    | Coroutine[None, None, GetMintTokenAccountsResponse]\n)\n</code></pre> <p>This function refers to the GET Mint Token Accounts API endpoint, and it is used to get the token accounts owned by a given token mint address.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>The token address.</p> required <code>page</code> <code>int | None</code> <p>The page number.</p> <code>None</code> <code>page_size</code> <code>int | None</code> <p>The number of accounts to return per page.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetMintTokenAccountsResponse | Coroutine[None, None, GetMintTokenAccountsResponse]</code> <p>Token accounts.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_mint_token_accounts(self, sync: bool, address: str, page: int | None = None, page_size: int | None = None) -&gt; GetMintTokenAccountsResponse | Coroutine[None, None, GetMintTokenAccountsResponse]:\n    \"\"\"\n        This function refers to the GET **[Mint Token Accounts](https://docs.solana.fm/reference/get_token_accounts_for_token_mint)** API endpoint,\n        and it is used to get the token accounts owned by a given token mint address.\n\n        Parameters:\n            address: The token address.\n            page: The page number.\n            page_size: The number of accounts to return per page.\n\n        Returns:\n            Token accounts.\n    \"\"\"\n    # set params\n    url = self.base_v1_url + f\"tokens/{address}/holders\"\n\n    api_params = {\n        \"page\": page,\n        \"pageSize\": page_size\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetMintTokenAccountsResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_on_chain_token_data","title":"_get_on_chain_token_data","text":"<pre><code>_get_on_chain_token_data(\n    sync: Literal[True], address: str\n) -&gt; GetOnChainTokenDataResponse\n</code></pre><pre><code>_get_on_chain_token_data(\n    sync: Literal[False], address: str\n) -&gt; Coroutine[None, None, GetOnChainTokenDataResponse]\n</code></pre> <pre><code>_get_on_chain_token_data(\n    sync: bool, address: str\n) -&gt; (\n    GetOnChainTokenDataResponse\n    | Coroutine[None, None, GetOnChainTokenDataResponse]\n)\n</code></pre> <p>This function refers to the GET On-Chain Token Data API endpoint, and it is used to get the token data for a given token address stored on-chain.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>The token address.</p> required <p>Returns:</p> Type Description <code>GetOnChainTokenDataResponse | Coroutine[None, None, GetOnChainTokenDataResponse]</code> <p>Token data.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_on_chain_token_data(self, sync: bool, address: str) -&gt; GetOnChainTokenDataResponse | Coroutine[None, None, GetOnChainTokenDataResponse]:\n    \"\"\"\n        This function refers to the GET **[On-Chain Token Data](https://docs.solana.fm/reference/get_tfi_token_data)** API endpoint,\n        and it is used to get the token data for a given token address stored on-chain.\n\n        Parameters:\n            address: The token address.\n\n        Returns:\n            Token data.\n    \"\"\"\n    # set params\n    url = self.base_v1_url + f\"tokens/{address}/info\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetOnChainTokenDataResponse\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_token_supply","title":"_get_token_supply","text":"<pre><code>_get_token_supply(\n    sync: Literal[True], address: str\n) -&gt; GetTokenSupplyResponse\n</code></pre><pre><code>_get_token_supply(\n    sync: Literal[False], address: str\n) -&gt; Coroutine[None, None, GetTokenSupplyResponse]\n</code></pre> <pre><code>_get_token_supply(\n    sync: bool, address: str\n) -&gt; (\n    GetTokenSupplyResponse\n    | Coroutine[None, None, GetTokenSupplyResponse]\n)\n</code></pre> <p>This function refers to the GET Token Supply API endpoint, and it is used to get the token circulating supply for a given token address.</p> <p>Parameters:</p> Name Type Description Default <code>address</code> <code>str</code> <p>The token address.</p> required <p>Returns:</p> Type Description <code>GetTokenSupplyResponse | Coroutine[None, None, GetTokenSupplyResponse]</code> <p>Token supply.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_token_supply(self, sync: bool, address: str) -&gt; GetTokenSupplyResponse | Coroutine[None, None, GetTokenSupplyResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Supply](https://docs.solana.fm/reference/get_token_circulating_supply)** API endpoint,\n        and it is used to get the token circulating supply for a given token address.\n\n        Parameters:\n            address: The token address.\n\n        Returns:\n            Token supply.\n    \"\"\"\n    # set params\n    url = self.base_v1_url + f\"tokens/{address}/supply\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenSupplyResponse\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_transfer_transactions","title":"_get_transfer_transactions","text":"<pre><code>_get_transfer_transactions(\n    sync: Literal[True], transaction: str\n) -&gt; GetTransferTransactionsResponse\n</code></pre><pre><code>_get_transfer_transactions(\n    sync: Literal[False], transaction: str\n) -&gt; Coroutine[None, None, GetTransferTransactionsResponse]\n</code></pre> <pre><code>_get_transfer_transactions(\n    sync: bool, transaction: str\n) -&gt; (\n    GetTransferTransactionsResponse\n    | Coroutine[None, None, GetTransferTransactionsResponse]\n)\n</code></pre> <p>This function refers to the GET Transfer Transactions API endpoint, and it is used to get the list of transfer transactions for a given account according to input parameters.</p> <p>Parameters:</p> Name Type Description Default <code>transaction</code> <code>str</code> <p>The transaction hash.</p> required <p>Returns:</p> Type Description <code>GetTransferTransactionsResponse | Coroutine[None, None, GetTransferTransactionsResponse]</code> <p>List of transfer transactions.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_transfer_transactions(self, sync: bool, transaction: str) -&gt; GetTransferTransactionsResponse | Coroutine[None, None, GetTransferTransactionsResponse]:\n    \"\"\"\n        This function refers to the GET **[Transfer Transactions](https://docs.solana.fm/reference/get_transfers)** API endpoint,\n        and it is used to get the list of transfer transactions for a given account according to input parameters.\n\n        Parameters:\n            transaction: The transaction hash.\n\n        Returns:\n            List of transfer transactions.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + f\"transfers/{transaction}\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTransferTransactionsResponse\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._post_multiple_transfer_transactions","title":"_post_multiple_transfer_transactions","text":"<pre><code>_post_multiple_transfer_transactions(\n    sync: Literal[True], transactions: list[str]\n) -&gt; PostMultipleTransferTransactionsResponse\n</code></pre><pre><code>_post_multiple_transfer_transactions(\n    sync: Literal[False], transactions: list[str]\n) -&gt; Coroutine[\n    None, None, PostMultipleTransferTransactionsResponse\n]\n</code></pre> <pre><code>_post_multiple_transfer_transactions(\n    sync: bool, transactions: list[str]\n) -&gt; (\n    PostMultipleTransferTransactionsResponse\n    | Coroutine[\n        None, None, PostMultipleTransferTransactionsResponse\n    ]\n)\n</code></pre> <p>This function refers to the POST Multiple Transfer Transactions API endpoint, and it is used to get multiple transfer transactions information from the SolanaFM API.</p> <p>Parameters:</p> Name Type Description Default <code>transactions</code> <code>list[str]</code> <p>The list of transaction hashes to get.</p> required <p>Returns:</p> Type Description <code>PostMultipleTransferTransactionsResponse | Coroutine[None, None, PostMultipleTransferTransactionsResponse]</code> <p>Transfer transactions details.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _post_multiple_transfer_transactions(self, sync: bool, transactions: list[str]) -&gt; PostMultipleTransferTransactionsResponse | Coroutine[None, None, PostMultipleTransferTransactionsResponse]:\n    \"\"\"\n        This function refers to the POST **[Multiple Transfer Transactions](https://docs.solana.fm/reference/post_transfers)** API endpoint,\n        and it is used to get multiple transfer transactions information from the SolanaFM API.\n\n        Parameters:\n            transactions: The list of transaction hashes to get.\n\n        Returns:\n            Transfer transactions details.\n    \"\"\"\n    # set params\n    url = self.base_v0_url + \"transfers\"\n\n    headers = {\n        \"accept\": \"application/json\",\n        \"content-type\": \"application/json\"\n    }\n\n    json = {\n        \"transactionHashes\": transactions\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.POST.value,\n        url = url,\n        response_model = PostMultipleTransferTransactionsResponse,\n        headers = headers,\n        json = json\n    )\n</code></pre>"},{"location":"interactions/solana_fm/interaction.html#cyhole.solana_fm.SolanaFM._get_all_transfer_actions","title":"_get_all_transfer_actions","text":"<pre><code>_get_all_transfer_actions(\n    sync: Literal[True],\n) -&gt; GetAllTransferActionsResponse\n</code></pre><pre><code>_get_all_transfer_actions(\n    sync: Literal[False],\n) -&gt; Coroutine[None, None, GetAllTransferActionsResponse]\n</code></pre> <pre><code>_get_all_transfer_actions(\n    sync: bool,\n) -&gt; (\n    GetAllTransferActionsResponse\n    | Coroutine[None, None, GetAllTransferActionsResponse]\n)\n</code></pre> <p>This function refers to the GET All Transfer Actions API endpoint, and it is used to get the list of all transfer actions on SolanaFM.</p> <p>Returns:</p> Type Description <code>GetAllTransferActionsResponse | Coroutine[None, None, GetAllTransferActionsResponse]</code> <p>List of all transfer actions.</p> Source code in <code>src/cyhole/solana_fm/interaction.py</code> <pre><code>def _get_all_transfer_actions(self, sync: bool) -&gt; GetAllTransferActionsResponse | Coroutine[None, None, GetAllTransferActionsResponse]:\n    \"\"\"\n        This function refers to the GET **[All Transfer Actions](https://docs.solana.fm/reference/get_actions)** API endpoint,\n        and it is used to get the list of all transfer actions on SolanaFM.\n\n        Returns:\n            List of all transfer actions.\n    \"\"\"\n    # set params\n    url = self.base_v1_url + \"actions\"\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url)\n        return GetAllTransferActionsResponse(actions = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url)\n            return GetAllTransferActionsResponse(actions = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/solana_fm/param.html","title":"Parameters","text":""},{"location":"interactions/solana_fm/param.html#cyhole.solana_fm.param","title":"cyhole.solana_fm.param","text":""},{"location":"interactions/solana_fm/param.html#cyhole.solana_fm.param.SolanaFMBlocksPaginationType","title":"SolanaFMBlocksPaginationType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Pagination type for Solana FM blocks.</p>"},{"location":"interactions/solana_fm/schema.html","title":"Response Schema","text":""},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema","title":"cyhole.solana_fm.schema","text":""},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBaseResponse","title":"SolanaFMBaseResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the base response of the SolanaFM API.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBaseResponse.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBaseResponse.message","title":"message  <code>instance-attribute</code>","text":"<pre><code>message: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMPagination","title":"SolanaFMPagination","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the pagination of the SolanaFM API.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMPagination.current_page","title":"current_page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>current_page: int = Field(alias='currentPage')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMPagination.total_pages","title":"total_pages  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_pages: int = Field(alias='totalPages')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam","title":"GetAccountTransactionsParam","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the parameters of the GET \"Account - Transactions\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.actions","title":"actions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>actions: str | None = None\n</code></pre> <p>The action(s) to filter by.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.utc_from_unix_time","title":"utc_from_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>utc_from_unix_time: int | None = Field(\n    default=None, serialization_alias=\"utcFrom\"\n)\n</code></pre> <p>The start date of the transactions to filter by in Unix time.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.utc_to_unix_time","title":"utc_to_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>utc_to_unix_time: int | None = Field(\n    default=None, serialization_alias=\"utcTo\"\n)\n</code></pre> <p>The end date of the transactions to filter by in Unix time.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.inflow","title":"inflow  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>inflow: bool | None = None\n</code></pre> <p>Whether to include inflow transactions.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.outflow","title":"outflow  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>outflow: bool | None = None\n</code></pre> <p>Whether to include outflow transactions.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.mints","title":"mints  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mints: str | list[str] | None = None\n</code></pre> <p>The mint ID(s) to filter by.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.amount_from","title":"amount_from  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_from: int | None = Field(\n    default=None, serialization_alias=\"amountFrom\", gt=0\n)\n</code></pre> <p>The minimum amount of the transaction.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.amount_to","title":"amount_to  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_to: int | None = Field(\n    default=None, serialization_alias=\"amountTo\", gt=0\n)\n</code></pre> <p>The maximum amount of the transaction.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.programs","title":"programs  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>programs: str | list[str] | None = None\n</code></pre> <p>The program ID(s) to filter by.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.limit","title":"limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limit: int | None = Field(default=None, le=1000, gt=0)\n</code></pre> <p>The number of transactions to return.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = Field(default=1, gt=0)\n</code></pre> <p>The page number to return.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.serialize_str_list_input","title":"serialize_str_list_input  <code>classmethod</code>","text":"<pre><code>serialize_str_list_input(\n    str_input: str | list[str] | None,\n) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solana_fm/schema.py</code> <pre><code>@field_serializer(\"mints\", \"programs\")\n@classmethod\ndef serialize_str_list_input(cls, str_input: str | list[str] | None) -&gt; str | None:\n    return \",\".join(str_input) if str_input else None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsParam.serialize_flows","title":"serialize_flows  <code>classmethod</code>","text":"<pre><code>serialize_flows(value: bool | None) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solana_fm/schema.py</code> <pre><code>@field_serializer(\"outflow\", \"inflow\")\n@classmethod\ndef serialize_flows(cls, value: bool | None) -&gt; str | None:\n    if value is not None:\n        return \"true\" if value else \"false\"\n    return\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsData","title":"GetAccountTransactionsData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the data of the GET \"Account - Transactions\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsData.block_time","title":"block_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time: int = Field(alias='blockTime')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsData.confirmation_status","title":"confirmation_status  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>confirmation_status: str = Field(alias=\"confirmationStatus\")\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsData.error","title":"error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>error: str | None = Field(default=None, alias='err')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsData.memo","title":"memo  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>memo: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsData.signature","title":"signature  <code>instance-attribute</code>","text":"<pre><code>signature: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsData.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsResult","title":"GetAccountTransactionsResult","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the result of the GET \"Account - Transactions\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsResult.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountTransactionsData]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsResult.pagination","title":"pagination  <code>instance-attribute</code>","text":"<pre><code>pagination: SolanaFMPagination\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsResponse","title":"GetAccountTransactionsResponse","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the GET \"Account - Transactions\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsResponse.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: GetAccountTransactionsResult\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam","title":"GetAccountTransfersParam","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the parameters of the GET \"Account - Transfers\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam.utc_from_unix_time","title":"utc_from_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>utc_from_unix_time: int | None = Field(\n    default=None, serialization_alias=\"utcFrom\"\n)\n</code></pre> <p>The start date of the transactions to filter by in Unix time.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam.utc_to_unix_time","title":"utc_to_unix_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>utc_to_unix_time: int | None = Field(\n    default=None, serialization_alias=\"utcTo\"\n)\n</code></pre> <p>The end date of the transactions to filter by in Unix time.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam.inflow","title":"inflow  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>inflow: bool | None = None\n</code></pre> <p>Whether to include inflow transactions.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam.outflow","title":"outflow  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>outflow: bool | None = None\n</code></pre> <p>Whether to include outflow transactions.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam.mint","title":"mint  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint: str | list[str] | None = None\n</code></pre> <p>The mint ID(s) to filter by.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam.limit","title":"limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limit: int | None = Field(default=None, le=100, gt=0)\n</code></pre> <p>The number of transactions to return.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = Field(default=1, gt=0)\n</code></pre> <p>The page number to return.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam.serialize_str_list_input","title":"serialize_str_list_input  <code>classmethod</code>","text":"<pre><code>serialize_str_list_input(\n    str_input: str | list[str] | None,\n) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solana_fm/schema.py</code> <pre><code>@field_serializer(\"mint\")\n@classmethod\ndef serialize_str_list_input(cls, str_input: str | list[str] | None) -&gt; str | None:\n    return \",\".join(str_input) if str_input else None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersParam.serialize_flows","title":"serialize_flows  <code>classmethod</code>","text":"<pre><code>serialize_flows(value: bool | None) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solana_fm/schema.py</code> <pre><code>@field_serializer(\"outflow\", \"inflow\")\n@classmethod\ndef serialize_flows(cls, value: bool | None) -&gt; str | None:\n    if value is not None:\n        return \"true\" if value else \"false\"\n    return\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData","title":"GetAccountTransfersData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the data of the GET \"Account - Transfers\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.instruction_index","title":"instruction_index  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>instruction_index: int = Field(alias='instructionIndex')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.inner_instruction_index","title":"inner_instruction_index  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>inner_instruction_index: int = Field(\n    alias=\"innerInstructionIndex\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.action","title":"action  <code>instance-attribute</code>","text":"<pre><code>action: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.source","title":"source  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.source_association","title":"source_association  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_association: str | None = Field(\n    default=None, alias=\"sourceAssociation\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.destination","title":"destination  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.destination_association","title":"destination_association  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination_association: str | None = Field(\n    default=None, alias=\"destinationAssociation\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.token","title":"token  <code>instance-attribute</code>","text":"<pre><code>token: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersData.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersResults","title":"GetAccountTransfersResults","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the results of the GET \"Account - Transfers\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersResults.transaction_hash","title":"transaction_hash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_hash: str = Field(alias='transactionHash')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersResults.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountTransfersData]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersResponse","title":"GetAccountTransfersResponse","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the GET \"Account - Transfers\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersResponse.results","title":"results  <code>instance-attribute</code>","text":"<pre><code>results: list[GetAccountTransfersResults]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersResponse.pagination","title":"pagination  <code>instance-attribute</code>","text":"<pre><code>pagination: SolanaFMPagination\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersCsvExportParam","title":"GetAccountTransfersCsvExportParam","text":"<p>               Bases: <code>GetAccountTransactionsParam</code></p> <p>Model used to identify the parameters of the GET \"Account - Transfers CSV Export\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersCsvExportResponse","title":"GetAccountTransfersCsvExportResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the response of the GET \"Account - Transfers CSV Export\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransfersCsvExportResponse.csv","title":"csv  <code>instance-attribute</code>","text":"<pre><code>csv: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsFeesData","title":"GetAccountTransactionsFeesData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the data of the GET \"Account Transactions Fees\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsFeesData.tx_fees","title":"tx_fees  <code>instance-attribute</code>","text":"<pre><code>tx_fees: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsFeesData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsFeesData.serialize_time","title":"serialize_time  <code>classmethod</code>","text":"<pre><code>serialize_time(time: datetime) -&gt; str\n</code></pre> Source code in <code>src/cyhole/solana_fm/schema.py</code> <pre><code>@field_serializer(\"time\")\n@classmethod\ndef serialize_time(cls, time: datetime) -&gt; str:\n    return time.strftime(\"%Y-%m-%d\")\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsFeesResponse","title":"GetAccountTransactionsFeesResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the response of the GET \"Account Transactions Fees\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAccountTransactionsFeesResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountTransactionsFeesData]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData","title":"SolanaFMBlockData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the data of the SolanaFM block.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.epoch","title":"epoch  <code>instance-attribute</code>","text":"<pre><code>epoch: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.previous_hash","title":"previous_hash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>previous_hash: str = Field(alias='previousHash')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.hash","title":"hash  <code>instance-attribute</code>","text":"<pre><code>hash: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.parent_number","title":"parent_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>parent_number: int = Field(alias='parentNumber')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.number","title":"number  <code>instance-attribute</code>","text":"<pre><code>number: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.data_size","title":"data_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data_size: int = Field(alias='dataSize')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.number_of_transactions","title":"number_of_transactions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_transactions: int = Field(\n    alias=\"numberOfTransactions\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.successful_transactions","title":"successful_transactions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>successful_transactions: int = Field(\n    alias=\"successfulTransactions\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.vote_transactions","title":"vote_transactions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vote_transactions: int = Field(alias='voteTransactions')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.total_tx_fees","title":"total_tx_fees  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_tx_fees: int = Field(alias='totalTxFees')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.number_of_rewards","title":"number_of_rewards  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>number_of_rewards: int = Field(alias='numberOfRewards')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.total_reward_amount","title":"total_reward_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_reward_amount: int = Field(alias='totalRewardAmount')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.total_compute_units_consumed","title":"total_compute_units_consumed  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_compute_units_consumed: int = Field(\n    alias=\"totalComputeUnitsConsumed\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.total_compute_units_limit","title":"total_compute_units_limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_compute_units_limit: int = Field(\n    alias=\"totalComputeUnitsLimit\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.SolanaFMBlockData.block_time","title":"block_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time: int = Field(alias='blockTime')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksDataData","title":"GetBlocksDataData","text":"<p>               Bases: <code>SolanaFMBlockData</code></p> <p>Model used to identify the info of the GET \"Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksDataData.producer","title":"producer  <code>instance-attribute</code>","text":"<pre><code>producer: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksData","title":"GetBlocksData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the data of the GET \"Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksData.block_number","title":"block_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_number: int = Field(alias='blockNumber')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksData.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetBlocksDataData\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksPagination","title":"GetBlocksPagination","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the pagination of the GET \"Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksPagination.next","title":"next  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>next: int | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksPagination.previous","title":"previous  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>previous: int | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksResult","title":"GetBlocksResult","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the result of the GET \"Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksResult.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetBlocksData]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksResult.pagination","title":"pagination  <code>instance-attribute</code>","text":"<pre><code>pagination: GetBlocksPagination\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksResponse","title":"GetBlocksResponse","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the data of the GET \"Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlocksResponse.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: GetBlocksResult\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlockResult","title":"GetBlockResult","text":"<p>               Bases: <code>GetBlocksData</code></p> <p>Model used to identify the result of the GET \"Block\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlockResponse","title":"GetBlockResponse","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the GET \"Block\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetBlockResponse.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: GetBlockResult\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducerData","title":"PostMultipleBlocksProducerData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the data of the producer from POST \"Multiple Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducerData.friendly_name","title":"friendly_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>friendly_name: str = Field(alias='friendlyName')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducerData.abbreviation","title":"abbreviation  <code>instance-attribute</code>","text":"<pre><code>abbreviation: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducerData.category","title":"category  <code>instance-attribute</code>","text":"<pre><code>category: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducerData.vote_key","title":"vote_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vote_key: str = Field(alias='voteKey')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducerData.network","title":"network  <code>instance-attribute</code>","text":"<pre><code>network: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducerData.tags","title":"tags  <code>instance-attribute</code>","text":"<pre><code>tags: list[str]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducerData.logo_uri","title":"logo_uri  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>logo_uri: str | None = Field(default=None, alias='logoURI')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducerData.flag","title":"flag  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flag: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducer","title":"PostMultipleBlocksProducer","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the producer of the POST \"Multiple Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducer.account_hash","title":"account_hash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account_hash: str = Field(alias='accountHash')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksProducer.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: PostMultipleBlocksProducerData\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksData","title":"PostMultipleBlocksData","text":"<p>               Bases: <code>SolanaFMBlockData</code></p> <p>Model used to identify the data of the POST \"Multiple Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksData.producer","title":"producer  <code>instance-attribute</code>","text":"<pre><code>producer: str | PostMultipleBlocksProducer\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksResult","title":"PostMultipleBlocksResult","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the result of the POST \"Multiple Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksResult.block_number","title":"block_number  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_number: int = Field(alias='blockNumber')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksResult.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: PostMultipleBlocksData\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksResponse","title":"PostMultipleBlocksResponse","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the POST \"Multiple Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleBlocksResponse.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: list[PostMultipleBlocksResult]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetSolanaDailyTransactionFeesResult","title":"GetSolanaDailyTransactionFeesResult","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the result of the GET \"Solana Daily Transaction Fees\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetSolanaDailyTransactionFeesResult.total_tx_fees","title":"total_tx_fees  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_tx_fees: int = Field(alias='totalTxFees')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetSolanaDailyTransactionFeesResult.date","title":"date  <code>instance-attribute</code>","text":"<pre><code>date: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetSolanaDailyTransactionFeesResult.parse_date","title":"parse_date  <code>classmethod</code>","text":"<pre><code>parse_date(dt: str) -&gt; datetime\n</code></pre> Source code in <code>src/cyhole/solana_fm/schema.py</code> <pre><code>@field_validator(\"date\")\n@classmethod\ndef parse_date(cls, dt: str) -&gt; datetime:\n    return datetime.strptime(dt, \"%d-%m-%Y\")\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetSolanaDailyTransactionFeesResult.serialize_date","title":"serialize_date  <code>classmethod</code>","text":"<pre><code>serialize_date(dt: datetime) -&gt; str\n</code></pre> Source code in <code>src/cyhole/solana_fm/schema.py</code> <pre><code>@field_serializer(\"date\")\n@classmethod\ndef serialize_date(cls, dt: datetime) -&gt; str:\n    return dt.strftime(\"%d-%m-%Y\")\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetSolanaDailyTransactionFeesResponse","title":"GetSolanaDailyTransactionFeesResponse","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the GET \"Solana Daily Transaction Fees\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetSolanaDailyTransactionFeesResponse.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: GetSolanaDailyTransactionFeesResult\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListPagination","title":"GetTaggedTokensListPagination","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the pagination of the GET \"Blocks\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListPagination.next","title":"next  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>next: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListPagination.previous","title":"previous  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>previous: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData","title":"GetTaggedTokensListDataData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the data of a token inside the GET \"Tagged Tokens List\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.mint","title":"mint  <code>instance-attribute</code>","text":"<pre><code>mint: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.token_name","title":"token_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_name: str = Field(alias='tokenName')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.description","title":"description  <code>instance-attribute</code>","text":"<pre><code>description: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.logo","title":"logo  <code>instance-attribute</code>","text":"<pre><code>logo: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.tags","title":"tags  <code>instance-attribute</code>","text":"<pre><code>tags: list[str]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.verified","title":"verified  <code>instance-attribute</code>","text":"<pre><code>verified: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.network","title":"network  <code>instance-attribute</code>","text":"<pre><code>network: list[str]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListDataData.metadata_token","title":"metadata_token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>metadata_token: str = Field(alias='metadataToken')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListData","title":"GetTaggedTokensListData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the data of the GET \"Tagged Tokens List\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListData.token","title":"token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token: str = Field(alias='tokenHash')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListData.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTaggedTokensListDataData\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListResult","title":"GetTaggedTokensListResult","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the result of the GET \"Tagged Tokens List\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListResult.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTaggedTokensListData]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListResult.pagination","title":"pagination  <code>instance-attribute</code>","text":"<pre><code>pagination: GetTaggedTokensListPagination\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListResponse","title":"GetTaggedTokensListResponse","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the GET \"Tagged Tokens List\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTaggedTokensListResponse.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: GetTaggedTokensListResult\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV0Result","title":"GetTokenInfoV0Result","text":"<p>               Bases: <code>GetTaggedTokensListData</code></p> <p>Model used to identify the data of the GET \"Token Info (v0)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV0Response","title":"GetTokenInfoV0Response","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the GET \"Token Info (v0)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV0Response.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: GetTokenInfoV0Result\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostTokenMultipleInfoV0Result","title":"PostTokenMultipleInfoV0Result","text":"<p>               Bases: <code>GetTaggedTokensListData</code></p> <p>Model used to identify the data of the POST \"Token Multiple Info (v0)\" endpoint</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostTokenMultipleInfoV0Response","title":"PostTokenMultipleInfoV0Response","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the POST \"Token Multiple Info (v0)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostTokenMultipleInfoV0Response.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: list[PostTokenMultipleInfoV0Result]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo","title":"GetTokenInfoV1ChainInfo","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the chain metadata of the token in the GET \"Token Info (v1)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.metadata","title":"metadata  <code>instance-attribute</code>","text":"<pre><code>metadata: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.update_authority","title":"update_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>update_authority: str = Field(alias='updateAuthority')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.is_master_edition","title":"is_master_edition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_master_edition: bool | None = Field(\n    default=None, alias=\"isMasterEdition\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.edition","title":"edition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>edition: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.uri","title":"uri  <code>instance-attribute</code>","text":"<pre><code>uri: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.seller_fee_basis_points","title":"seller_fee_basis_points  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>seller_fee_basis_points: int = Field(\n    alias=\"sellerFeeBasisPoints\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.primary_sale_happened","title":"primary_sale_happened  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>primary_sale_happened: bool = Field(\n    alias=\"primarySaleHappened\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.is_mutable","title":"is_mutable  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_mutable: bool = Field(alias='isMutable')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.creators","title":"creators  <code>instance-attribute</code>","text":"<pre><code>creators: list[str]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.rule_set","title":"rule_set  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rule_set: str | None = Field(default=None, alias='ruleSet')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.collection","title":"collection  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>collection: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.collection_details","title":"collection_details  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>collection_details: str | None = Field(\n    default=None, alias=\"collectionDetails\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1ChainInfo.uses","title":"uses  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>uses: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1OffChainInfo","title":"GetTokenInfoV1OffChainInfo","text":"<p>               Bases: <code>GetTokenInfoV1ChainInfo</code></p> <p>Model used to identify the off-chain metadata of the token in the GET \"Token Info (v1)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1OnChainInfo","title":"GetTokenInfoV1OnChainInfo","text":"<p>               Bases: <code>GetTokenInfoV1ChainInfo</code></p> <p>Model used to identify the on-chain metadata of the token in the GET \"Token Info (v1)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1TokenMetadata","title":"GetTokenInfoV1TokenMetadata","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the metadata of the token in the GET \"Token Info (v1)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1TokenMetadata.on_chain_info","title":"on_chain_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>on_chain_info: GetTokenInfoV1OnChainInfo | None = Field(\n    default=None, alias=\"onChainInfo\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1TokenMetadata.off_chain_info","title":"off_chain_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>off_chain_info: GetTokenInfoV1OffChainInfo | None = Field(\n    default=None, alias=\"offChainInfo\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1TokenList","title":"GetTokenInfoV1TokenList","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the token list in the GET \"Token Info (v1)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1TokenList.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1TokenList.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1TokenList.image","title":"image  <code>instance-attribute</code>","text":"<pre><code>image: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1TokenList.extensions","title":"extensions  <code>instance-attribute</code>","text":"<pre><code>extensions: dict[str, str]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1TokenList.chain_id","title":"chain_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>chain_id: int = Field(alias='chainId')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1Response","title":"GetTokenInfoV1Response","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the response of the GET \"Token Info (v0)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1Response.mint","title":"mint  <code>instance-attribute</code>","text":"<pre><code>mint: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1Response.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1Response.freeze_authority","title":"freeze_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>freeze_authority: str | None = Field(\n    default=None, alias=\"freezeAuthority\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1Response.mint_authority","title":"mint_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_authority: str | None = Field(\n    default=None, alias=\"mintAuthority\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1Response.token_type","title":"token_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_type: str = Field(alias='tokenType')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1Response.token_list","title":"token_list  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_list: GetTokenInfoV1TokenList = Field(\n    alias=\"tokenList\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenInfoV1Response.token_metadata","title":"token_metadata  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_metadata: GetTokenInfoV1TokenMetadata = Field(\n    alias=\"tokenMetadata\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostTokenMultipleInfoV1Response","title":"PostTokenMultipleInfoV1Response","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the response of the POST \"Token Multiple Info (v1)\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostTokenMultipleInfoV1Response.tokens","title":"tokens  <code>instance-attribute</code>","text":"<pre><code>tokens: dict[str, GetTokenInfoV1Response]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionStateTransferFee","title":"PostUserTokenAccountsInfoExtensionStateTransferFee","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the transfer fee of the extension state of the token in the POST \"User's Token Accounts\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionStateTransferFee.epoch","title":"epoch  <code>instance-attribute</code>","text":"<pre><code>epoch: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionStateTransferFee.maximum_fee","title":"maximum_fee  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>maximum_fee: int = Field(alias='maximumFee')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionStateTransferFee.transfer_fee_basis_points","title":"transfer_fee_basis_points  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transfer_fee_basis_points: int = Field(\n    alias=\"transferFeeBasisPoints\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionState","title":"PostUserTokenAccountsInfoExtensionState","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the state of the extension of the token in the POST \"User's Token Accounts\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionState.newer_transfer_fee","title":"newer_transfer_fee  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>newer_transfer_fee: (\n    PostUserTokenAccountsInfoExtensionStateTransferFee\n    | None\n) = Field(default=None, alias=\"newerTransferFee\")\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionState.older_transfer_fee","title":"older_transfer_fee  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>older_transfer_fee: (\n    PostUserTokenAccountsInfoExtensionStateTransferFee\n    | None\n) = Field(default=None, alias=\"olderTransferFee\")\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionState.withheld_amount","title":"withheld_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>withheld_amount: int | None = Field(\n    default=None, alias=\"withheldAmount\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionState.withdraw_withheld_authority","title":"withdraw_withheld_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>withdraw_withheld_authority: str | None = Field(\n    default=None, alias=\"withdrawWithheldAuthority\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtensionState.transfer_fee_config_authority","title":"transfer_fee_config_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transfer_fee_config_authority: str | None = Field(\n    default=None, alias=\"transferFeeConfigAuthority\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtension","title":"PostUserTokenAccountsInfoExtension","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the extension of the token in the POST \"User's Token Accounts\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtension.extension","title":"extension  <code>instance-attribute</code>","text":"<pre><code>extension: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoExtension.state","title":"state  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>state: PostUserTokenAccountsInfoExtensionState | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoTokenAmount","title":"PostUserTokenAccountsInfoTokenAmount","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the token amount of the token in the POST \"User's Token Accounts\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoTokenAmount.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoTokenAmount.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoTokenAmount.ui_amount","title":"ui_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_amount: float = Field(alias='uiAmount')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfoTokenAmount.ui_amount_string","title":"ui_amount_string  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_amount_string: str = Field(alias='uiAmountString')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfo","title":"PostUserTokenAccountsInfo","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the info of the token of the POST \"User's Token Accounts\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfo.extensions","title":"extensions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>extensions: (\n    list[PostUserTokenAccountsInfoExtension] | None\n) = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfo.is_native","title":"is_native  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_native: bool = Field(alias='isNative')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfo.mint","title":"mint  <code>instance-attribute</code>","text":"<pre><code>mint: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfo.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfo.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsInfo.token_amount","title":"token_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_amount: PostUserTokenAccountsInfoTokenAmount = Field(\n    alias=\"tokenAmount\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccounts","title":"PostUserTokenAccounts","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the token's account of the POST \"User's Token Accounts\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccounts.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = Field(alias='_id')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccounts.info","title":"info  <code>instance-attribute</code>","text":"<pre><code>info: PostUserTokenAccountsInfo\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccounts.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsResponse","title":"PostUserTokenAccountsResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the response of the POST \"User's Token Accounts\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsResponse.sol_balance","title":"sol_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sol_balance: int | None = Field(\n    default=None, alias=\"solBalance\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostUserTokenAccountsResponse.token_accounts","title":"token_accounts  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_accounts: list[PostUserTokenAccounts] = Field(\n    alias=\"tokenAccounts\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetMintTokenAccountsTokenAccounts","title":"GetMintTokenAccountsTokenAccounts","text":"<p>               Bases: <code>PostUserTokenAccounts</code></p> <p>Model used to identify the token accounts of the GET \"Mint Token Accounts\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetMintTokenAccountsResponse","title":"GetMintTokenAccountsResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the response of the GET \"Mint Token Accounts\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetMintTokenAccountsResponse.token_accounts","title":"token_accounts  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_accounts: list[GetMintTokenAccountsTokenAccounts] = (\n    Field(alias=\"tokenAccounts\")\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetMintTokenAccountsResponse.total_item_count","title":"total_item_count  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_item_count: int = Field(alias='totalItemCount')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataInfoExtension","title":"GetOnChainTokenDataInfoExtension","text":"<p>               Bases: <code>PostUserTokenAccountsInfoExtension</code></p> <p>Model used to identify the extension of the token in the GET \"On-Chain Token Data\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataInfo","title":"GetOnChainTokenDataInfo","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the info of the token in the GET \"On-Chain Token Data\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataInfo.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataInfo.extensions","title":"extensions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>extensions: (\n    list[GetOnChainTokenDataInfoExtension] | None\n) = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataInfo.freeze_authority","title":"freeze_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>freeze_authority: str | None = Field(\n    default=None, alias=\"freezeAuthority\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataInfo.is_initialized","title":"is_initialized  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_initialized: bool = Field(alias='isInitialized')\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataInfo.mint_authority","title":"mint_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_authority: str | None = Field(\n    default=None, alias=\"mintAuthority\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataInfo.supply","title":"supply  <code>instance-attribute</code>","text":"<pre><code>supply: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataResponse","title":"GetOnChainTokenDataResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the response of the GET \"On-Chain Token Data\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataResponse.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataResponse.info","title":"info  <code>instance-attribute</code>","text":"<pre><code>info: GetOnChainTokenDataInfo\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataResponse.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetOnChainTokenDataResponse.type","title":"type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>type: str | None = None\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenSupplyResponse","title":"GetTokenSupplyResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the response of the GET \"Token Supply\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenSupplyResponse.circulating_supply","title":"circulating_supply  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>circulating_supply: float = Field(alias=\"circulatingSupply\")\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenSupplyResponse.token_withheld_amount","title":"token_withheld_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_withheld_amount: int | None = Field(\n    default=None, alias=\"tokenWithheldAmount\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenSupplyResponse.user_total_withheld_amount","title":"user_total_withheld_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>user_total_withheld_amount: int = Field(\n    alias=\"userTotalWithheldAmount\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenSupplyResponse.total_withheld_amount","title":"total_withheld_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_withheld_amount: int = Field(\n    alias=\"totalWithheldAmount\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenSupplyResponse.real_circulating_supply","title":"real_circulating_supply  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>real_circulating_supply: float = Field(\n    alias=\"realCirculatingSupply\"\n)\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTokenSupplyResponse.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTransferTransactionsResult","title":"GetTransferTransactionsResult","text":"<p>               Bases: <code>GetAccountTransfersResults</code></p> <p>Model used to identify the result of the GET \"Transfer Transactions\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTransferTransactionsResponse","title":"GetTransferTransactionsResponse","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the GET \"Transfer Transactions\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetTransferTransactionsResponse.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: GetTransferTransactionsResult\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleTransferTransactionsResult","title":"PostMultipleTransferTransactionsResult","text":"<p>               Bases: <code>GetAccountTransfersResults</code></p> <p>Model used to identify the result of the POST \"Multiple Transfer Transactions\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleTransferTransactionsResponse","title":"PostMultipleTransferTransactionsResponse","text":"<p>               Bases: <code>SolanaFMBaseResponse</code></p> <p>Model used to identify the response of the POST \"Multiple Transfer Transactions\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.PostMultipleTransferTransactionsResponse.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: list[PostMultipleTransferTransactionsResult]\n</code></pre>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAllTransferActionsResponse","title":"GetAllTransferActionsResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the response of the GET \"All Transfer Actions\" endpoint.</p>"},{"location":"interactions/solana_fm/schema.html#cyhole.solana_fm.schema.GetAllTransferActionsResponse.actions","title":"actions  <code>instance-attribute</code>","text":"<pre><code>actions: list[str]\n</code></pre>"},{"location":"interactions/solscan/v1/index.html","title":"- Solscan (v1 API)","text":"<p>Solscan (https://solscan.io/) is one of the most widly used platform for analysing Solana blockchain. It robustness is provided by its API services that are easy to use and well documented. Currently, there are two versions of the API available, v1 and v2; this documentation covers the v1 API (see here for v2 API documentation).</p> <p>The access to the API services is provided by an API key that can be obtained by creating an account on the Solscan platform, and purchasing the desired subscription. Official documentation can be accessed from here.</p> <p>The API connector is <code>Solscan</code> class imported from <code>cyhole.solscan.v1</code> path. The same connector can be imported from <code>SolscanV1</code> class available in <code>cyhole.solscan</code>.</p>"},{"location":"interactions/solscan/v1/index.html#quick-examples","title":"Quick Examples","text":""},{"location":"interactions/solscan/v1/index.html#get-tokens-accounts-of-an-account","title":"Get Tokens Accounts of an Account","text":"<p>Extract the list of tokens accounts associate to an account on the Solana chian in few lines of code by using <code>get_account_tokens</code> in synchronous logic.</p> <pre><code>from cyhole.solscan.v1 import Solscan\n#from cyhole.solscan import SolscanV1 as Solscan\n\naccount = \"ACCOUNT_ID\"\n\n# extract tokens account transfers\nsolscan = Solscan()\nresponse = solscan.client.get_account_tokens(account)\nprint(\"Tokens Accounts Extracted:\", len(response.tokens))\n</code></pre> <p>Note</p> <p>To run this example is assumed that the user has a valid API key stored in <code>SOLSCAN_API_V1_KEY</code> environment variable. If the key is not provided during the object creations, then the library will raise an exception.</p>"},{"location":"interactions/solscan/v1/index.html#content","title":"Content","text":"<p>The documentation follows the library's structure by providing all the technical details required to use it.</p> <ul> <li> <p> Connector</p> <p><code>cyhole.solscan.v1</code> - Explore the <code>Solscan</code> v1 API connector and all its methods. </p> <p> Reference</p> </li> <li> <p> API Parameters</p> <p><code>cyhole.solscan.v1.param</code> - Ensure to use the correct parameters during the API calls.</p> <p> Reference</p> </li> <li> <p> Response Schema</p> <p><code>cyhole.solscan.v1.schema</code> - Extract only what is necessary by exploiting reponse mapping thanks to <code>pydantic</code> schemes.</p> <p> Reference</p> </li> <li> <p> Exceptions</p> <p><code>cyhole.solscan.v1.exception</code> - Make sure you intercept all exceptions correctly.</p> <p> Reference</p> </li> </ul>"},{"location":"interactions/solscan/v1/index.html#endpoints","title":"Endpoints","text":"Endpoint Type Method <code>cyhole</code> Release Deprecated Account Tokens <code>GET</code> <code>get_account_tokens</code> <code>0.2.3</code> - Account Transactions <code>GET</code> <code>get_account_transactions</code> <code>0.2.3</code> - Account StakeAccounts <code>GET</code> <code>get_account_stake_accounts</code> <code>0.2.3</code> - Account Spl Transfers <code>GET</code> <code>get_account_spl_transfers</code> <code>0.2.3</code> - Account Sol Transfers <code>GET</code> <code>get_account_sol_transfers</code> <code>0.2.3</code> - Account Export Transactions <code>GET</code> <code>get_account_export_transactions</code> <code>0.2.3</code> - Account Export Rewards <code>GET</code> <code>get_account_export_rewards</code> <code>0.2.3</code> - Account Detail <code>GET</code> <code>get_account_detail</code> <code>0.2.3</code> - Token Holders <code>GET</code> <code>get_token_holders</code> <code>0.2.3</code> - Token Meta <code>GET</code> <code>get_token_meta</code> <code>0.2.3</code> - Token Transfer <code>GET</code> <code>get_token_transfer</code> <code>0.2.3</code> - Token List <code>GET</code> <code>get_token_list</code> <code>0.2.3</code> - Market Token Detail <code>GET</code> <code>get_market_token_detail</code> <code>0.2.3</code> - Transaction Last <code>GET</code> <code>get_transaction_last</code> <code>0.2.3</code> - Transaction Detail <code>GET</code> <code>get_transaction_detail</code> <code>0.2.3</code> - Block Last <code>GET</code> <code>get_block_last</code> <code>0.2.3</code> - Block Detail <code>GET</code> <code>get_block_detail</code> <code>0.2.3</code> - Block Transactions <code>GET</code> <code>get_block_transactions</code> <code>0.2.3</code> -"},{"location":"interactions/solscan/v1/client.html","title":"Client","text":""},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client","title":"cyhole.solscan.v1.client","text":""},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient","title":"SolscanClient","text":"<pre><code>SolscanClient(\n    interaction: Solscan, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>APIClient</code></p> <p>Client used for synchronous API calls for <code>Solscan</code> interaction on V1 API.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def __init__(self, interaction: Solscan, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction = cast('Solscan', self._interaction)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_account_tokens","title":"get_account_tokens","text":"<pre><code>get_account_tokens(\n    account: str,\n) -&gt; GetAccountTokensResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Tokens for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_tokens</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_account_tokens(self, account: str) -&gt; GetAccountTokensResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Tokens](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-tokens)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_tokens`][cyhole.solscan.v1.interaction.Solscan._get_account_tokens].\n    \"\"\"\n    return self._interaction._get_account_tokens(True, account)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_account_transactions","title":"get_account_transactions","text":"<pre><code>get_account_transactions(\n    account: str,\n    before_hash: str | None = None,\n    limit: int | None = None,\n) -&gt; GetAccountTransactionsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Transactions for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_account_transactions(self, account: str, before_hash: str | None = None, limit: int | None = None) -&gt; GetAccountTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-transactions)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_transactions`][cyhole.solscan.v1.interaction.Solscan._get_account_transactions].\n    \"\"\"\n    return self._interaction._get_account_transactions(True, account, before_hash, limit)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_account_stake_accounts","title":"get_account_stake_accounts","text":"<pre><code>get_account_stake_accounts(\n    account: str,\n) -&gt; GetAccountStakeAccountsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account StakeAccounts for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_stake_accounts</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_account_stake_accounts(self, account: str) -&gt; GetAccountStakeAccountsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account StakeAccounts](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-stakeAccounts)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_stake_accounts`][cyhole.solscan.v1.interaction.Solscan._get_account_stake_accounts].\n    \"\"\"\n    return self._interaction._get_account_stake_accounts(True, account)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_account_spl_transfers","title":"get_account_spl_transfers","text":"<pre><code>get_account_spl_transfers(\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetAccountSplTransfersResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account SplTransfers for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_spl_transfers</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_account_spl_transfers(\n    self,\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetAccountSplTransfersResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account SplTransfers](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-splTransfers)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_spl_transfers`][cyhole.solscan.v1.interaction.Solscan._get_account_spl_transfers].\n    \"\"\"\n    return self._interaction._get_account_spl_transfers(True, account, utc_from_unix_time, utc_to_unix_time, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_account_sol_transfers","title":"get_account_sol_transfers","text":"<pre><code>get_account_sol_transfers(\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetAccountSolTransfersResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account SolTransfers for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_sol_transfers</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_account_sol_transfers(\n    self,\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetAccountSolTransfersResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account SolTransfers](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-solTransfers)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_sol_transfers`][cyhole.solscan.v1.interaction.Solscan._get_account_sol_transfers].\n    \"\"\"\n    return self._interaction._get_account_sol_transfers(True, account, utc_from_unix_time, utc_to_unix_time, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_account_export_transactions","title":"get_account_export_transactions","text":"<pre><code>get_account_export_transactions(\n    account: str,\n    export_type: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; GetAccountExportTransactionsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Export Transactions for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_export_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_account_export_transactions(self, account: str, export_type: str, dt_from: datetime, dt_to: datetime) -&gt; GetAccountExportTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Export Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-exportTransactions)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_export_transactions`][cyhole.solscan.v1.interaction.Solscan._get_account_export_transactions].\n    \"\"\"\n    return self._interaction._get_account_export_transactions(True, account, export_type, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_account_export_rewards","title":"get_account_export_rewards","text":"<pre><code>get_account_export_rewards(\n    account: str, dt_from: datetime, dt_to: datetime\n) -&gt; GetAccountExportRewardsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Export Rewards for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_export_rewards</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_account_export_rewards(self, account: str, dt_from: datetime, dt_to: datetime) -&gt; GetAccountExportRewardsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Export Rewards](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-exportRewards)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_export_rewards`][cyhole.solscan.v1.interaction.Solscan._get_account_export_rewards].\n    \"\"\"\n    return self._interaction._get_account_export_rewards(True, account, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_account_detail","title":"get_account_detail","text":"<pre><code>get_account_detail(\n    account: str,\n) -&gt; GetAccountDetailResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Detail for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_detail</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_account_detail(self, account: str) -&gt; GetAccountDetailResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-detail)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_detail`][cyhole.solscan.v1.interaction.Solscan._get_account_detail].\n    \"\"\"\n    return self._interaction._get_account_detail(True, account)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_token_holders","title":"get_token_holders","text":"<pre><code>get_token_holders(\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n    amount_from: int | None = None,\n    amount_to: int | None = None,\n) -&gt; GetTokenHoldersResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Token Holders for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_holders</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_token_holders(\n    self,\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n    amount_from: int | None = None,\n    amount_to: int | None = None\n) -&gt; GetTokenHoldersResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Token Holders](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-holders)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_holders`][cyhole.solscan.v1.interaction.Solscan._get_token_holders].\n    \"\"\"\n    return self._interaction._get_token_holders(True, token, limit, offset, amount_from, amount_to)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_token_meta","title":"get_token_meta","text":"<pre><code>get_token_meta(token: str) -&gt; GetTokenMetaResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Token Meta for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_meta</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_token_meta(self, token: str) -&gt; GetTokenMetaResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Token Meta](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-meta)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_meta`][cyhole.solscan.v1.interaction.Solscan._get_token_meta].\n    \"\"\"\n    return self._interaction._get_token_meta(True, token)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_token_transfer","title":"get_token_transfer","text":"<pre><code>get_token_transfer(\n    token: str,\n    account: str | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetTokenTransferResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Token Transfer for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_transfer</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_token_transfer(self, token: str, account: str | None = None, limit: int = 10, offset: int | None = None) -&gt; GetTokenTransferResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Token Transfer](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-transfer)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_transfer`][cyhole.solscan.v1.interaction.Solscan._get_token_transfer].\n    \"\"\"\n    return self._interaction._get_token_transfer(True, token, account, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_token_list","title":"get_token_list","text":"<pre><code>get_token_list(\n    sort_by: str = SolscanSort.MARKET_CAP.value,\n    order_by: str = SolscanOrder.DESCENDING.value,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetTokenListResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Token List for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_list</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_token_list(\n    self,\n    sort_by: str = SolscanSort.MARKET_CAP.value,\n    order_by: str = SolscanOrder.DESCENDING.value,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetTokenListResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Token List](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-list)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_list`][cyhole.solscan.v1.interaction.Solscan._get_token_list].\n    \"\"\"\n    return self._interaction._get_token_list(True, sort_by, order_by, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_market_token_detail","title":"get_market_token_detail","text":"<pre><code>get_market_token_detail(\n    token: str, limit: int = 10, offset: int | None = None\n) -&gt; GetMarketTokenDetailResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Market Token Detail for synchronous logic.  All the API endopint details are available on <code>Solscan._get_market_token_detail</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_market_token_detail(self, token: str, limit: int = 10, offset: int | None = None) -&gt; GetMarketTokenDetailResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Market Token Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/market-token-detail)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_market_token_detail`][cyhole.solscan.v1.interaction.Solscan._get_market_token_detail].\n    \"\"\"\n    return self._interaction._get_market_token_detail(True, token, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_transaction_last","title":"get_transaction_last","text":"<pre><code>get_transaction_last(\n    limit: int = 10,\n) -&gt; GetTransactionLastResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Transaction Last for synchronous logic.  All the API endopint details are available on <code>Solscan._get_transaction_last</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_transaction_last(self, limit: int = 10) -&gt; GetTransactionLastResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Transaction Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/transaction-last)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_transaction_last`][cyhole.solscan.v1.interaction.Solscan._get_transaction_last].\n    \"\"\"\n    return self._interaction._get_transaction_last(True, limit)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_transaction_detail","title":"get_transaction_detail","text":"<pre><code>get_transaction_detail(\n    transaction_id: str,\n) -&gt; GetTransactionDetailResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Transaction Detail for synchronous logic.  All the API endopint details are available on <code>Solscan._get_transaction_detail</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_transaction_detail(self, transaction_id: str) -&gt; GetTransactionDetailResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Transaction Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/transaction-detail)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_transaction_detail`][cyhole.solscan.v1.interaction.Solscan._get_transaction_detail].\n    \"\"\"\n    return self._interaction._get_transaction_detail(True, transaction_id)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_block_last","title":"get_block_last","text":"<pre><code>get_block_last(limit: int = 10) -&gt; GetBlockLastResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Block Last for synchronous logic.  All the API endopint details are available on <code>Solscan._get_block_last</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_block_last(self, limit: int = 10) -&gt; GetBlockLastResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Block Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/block-last)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_last`][cyhole.solscan.v1.interaction.Solscan._get_block_last].\n    \"\"\"\n    return self._interaction._get_block_last(True, limit)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_block_detail","title":"get_block_detail","text":"<pre><code>get_block_detail(block_id: int) -&gt; GetBlockDetailResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Block Detail for synchronous logic.  All the API endopint details are available on <code>Solscan._get_block_detail</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_block_detail(self, block_id: int) -&gt; GetBlockDetailResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Block Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/block-detail)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_detail`][cyhole.solscan.v1.interaction.Solscan._get_block_detail].\n    \"\"\"\n    return self._interaction._get_block_detail(True, block_id)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanClient.get_block_transactions","title":"get_block_transactions","text":"<pre><code>get_block_transactions(\n    block_id: int,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetBlockTransactionsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Block Transactions for synchronous logic.  All the API endopint details are available on <code>Solscan._get_block_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def get_block_transactions(self, block_id: int, limit: int = 10, offset: int | None = None) -&gt; GetBlockTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Block Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/block-transactions)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_transactions`][cyhole.solscan.v1.interaction.Solscan._get_block_transactions].\n    \"\"\"\n    return self._interaction._get_block_transactions(True, block_id, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient","title":"SolscanAsyncClient","text":"<pre><code>SolscanAsyncClient(\n    interaction: Solscan, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>AsyncAPIClient</code></p> <p>Client used for asynchronous API calls for <code>Solscan</code> interaction on V1 API.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>def __init__(self, interaction: Solscan, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction = cast('Solscan', self._interaction)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_account_tokens","title":"get_account_tokens  <code>async</code>","text":"<pre><code>get_account_tokens(\n    account: str,\n) -&gt; GetAccountTokensResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Tokens for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_tokens</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_account_tokens(self, account: str) -&gt; GetAccountTokensResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Tokens](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-tokens)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_tokens`][cyhole.solscan.v1.interaction.Solscan._get_account_tokens].\n    \"\"\"\n    return await self._interaction._get_account_tokens(False, account)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_account_transactions","title":"get_account_transactions  <code>async</code>","text":"<pre><code>get_account_transactions(\n    account: str,\n    before_hash: str | None = None,\n    limit: int | None = None,\n) -&gt; GetAccountTransactionsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Transactions for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_account_transactions(self, account: str, before_hash: str | None = None, limit: int | None = None) -&gt; GetAccountTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-transactions)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_transactions`][cyhole.solscan.v1.interaction.Solscan._get_account_transactions].\n    \"\"\"\n    return await self._interaction._get_account_transactions(False, account, before_hash, limit)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_account_stake_accounts","title":"get_account_stake_accounts  <code>async</code>","text":"<pre><code>get_account_stake_accounts(\n    account: str,\n) -&gt; GetAccountStakeAccountsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account StakeAccounts for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_stake_accounts</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_account_stake_accounts(self, account: str) -&gt; GetAccountStakeAccountsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account StakeAccounts](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-stakeAccounts)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_stake_accounts`][cyhole.solscan.v1.interaction.Solscan._get_account_stake_accounts].\n    \"\"\"\n    return await self._interaction._get_account_stake_accounts(False, account)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_account_spl_transfers","title":"get_account_spl_transfers  <code>async</code>","text":"<pre><code>get_account_spl_transfers(\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetAccountSplTransfersResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account SplTransfers for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_spl_transfers</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_account_spl_transfers(\n    self,\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetAccountSplTransfersResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account SplTransfers](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-splTransfers)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_spl_transfers`][cyhole.solscan.v1.interaction.Solscan._get_account_spl_transfers].\n    \"\"\"\n    return await self._interaction._get_account_spl_transfers(False, account, utc_from_unix_time, utc_to_unix_time, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_account_sol_transfers","title":"get_account_sol_transfers  <code>async</code>","text":"<pre><code>get_account_sol_transfers(\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetAccountSolTransfersResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account SolTransfers for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_sol_transfers</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_account_sol_transfers(\n    self,\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetAccountSolTransfersResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account SolTransfers](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-solTransfers)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_sol_transfers`][cyhole.solscan.v1.interaction.Solscan._get_account_sol_transfers].\n    \"\"\"\n    return await self._interaction._get_account_sol_transfers(False, account, utc_from_unix_time, utc_to_unix_time, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_account_export_transactions","title":"get_account_export_transactions  <code>async</code>","text":"<pre><code>get_account_export_transactions(\n    account: str,\n    export_type: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; GetAccountExportTransactionsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Export Transactions for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_export_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_account_export_transactions(self, account: str, export_type: str, dt_from: datetime, dt_to: datetime) -&gt; GetAccountExportTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Export Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-exportTransactions)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_export_transactions`][cyhole.solscan.v1.interaction.Solscan._get_account_export_transactions].\n    \"\"\"\n    return await self._interaction._get_account_export_transactions(False, account, export_type, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_account_export_rewards","title":"get_account_export_rewards  <code>async</code>","text":"<pre><code>get_account_export_rewards(\n    account: str, dt_from: datetime, dt_to: datetime\n) -&gt; GetAccountExportRewardsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Export Rewards for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_export_rewards</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_account_export_rewards(self, account: str, dt_from: datetime, dt_to: datetime) -&gt; GetAccountExportRewardsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Export Rewards](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-exportRewards)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_export_rewards`][cyhole.solscan.v1.interaction.Solscan._get_account_export_rewards].\n    \"\"\"\n    return await self._interaction._get_account_export_rewards(False, account, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_account_detail","title":"get_account_detail  <code>async</code>","text":"<pre><code>get_account_detail(\n    account: str,\n) -&gt; GetAccountDetailResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Account Detail for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_detail</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_account_detail(self, account: str) -&gt; GetAccountDetailResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Account Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-detail)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_detail`][cyhole.solscan.v1.interaction.Solscan._get_account_detail].\n    \"\"\"\n    return await self._interaction._get_account_detail(False, account)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_token_holders","title":"get_token_holders  <code>async</code>","text":"<pre><code>get_token_holders(\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n    amount_from: int | None = None,\n    amount_to: int | None = None,\n) -&gt; GetTokenHoldersResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Token Holders for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_holders</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_token_holders(\n    self,\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n    amount_from: int | None = None,\n    amount_to: int | None = None\n) -&gt; GetTokenHoldersResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Token Holders](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-holders)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_holders`][cyhole.solscan.v1.interaction.Solscan._get_token_holders].\n    \"\"\"\n    return await self._interaction._get_token_holders(False, token, limit, offset, amount_from, amount_to)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_token_meta","title":"get_token_meta  <code>async</code>","text":"<pre><code>get_token_meta(token: str) -&gt; GetTokenMetaResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Token Meta for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_meta</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_token_meta(self, token: str) -&gt; GetTokenMetaResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Token Meta](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-meta)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_meta`][cyhole.solscan.v1.interaction.Solscan._get_token_meta].\n    \"\"\"\n    return await self._interaction._get_token_meta(False, token)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_token_transfer","title":"get_token_transfer  <code>async</code>","text":"<pre><code>get_token_transfer(\n    token: str,\n    account: str | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetTokenTransferResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Token Transfer for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_transfer</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_token_transfer(self, token: str, account: str | None = None, limit: int = 10, offset: int | None = None) -&gt; GetTokenTransferResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Token Transfer](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-transfer)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_transfer`][cyhole.solscan.v1.interaction.Solscan._get_token_transfer].\n    \"\"\"\n    return await self._interaction._get_token_transfer(False, token, account, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_token_list","title":"get_token_list  <code>async</code>","text":"<pre><code>get_token_list(\n    sort_by: str = SolscanSort.MARKET_CAP.value,\n    order_by: str = SolscanOrder.DESCENDING.value,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetTokenListResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Token List for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_list</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_token_list(\n    self,\n    sort_by: str = SolscanSort.MARKET_CAP.value,\n    order_by: str = SolscanOrder.DESCENDING.value,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetTokenListResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Token List](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-list)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_list`][cyhole.solscan.v1.interaction.Solscan._get_token_list].\n    \"\"\"\n    return await self._interaction._get_token_list(False, sort_by, order_by, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_market_token_detail","title":"get_market_token_detail  <code>async</code>","text":"<pre><code>get_market_token_detail(\n    token: str, limit: int = 10, offset: int | None = None\n) -&gt; GetMarketTokenDetailResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Market Token Detail for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_market_token_detail</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_market_token_detail(self, token: str, limit: int = 10, offset: int | None = None) -&gt; GetMarketTokenDetailResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Market Token Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/market-token-detail)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_market_token_detail`][cyhole.solscan.v1.interaction.Solscan._get_market_token_detail].\n    \"\"\"\n    return await self._interaction._get_market_token_detail(False, token, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_transaction_last","title":"get_transaction_last  <code>async</code>","text":"<pre><code>get_transaction_last(\n    limit: int = 10,\n) -&gt; GetTransactionLastResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Transaction Last for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_transaction_last</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_transaction_last(self, limit: int = 10) -&gt; GetTransactionLastResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Transaction Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/transaction-last)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_transaction_last`][cyhole.solscan.v1.interaction.Solscan._get_transaction_last].\n    \"\"\"\n    return await self._interaction._get_transaction_last(False, limit)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_transaction_detail","title":"get_transaction_detail  <code>async</code>","text":"<pre><code>get_transaction_detail(\n    transaction_id: str,\n) -&gt; GetTransactionDetailResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Transaction Detail for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_transaction_detail</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_transaction_detail(self, transaction_id: str) -&gt; GetTransactionDetailResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Transaction Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/transaction-detail)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_transaction_detail`][cyhole.solscan.v1.interaction.Solscan._get_transaction_detail].\n    \"\"\"\n    return await self._interaction._get_transaction_detail(False, transaction_id)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_block_last","title":"get_block_last  <code>async</code>","text":"<pre><code>get_block_last(limit: int = 10) -&gt; GetBlockLastResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Block Last for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_block_last</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_block_last(self, limit: int = 10) -&gt; GetBlockLastResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Block Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/block-last)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_last`][cyhole.solscan.v1.interaction.Solscan._get_block_last].\n    \"\"\"\n    return await self._interaction._get_block_last(False, limit)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_block_detail","title":"get_block_detail  <code>async</code>","text":"<pre><code>get_block_detail(block_id: int) -&gt; GetBlockDetailResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Block Detail for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_block_detail</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_block_detail(self, block_id: int) -&gt; GetBlockDetailResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Block Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/block-detail)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_detail`][cyhole.solscan.v1.interaction.Solscan._get_block_detail].\n    \"\"\"\n    return await self._interaction._get_block_detail(False, block_id)\n</code></pre>"},{"location":"interactions/solscan/v1/client.html#cyhole.solscan.v1.client.SolscanAsyncClient.get_block_transactions","title":"get_block_transactions  <code>async</code>","text":"<pre><code>get_block_transactions(\n    block_id: int,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetBlockTransactionsResponse\n</code></pre> <p>Call the Solscan's V1 API endpoint GET Block Transactions for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_block_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v1/client.py</code> <pre><code>async def get_block_transactions(self, block_id: int, limit: int = 10, offset: int | None = None) -&gt; GetBlockTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V1** API endpoint GET **[Block Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/block-transactions)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_transactions`][cyhole.solscan.v1.interaction.Solscan._get_block_transactions].\n    \"\"\"\n    return await self._interaction._get_block_transactions(False, block_id, limit, offset)\n</code></pre>"},{"location":"interactions/solscan/v1/exception.html","title":"Exceptions","text":""},{"location":"interactions/solscan/v1/exception.html#cyhole.solscan.v1.exception","title":"cyhole.solscan.v1.exception","text":""},{"location":"interactions/solscan/v1/exception.html#cyhole.solscan.v1.exception.SolscanException","title":"SolscanException","text":"<pre><code>SolscanException(description)\n</code></pre> <p>               Bases: <code>CyholeException</code></p> <p>General Exception for Solscan API.</p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html","title":"Interaction","text":""},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan","title":"cyhole.solscan.v1.Solscan","text":"<pre><code>Solscan(api_key: str | None = None)\n</code></pre> <p>               Bases: <code>Interaction</code></p> <p>Class used to connect only Solscan V1 API, one of them most popular Solana chain explorer.  To have access Solscan Pro API is required to have a valid API key.</p> <p>Check API Documentation for all the details on the available endpoints.</p> <p>Solscan API is currently divided into two versions:</p> <ul> <li>v1 - the first and classic version of the Pro API.</li> <li>v2 - a new and improved version of the Pro API, with more endpoints and features.     This version is under development and may have some changes.</li> </ul> <p>Info</p> <p>This <code>Interaction</code> is dedicated to the Solscan Pro API v1.0. Use <code>cyhole.solscan.SolscanV2</code> or <code>cyhole.solscan.v2.Solscan</code> for the Solscan Pro API v2.0. If the API key is not provided during the object creation, then it is automatically  retrieved from environment variable <code>SOLSCAN_API_V1_KEY</code>.</p> <p>Parameters:</p> Name Type Description Default <code>api_key</code> <code>str | None</code> <p>specifies the API key for Solscan Pro API v1.</p> <code>None</code> <p>Example</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def __init__(self, api_key: str | None = None) -&gt; None:\n\n    # set API\n    self.api_key = api_key if api_key is not None else os.environ.get(\"SOLSCAN_API_V1_KEY\")\n    if self.api_key is None:\n        raise MissingAPIKeyError(\"no API key is provided during object's creation.\")\n\n    # headers setup\n    headers = {\n        \"token\": self.api_key\n    }\n    super().__init__(headers)\n    self.headers: dict[str, str]\n\n    # clients\n    self.client = SolscanClient(self, headers = self.headers)\n    self.async_client = SolscanAsyncClient(self, headers = self.headers)\n\n    # API urls\n    self.base_url = \"https://pro-api.solscan.io/v1.0/\"\n\n    # private attributes\n    self._name = \"Solscan V1 API\"\n    self._description = \"Interact with Solscan API V1\"\n    return\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_account_tokens","title":"_get_account_tokens","text":"<pre><code>_get_account_tokens(\n    sync: Literal[True], account: str\n) -&gt; GetAccountTokensResponse\n</code></pre><pre><code>_get_account_tokens(\n    sync: Literal[False], account: str\n) -&gt; Coroutine[None, None, GetAccountTokensResponse]\n</code></pre> <pre><code>_get_account_tokens(\n    sync: bool, account: str\n) -&gt; (\n    GetAccountTokensResponse\n    | Coroutine[None, None, GetAccountTokensResponse]\n)\n</code></pre> <p>This function refers to the GET Account Tokens of V1 API endpoint,  and it is used to get tokens balances of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <p>Returns:</p> Type Description <code>GetAccountTokensResponse | Coroutine[None, None, GetAccountTokensResponse]</code> <p>List of tokens balances of the account.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_account_tokens(self, sync: bool, account: str) -&gt; GetAccountTokensResponse | Coroutine[None, None, GetAccountTokensResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Tokens](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-tokens)** of **V1** API endpoint, \n        and it is used to get tokens balances of an account.\n\n        Parameters:\n            account: The account address.\n\n        Returns:\n            List of tokens balances of the account.\n    \"\"\"\n    # set params\n    url = self.base_url + \"account/tokens\"\n    api_params = {\n        \"account\": account\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetAccountTokensResponse(tokens = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetAccountTokensResponse(tokens = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_account_transactions","title":"_get_account_transactions","text":"<pre><code>_get_account_transactions(\n    sync: Literal[True],\n    account: str,\n    before_hash: str | None = None,\n    limit: int | None = None,\n) -&gt; GetAccountTransactionsResponse\n</code></pre><pre><code>_get_account_transactions(\n    sync: Literal[False],\n    account: str,\n    before_hash: str | None = None,\n    limit: int | None = None,\n) -&gt; Coroutine[None, None, GetAccountTransactionsResponse]\n</code></pre> <pre><code>_get_account_transactions(\n    sync: bool,\n    account: str,\n    before_hash: str | None = None,\n    limit: int | None = None,\n) -&gt; (\n    GetAccountTransactionsResponse\n    | Coroutine[None, None, GetAccountTransactionsResponse]\n)\n</code></pre> <p>This function refers to the GET Account Transactions of V1 API endpoint,  and it is used to get transactions of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>before_hash</code> <code>str | None</code> <p>The transaction hash to get transactions before it.</p> <code>None</code> <code>limit</code> <code>int | None</code> <p>The number of transactions to get; maximum is 50.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetAccountTransactionsResponse | Coroutine[None, None, GetAccountTransactionsResponse]</code> <p>List of transactions of the account.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_account_transactions(self, sync: bool, account: str, before_hash: str | None = None, limit: int | None = None) -&gt; GetAccountTransactionsResponse | Coroutine[None, None, GetAccountTransactionsResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-transactions)** of **V1** API endpoint, \n        and it is used to get transactions of an account.\n\n        Parameters:\n            account: The account address.\n            before_hash: The transaction hash to get transactions before it.\n            limit: The number of transactions to get; maximum is 50.\n\n        Returns:\n            List of transactions of the account.\n    \"\"\"\n    # set params\n    url = self.base_url + \"account/transactions\"\n    api_params = {\n        \"account\": account,\n        \"beforeHash\": before_hash,\n        \"limit\": limit\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetAccountTransactionsResponse(transactions = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetAccountTransactionsResponse(transactions = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_account_stake_accounts","title":"_get_account_stake_accounts","text":"<pre><code>_get_account_stake_accounts(\n    sync: Literal[True], account: str\n) -&gt; GetAccountStakeAccountsResponse\n</code></pre><pre><code>_get_account_stake_accounts(\n    sync: Literal[False], account: str\n) -&gt; Coroutine[None, None, GetAccountStakeAccountsResponse]\n</code></pre> <pre><code>_get_account_stake_accounts(\n    sync: bool, account: str\n) -&gt; (\n    GetAccountStakeAccountsResponse\n    | Coroutine[None, None, GetAccountStakeAccountsResponse]\n)\n</code></pre> <p>This function refers to the GET Account StakeAccounts of V1 API endpoint,  and it is used to get stake accounts of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <p>Returns:</p> Type Description <code>GetAccountStakeAccountsResponse | Coroutine[None, None, GetAccountStakeAccountsResponse]</code> <p>List of stake accounts of the account.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_account_stake_accounts(self, sync: bool, account: str) -&gt; GetAccountStakeAccountsResponse | Coroutine[None, None, GetAccountStakeAccountsResponse]:\n    \"\"\"\n        This function refers to the GET **[Account StakeAccounts](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-stakeAccounts)** of **V1** API endpoint, \n        and it is used to get stake accounts of an account.\n\n        Parameters:\n            account: The account address.\n\n        Returns:\n            List of stake accounts of the account.\n    \"\"\"\n    # set params\n    url = self.base_url + \"account/stakeAccounts\"\n    api_params = {\n        \"account\": account\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetAccountStakeAccountsResponse(stake_accounts = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetAccountStakeAccountsResponse(stake_accounts = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_account_spl_transfers","title":"_get_account_spl_transfers","text":"<pre><code>_get_account_spl_transfers(\n    sync: Literal[True],\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetAccountSplTransfersResponse\n</code></pre><pre><code>_get_account_spl_transfers(\n    sync: Literal[False],\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; Coroutine[None, None, GetAccountSplTransfersResponse]\n</code></pre> <pre><code>_get_account_spl_transfers(\n    sync: bool,\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; (\n    GetAccountSplTransfersResponse\n    | Coroutine[None, None, GetAccountSplTransfersResponse]\n)\n</code></pre> <p>This function refers to the GET Account SplTransfers of V1 API endpoint,  and it is used to get spl transfers of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>utc_from_unix_time</code> <code>int | None</code> <p>The start time in unix time.</p> <code>None</code> <code>utc_to_unix_time</code> <code>int | None</code> <p>The end time in unix time.</p> <code>None</code> <code>limit</code> <code>int</code> <p>The number of transactions to get; maximum is 50.</p> <code>10</code> <code>offset</code> <code>int | None</code> <p>The offset of the transactions.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetAccountSplTransfersResponse | Coroutine[None, None, GetAccountSplTransfersResponse]</code> <p>List of spl transfers of the account.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_account_spl_transfers(\n    self,\n    sync: bool,\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetAccountSplTransfersResponse | Coroutine[None, None, GetAccountSplTransfersResponse]:\n    \"\"\"\n        This function refers to the GET **[Account SplTransfers](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-splTransfers)** of **V1** API endpoint, \n        and it is used to get spl transfers of an account.\n\n        Parameters:\n            account: The account address.\n            utc_from_unix_time: The start time in unix time.\n            utc_to_unix_time: The end time in unix time.\n            limit: The number of transactions to get; maximum is 50.\n            offset: The offset of the transactions.\n\n        Returns:\n            List of spl transfers of the account.\n    \"\"\"\n    # set params\n    url = self.base_url + \"account/splTransfers\"\n    api_params = {\n        \"account\": account,\n        \"fromTime\": utc_from_unix_time,\n        \"toTime\": utc_to_unix_time,\n        \"limit\": limit,\n        \"offset\": offset\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountSplTransfersResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_account_sol_transfers","title":"_get_account_sol_transfers","text":"<pre><code>_get_account_sol_transfers(\n    sync: Literal[True],\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetAccountSolTransfersResponse\n</code></pre><pre><code>_get_account_sol_transfers(\n    sync: Literal[False],\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; Coroutine[None, None, GetAccountSolTransfersResponse]\n</code></pre> <pre><code>_get_account_sol_transfers(\n    sync: bool,\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; (\n    GetAccountSolTransfersResponse\n    | Coroutine[None, None, GetAccountSolTransfersResponse]\n)\n</code></pre> <p>This function refers to the GET Account SolTransfers of V1 API endpoint,  and it is used to get sol transfers of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>utc_from_unix_time</code> <code>int | None</code> <p>The start time in unix time.</p> <code>None</code> <code>utc_to_unix_time</code> <code>int | None</code> <p>The end time in unix time.</p> <code>None</code> <code>limit</code> <code>int</code> <p>The number of transactions to get; maximum is 50.</p> <code>10</code> <code>offset</code> <code>int | None</code> <p>The offset of the transactions.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetAccountSolTransfersResponse | Coroutine[None, None, GetAccountSolTransfersResponse]</code> <p>List of sol transfers of the account.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_account_sol_transfers(\n    self,\n    sync: bool,\n    account: str,\n    utc_from_unix_time: int | None = None,\n    utc_to_unix_time: int | None = None,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetAccountSolTransfersResponse | Coroutine[None, None, GetAccountSolTransfersResponse]:\n    \"\"\"\n        This function refers to the GET **[Account SolTransfers](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-solTransfers)** of **V1** API endpoint, \n        and it is used to get sol transfers of an account.\n\n        Parameters:\n            account: The account address.\n            utc_from_unix_time: The start time in unix time.\n            utc_to_unix_time: The end time in unix time.\n            limit: The number of transactions to get; maximum is 50.\n            offset: The offset of the transactions.\n\n        Returns:\n            List of sol transfers of the account.\n    \"\"\"\n    # set params\n    url = self.base_url + \"account/solTransfers\"\n    api_params = {\n        \"account\": account,\n        \"fromTime\": utc_from_unix_time,\n        \"toTime\": utc_to_unix_time,\n        \"limit\": limit,\n        \"offset\": offset\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountSolTransfersResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_account_export_transactions","title":"_get_account_export_transactions","text":"<pre><code>_get_account_export_transactions(\n    sync: Literal[True],\n    account: str,\n    export_type: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; GetAccountExportTransactionsResponse\n</code></pre><pre><code>_get_account_export_transactions(\n    sync: Literal[False],\n    account: str,\n    export_type: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; Coroutine[\n    None, None, GetAccountExportTransactionsResponse\n]\n</code></pre> <pre><code>_get_account_export_transactions(\n    sync: bool,\n    account: str,\n    export_type: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; (\n    GetAccountExportTransactionsResponse\n    | Coroutine[\n        None, None, GetAccountExportTransactionsResponse\n    ]\n)\n</code></pre> <p>This function refers to the GET Account Export Transactions of V1 API endpoint,  and it is used to get export transactions of an account in CSV format.</p> <p>Info</p> <p>The limit of the export transactions is 5000.  Moreover, it is possible to execute the export transactions only for 1 time for every minute.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>export_type</code> <code>str</code> <p>The export type. The supported types are available on <code>SolscanExportType</code>.</p> required <code>dt_from</code> <code>datetime</code> <p>The start time.</p> required <code>dt_to</code> <code>datetime</code> <p>The end time.</p> required <p>Returns:</p> Type Description <code>GetAccountExportTransactionsResponse | Coroutine[None, None, GetAccountExportTransactionsResponse]</code> <p>List of export transactions of the account.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_account_export_transactions(self, sync: bool, account: str, export_type: str, dt_from: datetime, dt_to: datetime) -&gt; GetAccountExportTransactionsResponse | Coroutine[None, None, GetAccountExportTransactionsResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Export Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-exportTransactions)** of **V1** API endpoint, \n        and it is used to get export transactions of an account in CSV format.\n\n        !!! info\n            The limit of the export transactions is 5000. \n            Moreover, it is possible to execute the export transactions **only** for 1 time for every minute.\n\n        Parameters:\n            account: The account address.\n            export_type: The export type.\n                The supported types are available on [`SolscanExportType`][cyhole.solscan.v1.param.SolscanExportType].\n            dt_from: The start time.\n            dt_to: The end time.\n\n        Returns:\n            List of export transactions of the account.\n    \"\"\"\n    # check param consistency\n    SolscanExportType.check(export_type)\n\n    # set params\n    url = self.base_url + \"account/exportTransactions\"\n    api_params = {\n        \"account\": account,\n        \"type\": export_type,\n        \"fromTime\": int(dt_from.timestamp()),\n        \"toTime\": int(dt_to.timestamp())\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetAccountExportTransactionsResponse(csv = content_raw.text)\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetAccountExportTransactionsResponse(csv = content_raw.text)\n        return async_request()\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_account_export_rewards","title":"_get_account_export_rewards","text":"<pre><code>_get_account_export_rewards(\n    sync: Literal[True],\n    account: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; GetAccountExportRewardsResponse\n</code></pre><pre><code>_get_account_export_rewards(\n    sync: Literal[False],\n    account: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; Coroutine[None, None, GetAccountExportRewardsResponse]\n</code></pre> <pre><code>_get_account_export_rewards(\n    sync: bool,\n    account: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; (\n    GetAccountExportRewardsResponse\n    | Coroutine[None, None, GetAccountExportRewardsResponse]\n)\n</code></pre> <p>This function refers to the GET Account Export Rewards of V1 API endpoint,  and it is used to get export rewards of an account in CSV format.</p> <p>Info</p> <p>The limit of the export rewards is 5000 for request.  Moreover, it is possible to execute the request only 1 time for every minute.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>dt_from</code> <code>datetime</code> <p>The start time.</p> required <code>dt_to</code> <code>datetime</code> <p>The end time.</p> required <p>Returns:</p> Type Description <code>GetAccountExportRewardsResponse | Coroutine[None, None, GetAccountExportRewardsResponse]</code> <p>List of export rewards of the account.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_account_export_rewards(self, sync: bool, account: str, dt_from: datetime, dt_to: datetime) -&gt; GetAccountExportRewardsResponse | Coroutine[None, None, GetAccountExportRewardsResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Export Rewards](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-exportRewards)** of **V1** API endpoint, \n        and it is used to get export rewards of an account in CSV format.\n\n        !!! info\n            The limit of the export rewards is 5000 for request. \n            Moreover, it is possible to execute the request **only** 1 time for every minute.\n\n        Parameters:\n            account: The account address.\n            dt_from: The start time.\n            dt_to: The end time.\n\n        Returns:\n            List of export rewards of the account.\n    \"\"\"\n\n    # set params\n    url = self.base_url + \"account/exportRewards\"\n    api_params = {\n        \"account\": account,\n        \"fromTime\": int(dt_from.timestamp()),\n        \"toTime\": int(dt_to.timestamp())\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetAccountExportRewardsResponse(csv = content_raw.text)\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetAccountExportRewardsResponse(csv = content_raw.text)\n        return async_request()\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_account_detail","title":"_get_account_detail","text":"<pre><code>_get_account_detail(\n    sync: Literal[True], account: str\n) -&gt; GetAccountDetailResponse\n</code></pre><pre><code>_get_account_detail(\n    sync: Literal[False], account: str\n) -&gt; Coroutine[None, None, GetAccountDetailResponse]\n</code></pre> <pre><code>_get_account_detail(\n    sync: bool, account: str\n) -&gt; (\n    GetAccountDetailResponse\n    | Coroutine[None, None, GetAccountDetailResponse]\n)\n</code></pre> <p>This function refers to the GET Account Detail of V1 API endpoint,  and it is used to get details of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <p>Returns:</p> Type Description <code>GetAccountDetailResponse | Coroutine[None, None, GetAccountDetailResponse]</code> <p>Details of the account.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_account_detail(self, sync: bool, account: str) -&gt; GetAccountDetailResponse | Coroutine[None, None, GetAccountDetailResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/account-detail)** of **V1** API endpoint, \n        and it is used to get details of an account.\n\n        Parameters:\n            account: The account address.\n\n        Returns:\n            Details of the account.\n    \"\"\"\n    # set params\n    url = self.base_url + f\"account/{account}\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountDetailResponse\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_token_holders","title":"_get_token_holders","text":"<pre><code>_get_token_holders(\n    sync: Literal[True],\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n    amount_from: int | None = None,\n    amount_to: int | None = None,\n) -&gt; GetTokenHoldersResponse\n</code></pre><pre><code>_get_token_holders(\n    sync: Literal[False],\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n    amount_from: int | None = None,\n    amount_to: int | None = None,\n) -&gt; Coroutine[None, None, GetTokenHoldersResponse]\n</code></pre> <pre><code>_get_token_holders(\n    sync: bool,\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n    amount_from: int | None = None,\n    amount_to: int | None = None,\n) -&gt; (\n    GetTokenHoldersResponse\n    | Coroutine[None, None, GetTokenHoldersResponse]\n)\n</code></pre> <p>This function refers to the GET Token Holders of V1 API endpoint,  and it is used to get token holders of a token.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str</code> <p>The token address.</p> required <code>limit</code> <code>int</code> <p>The number of transactions to get; maximum is 50.</p> <code>10</code> <code>offset</code> <code>int | None</code> <p>The offset of the transactions.</p> <code>None</code> <code>amount_from</code> <code>int | None</code> <p>The minimum amount of the token.</p> <code>None</code> <code>amount_to</code> <code>int | None</code> <p>The maximum amount of the token</p> <code>None</code> <p>Returns:</p> Type Description <code>GetTokenHoldersResponse | Coroutine[None, None, GetTokenHoldersResponse]</code> <p>List of token holders of the token.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_token_holders(\n    self,\n    sync: bool,\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n    amount_from: int | None = None,\n    amount_to: int | None = None\n) -&gt; GetTokenHoldersResponse | Coroutine[None, None, GetTokenHoldersResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Holders](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-holders)** of **V1** API endpoint, \n        and it is used to get token holders of a token.\n\n        Parameters:\n            token: The token address.\n            limit: The number of transactions to get; maximum is 50.\n            offset: The offset of the transactions.\n            amount_from: The minimum amount of the token.\n            amount_to: The maximum amount of the token\n\n        Returns:\n            List of token holders of the token.\n    \"\"\"\n    # set params\n    url = self.base_url + \"token/holders\"\n    api_params = {\n        \"tokenAddress\": token,\n        \"limit\": limit,\n        \"offset\": offset,\n        \"fromAmount\": amount_from,\n        \"toAmount\": amount_to\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenHoldersResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_token_meta","title":"_get_token_meta","text":"<pre><code>_get_token_meta(\n    sync: Literal[True], token: str\n) -&gt; GetTokenMetaResponse\n</code></pre><pre><code>_get_token_meta(\n    sync: Literal[False], token: str\n) -&gt; Coroutine[None, None, GetTokenMetaResponse]\n</code></pre> <pre><code>_get_token_meta(\n    sync: bool, token: str\n) -&gt; (\n    GetTokenMetaResponse\n    | Coroutine[None, None, GetTokenMetaResponse]\n)\n</code></pre> <p>This function refers to the GET Token Meta of V1 API endpoint,  and it is used to get meta of a token.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str</code> <p>The token address.</p> required <p>Returns:</p> Type Description <code>GetTokenMetaResponse | Coroutine[None, None, GetTokenMetaResponse]</code> <p>Meta of the token.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_token_meta(self, sync: bool, token: str) -&gt; GetTokenMetaResponse | Coroutine[None, None, GetTokenMetaResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Meta](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-meta)** of **V1** API endpoint, \n        and it is used to get meta of a token.\n\n        Parameters:\n            token: The token address.\n\n        Returns:\n            Meta of the token.\n    \"\"\"\n    # set params\n    url = self.base_url + \"token/meta\"\n    api_params = {\n        \"tokenAddress\": token\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenMetaResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_token_transfer","title":"_get_token_transfer","text":"<pre><code>_get_token_transfer(\n    sync: Literal[True],\n    token: str,\n    account: str | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetTokenTransferResponse\n</code></pre><pre><code>_get_token_transfer(\n    sync: Literal[False],\n    token: str,\n    account: str | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; Coroutine[None, None, GetTokenTransferResponse]\n</code></pre> <pre><code>_get_token_transfer(\n    sync: bool,\n    token: str,\n    account: str | None = None,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; (\n    GetTokenTransferResponse\n    | Coroutine[None, None, GetTokenTransferResponse]\n)\n</code></pre> <p>This function refers to the GET Token Transfer of V1 API endpoint,  and it is used to get token transfers of a token.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str</code> <p>The token address.</p> required <code>account</code> <code>str | None</code> <p>The account address to filter for.</p> <code>None</code> <code>limit</code> <code>int</code> <p>The number of transactions to get; maximum is 50.</p> <code>10</code> <code>offset</code> <code>int | None</code> <p>The offset of the transactions.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetTokenTransferResponse | Coroutine[None, None, GetTokenTransferResponse]</code> <p>List of token transfers of the token.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_token_transfer(\n    self,\n    sync: bool,\n    token: str,\n    account: str | None = None,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetTokenTransferResponse | Coroutine[None, None, GetTokenTransferResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Transfer](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-transfer)** of **V1** API endpoint, \n        and it is used to get token transfers of a token.\n\n        Parameters:\n            token: The token address.\n            account: The account address to filter for.\n            limit: The number of transactions to get; maximum is 50.\n            offset: The offset of the transactions.\n\n        Returns:\n            List of token transfers of the token.\n    \"\"\"\n    # set params\n    url = self.base_url + \"token/transfer\"\n    api_params = {\n        \"tokenAddress\": token,\n        \"address\": account,\n        \"limit\": limit,\n        \"offset\": offset\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenTransferResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_token_list","title":"_get_token_list","text":"<pre><code>_get_token_list(\n    sync: Literal[True],\n    sort_by: str = SolscanSort.MARKET_CAP.value,\n    order_by: str = SolscanOrder.DESCENDING.value,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetTokenListResponse\n</code></pre><pre><code>_get_token_list(\n    sync: Literal[False],\n    sort_by: str = SolscanSort.MARKET_CAP.value,\n    order_by: str = SolscanOrder.DESCENDING.value,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; Coroutine[None, None, GetTokenListResponse]\n</code></pre> <pre><code>_get_token_list(\n    sync: bool,\n    sort_by: str = SolscanSort.MARKET_CAP.value,\n    order_by: str = SolscanOrder.DESCENDING.value,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; (\n    GetTokenListResponse\n    | Coroutine[None, None, GetTokenListResponse]\n)\n</code></pre> <p>This function refers to the GET Token List of V1 API endpoint,  and it is used to get list of tokens according to Solscan, with additional token's information.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The number of transactions to get; maximum is 50.</p> <code>10</code> <code>offset</code> <code>int | None</code> <p>The offset of the transactions.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetTokenListResponse | Coroutine[None, None, GetTokenListResponse]</code> <p>List of tokens.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_token_list(\n    self,\n    sync: bool,\n    sort_by: str = SolscanSort.MARKET_CAP.value,\n    order_by: str = SolscanOrder.DESCENDING.value,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetTokenListResponse | Coroutine[None, None, GetTokenListResponse]:\n    \"\"\"\n        This function refers to the GET **[Token List](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/token-list)** of **V1** API endpoint, \n        and it is used to get list of tokens according to Solscan, with additional token's information.\n\n        Parameters:\n            limit: The number of transactions to get; maximum is 50.\n            offset: The offset of the transactions.\n\n        Returns:\n            List of tokens.\n    \"\"\"\n    # set params\n    url = self.base_url + \"token/list\"\n    api_params = {\n        \"sortBy\": sort_by,\n        \"direction\": order_by,\n        \"limit\": limit,\n        \"offset\": offset\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenListResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_market_token_detail","title":"_get_market_token_detail","text":"<pre><code>_get_market_token_detail(\n    sync: Literal[True],\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetMarketTokenDetailResponse\n</code></pre><pre><code>_get_market_token_detail(\n    sync: Literal[False],\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; Coroutine[None, None, GetMarketTokenDetailResponse]\n</code></pre> <pre><code>_get_market_token_detail(\n    sync: bool,\n    token: str,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; (\n    GetMarketTokenDetailResponse\n    | Coroutine[None, None, GetMarketTokenDetailResponse]\n)\n</code></pre> <p>This function refers to the GET Market Token Detail of V1 API endpoint,  and it is used to get market details of a token.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str</code> <p>The token address.</p> required <code>limit</code> <code>int</code> <p>The number of transactions to get; maximum is 50.</p> <code>10</code> <code>offset</code> <code>int | None</code> <p>The offset of the transactions.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetMarketTokenDetailResponse | Coroutine[None, None, GetMarketTokenDetailResponse]</code> <p>Market details of the token.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_market_token_detail(self, sync: bool, token: str, limit: int = 10, offset: int | None = None) -&gt; GetMarketTokenDetailResponse | Coroutine[None, None, GetMarketTokenDetailResponse]:\n    \"\"\"\n        This function refers to the GET **[Market Token Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/market-token-detail)** of **V1** API endpoint, \n        and it is used to get market details of a token.\n\n        Parameters:\n            token: The token address.\n            limit: The number of transactions to get; maximum is 50.\n            offset: The offset of the transactions.\n\n        Returns:\n            Market details of the token.\n    \"\"\"\n    # set params\n    url = self.base_url + f\"market/token/{token}\"\n    api_params = {\n        \"limit\": limit,\n        \"offset\": offset\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetMarketTokenDetailResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_transaction_last","title":"_get_transaction_last","text":"<pre><code>_get_transaction_last(\n    sync: Literal[True], limit: int = 10\n) -&gt; GetTransactionLastResponse\n</code></pre><pre><code>_get_transaction_last(\n    sync: Literal[False], limit: int = 10\n) -&gt; Coroutine[None, None, GetTransactionLastResponse]\n</code></pre> <pre><code>_get_transaction_last(\n    sync: bool, limit: int = 10\n) -&gt; (\n    GetTransactionLastResponse\n    | Coroutine[None, None, GetTransactionLastResponse]\n)\n</code></pre> <p>This function refers to the GET Transaction Last of V1 API endpoint,  and it is used to get last transactions.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The number of transactions to get; maximum is 20.</p> <code>10</code> <p>Returns:</p> Type Description <code>GetTransactionLastResponse | Coroutine[None, None, GetTransactionLastResponse]</code> <p>Last transactions.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_transaction_last(self, sync: bool, limit: int = 10) -&gt; GetTransactionLastResponse | Coroutine[None, None, GetTransactionLastResponse]:\n    \"\"\"\n        This function refers to the GET **[Transaction Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/transaction-last)** of **V1** API endpoint, \n        and it is used to get last transactions.\n\n        Parameters:\n            limit: The number of transactions to get; maximum is 20.\n\n        Returns:\n            Last transactions.\n    \"\"\"\n    # set params\n    url = self.base_url + \"transaction/last\"\n    api_params = {\n        \"limit\": limit\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetTransactionLastResponse(data = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetTransactionLastResponse(data = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_transaction_detail","title":"_get_transaction_detail","text":"<pre><code>_get_transaction_detail(\n    sync: Literal[True], transaction_id: str\n) -&gt; GetTransactionDetailResponse\n</code></pre><pre><code>_get_transaction_detail(\n    sync: Literal[False], transaction_id: str\n) -&gt; Coroutine[None, None, GetTransactionDetailResponse]\n</code></pre> <pre><code>_get_transaction_detail(\n    sync: bool, transaction_id: str\n) -&gt; (\n    GetTransactionDetailResponse\n    | Coroutine[None, None, GetTransactionDetailResponse]\n)\n</code></pre> <p>This function refers to the GET Transaction Detail of V1 API endpoint,  and it is used to get detail of a transaction.</p> <p>Parameters:</p> Name Type Description Default <code>transaction_id</code> <code>str</code> <p>The transaction hash.</p> required <p>Returns:</p> Type Description <code>GetTransactionDetailResponse | Coroutine[None, None, GetTransactionDetailResponse]</code> <p>Detail of the transaction.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_transaction_detail(self, sync: bool, transaction_id: str) -&gt; GetTransactionDetailResponse | Coroutine[None, None, GetTransactionDetailResponse]:\n    \"\"\"\n        This function refers to the GET **[Transaction Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/transaction-detail)** of **V1** API endpoint, \n        and it is used to get detail of a transaction.\n\n        Parameters:\n            transaction_id: The transaction hash.\n\n        Returns:\n            Detail of the transaction.\n    \"\"\"\n    # set params\n    url = self.base_url + f\"transaction/{transaction_id}\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTransactionDetailResponse\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_block_last","title":"_get_block_last","text":"<pre><code>_get_block_last(\n    sync: Literal[True], limit: int = 10\n) -&gt; GetBlockLastResponse\n</code></pre><pre><code>_get_block_last(\n    sync: Literal[False], limit: int = 10\n) -&gt; Coroutine[None, None, GetBlockLastResponse]\n</code></pre> <pre><code>_get_block_last(\n    sync: bool, limit: int = 10\n) -&gt; (\n    GetBlockLastResponse\n    | Coroutine[None, None, GetBlockLastResponse]\n)\n</code></pre> <p>This function refers to the GET Block Last of V1 API endpoint,  and it is used to get last block.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The number of blocks to get; maximum is 20.</p> <code>10</code> <p>Returns:</p> Type Description <code>GetBlockLastResponse | Coroutine[None, None, GetBlockLastResponse]</code> <p>Last block.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_block_last(self, sync: bool, limit: int = 10) -&gt; GetBlockLastResponse | Coroutine[None, None, GetBlockLastResponse]:\n    \"\"\"\n        This function refers to the GET **[Block Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/block-last)** of **V1** API endpoint, \n        and it is used to get last block.\n\n        Parameters:\n            limit: The number of blocks to get; maximum is 20.\n\n        Returns:\n            Last block.\n    \"\"\"\n    # set params\n    url = self.base_url + \"block/last\"\n    api_params = {\n        \"limit\": limit\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetBlockLastResponse(data = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetBlockLastResponse(data = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_block_detail","title":"_get_block_detail","text":"<pre><code>_get_block_detail(\n    sync: Literal[True], block_id: int\n) -&gt; GetBlockDetailResponse\n</code></pre><pre><code>_get_block_detail(\n    sync: Literal[False], block_id: int\n) -&gt; Coroutine[None, None, GetBlockDetailResponse]\n</code></pre> <pre><code>_get_block_detail(\n    sync: bool, block_id: int\n) -&gt; (\n    GetBlockDetailResponse\n    | Coroutine[None, None, GetBlockDetailResponse]\n)\n</code></pre> <p>This function refers to the GET Block Detail of V1 API endpoint,  and it is used to get detail of a block.</p> <p>Parameters:</p> Name Type Description Default <code>block_id</code> <code>int</code> <p>The block number.</p> required <p>Returns:</p> Type Description <code>GetBlockDetailResponse | Coroutine[None, None, GetBlockDetailResponse]</code> <p>Detail of the block.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_block_detail(self, sync: bool, block_id: int) -&gt; GetBlockDetailResponse | Coroutine[None, None, GetBlockDetailResponse]:\n    \"\"\"\n        This function refers to the GET **[Block Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/block-detail)** of **V1** API endpoint, \n        and it is used to get detail of a block.\n\n        Parameters:\n            block_id: The block number.\n\n        Returns:\n            Detail of the block.\n    \"\"\"\n    # set params\n    url = self.base_url + f\"block/{block_id}\"\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetBlockDetailResponse\n    )\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._get_block_transactions","title":"_get_block_transactions","text":"<pre><code>_get_block_transactions(\n    sync: Literal[True],\n    block_id: int,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; GetBlockTransactionsResponse\n</code></pre><pre><code>_get_block_transactions(\n    sync: Literal[False],\n    block_id: int,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; Coroutine[None, None, GetBlockTransactionsResponse]\n</code></pre> <pre><code>_get_block_transactions(\n    sync: bool,\n    block_id: int,\n    limit: int = 10,\n    offset: int | None = None,\n) -&gt; (\n    GetBlockTransactionsResponse\n    | Coroutine[None, None, GetBlockTransactionsResponse]\n)\n</code></pre> <p>This function refers to the GET Block Transactions of V1 API endpoint,  and it is used to get transactions of a block.</p> <p>Parameters:</p> Name Type Description Default <code>block_id</code> <code>int</code> <p>The block number.</p> required <code>limit</code> <code>int</code> <p>The number of transactions to get; maximum is 50.</p> <code>10</code> <code>offset</code> <code>int | None</code> <p>The offset of the transactions.</p> <code>None</code> <p>Returns:</p> Type Description <code>GetBlockTransactionsResponse | Coroutine[None, None, GetBlockTransactionsResponse]</code> <p>List of transactions of the block.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _get_block_transactions(\n    self,\n    sync: bool,\n    block_id: int,\n    limit: int = 10,\n    offset: int | None = None\n) -&gt; GetBlockTransactionsResponse | Coroutine[None, None, GetBlockTransactionsResponse]:\n    \"\"\"\n        This function refers to the GET **[Block Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/block-transactions)** of **V1** API endpoint, \n        and it is used to get transactions of a block.\n\n        Parameters:\n            block_id: The block number.\n            limit: The number of transactions to get; maximum is 50.\n            offset: The offset of the transactions.\n\n        Returns:\n            List of transactions of the block.\n    \"\"\"\n    # set params\n    url = self.base_url + \"block/transactions\"\n    api_params = {\n        \"block\": block_id,\n        \"limit\": limit,\n        \"offset\": offset\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetBlockTransactionsResponse(transactions = content_raw.json())\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetBlockTransactionsResponse(transactions = content_raw.json())\n        return async_request()\n</code></pre>"},{"location":"interactions/solscan/v1/interaction.html#cyhole.solscan.v1.Solscan._raise","title":"_raise","text":"<pre><code>_raise(exception: HTTPError) -&gt; SolscanException\n</code></pre> <p>Internal function used to raise the manage  the exceptions raised by the API.</p> <p>Parameters:</p> Name Type Description Default <code>exception</code> <code>HTTPError</code> <p>the HTTP error returned from Solscan API.</p> required <p>Raises:</p> Type Description <code>SolscanException</code> <p>general exception raised when an unknown error is found.</p> Source code in <code>src/cyhole/solscan/v1/interaction.py</code> <pre><code>def _raise(self, exception: HTTPError) -&gt; SolscanException:\n    \"\"\"\n        Internal function used to raise the manage \n        the exceptions raised by the API.\n\n        Parameters:\n            exception: the HTTP error returned from Solscan API.\n\n        Raises:\n            SolscanException: general exception raised when an unknown error is found.\n    \"\"\"\n    try:\n        error = SolscanHTTPError(**exception.response.json())\n        return SolscanException(f\"Code: {error.status}, Message: {error.error.message}\")\n    except Exception:\n        return SolscanException(exception.response.content.decode())\n</code></pre>"},{"location":"interactions/solscan/v1/param.html","title":"Parameters","text":""},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param","title":"cyhole.solscan.v1.param","text":""},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanExportType","title":"SolscanExportType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's exporting types.</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanExportType.TOKEN_CHANGE","title":"TOKEN_CHANGE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TOKEN_CHANGE = 'tokenchange'\n</code></pre> <p>Export only token changes.</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanExportType.SOL_TRANSFER","title":"SOL_TRANSFER  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SOL_TRANSFER = 'soltransfer'\n</code></pre> <p>Export only Solana transfers.</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanExportType.ALL","title":"ALL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ALL = 'all'\n</code></pre> <p>Export all types of transactions.</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort","title":"SolscanSort","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's sorting types.</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.MARKET_CAP","title":"MARKET_CAP  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MARKET_CAP = 'market_cap'\n</code></pre> <p>Sort the results by Market Cap (MC)</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.VOLUME","title":"VOLUME  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>VOLUME = 'volume'\n</code></pre> <p>Sort the results by USD Volume in the last 24h</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.HOLDER","title":"HOLDER  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HOLDER = 'holder'\n</code></pre> <p>Sort the results by the number of holders</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.PRICE","title":"PRICE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PRICE = 'price'\n</code></pre> <p>Sort the results by the price</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.PRICE_CHANGE_24H","title":"PRICE_CHANGE_24H  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PRICE_CHANGE_24H = 'price_change_24h'\n</code></pre> <p>Sort the results by percent changing in the last 24h</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.PRICE_CHANGE_7D","title":"PRICE_CHANGE_7D  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PRICE_CHANGE_7D = 'price_change_7d'\n</code></pre> <p>Sort the results by percent changing in the last 7d</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.PRICE_CHANGE_14D","title":"PRICE_CHANGE_14D  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PRICE_CHANGE_14D = 'price_change_14d'\n</code></pre> <p>Sort the results by percent changing in the last 14d</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.PRICE_CHANGE_30D","title":"PRICE_CHANGE_30D  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PRICE_CHANGE_30D = 'price_change_30d'\n</code></pre> <p>Sort the results by percent changing in the last 30d</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.PRICE_CHANGE_60D","title":"PRICE_CHANGE_60D  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PRICE_CHANGE_60D = 'price_change_60d'\n</code></pre> <p>Sort the results by percent changing in the last 60d</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.PRICE_CHANGE_200D","title":"PRICE_CHANGE_200D  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PRICE_CHANGE_200D = 'price_change_200d'\n</code></pre> <p>Sort the results by percent changing in the last 200d</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanSort.PRICE_CHANGE_1Y","title":"PRICE_CHANGE_1Y  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PRICE_CHANGE_1Y = 'price_change_1y'\n</code></pre> <p>Sort the results by percent changing in the last 1y</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanOrder","title":"SolscanOrder","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's orders.</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanOrder.ASCENDING","title":"ASCENDING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ASCENDING = 'asc'\n</code></pre> <p>Ascending sort order.</p>"},{"location":"interactions/solscan/v1/param.html#cyhole.solscan.v1.param.SolscanOrder.DESCENDING","title":"DESCENDING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DESCENDING = 'desc'\n</code></pre> <p>Descending sort order.</p>"},{"location":"interactions/solscan/v1/schema.html","title":"Response Schema","text":""},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema","title":"cyhole.solscan.v1.schema","text":""},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.SolscanError","title":"SolscanError","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.SolscanError.message","title":"message  <code>instance-attribute</code>","text":"<pre><code>message: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.SolscanHTTPError","title":"SolscanHTTPError","text":"<p>               Bases: <code>BaseModel</code></p> <p>Solscan API returns an error schema on failed request  that can be used to investigated the error. This schema  is used to strandardise the HTTPErrors.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.SolscanHTTPError.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.SolscanHTTPError.error","title":"error  <code>instance-attribute</code>","text":"<pre><code>error: SolscanError\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensTokenAmount","title":"GetAccountTokensTokenAmount","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a token amount inside the response of GET Account Tokens of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensTokenAmount.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensTokenAmount.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensTokenAmount.ui_amount","title":"ui_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_amount: float | None = Field(\n    default=None, alias=\"uiAmount\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensTokenAmount.ui_amount_string","title":"ui_amount_string  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_amount_string: str = Field(alias='uiAmountString')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken","title":"GetAccountTokensToken","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a token inside the response of GET Account Tokens of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken.token_account","title":"token_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_account: str = Field(alias='tokenAccount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str = Field(alias='tokenAddress')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken.token_symbol","title":"token_symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_symbol: str | None = Field(\n    default=None, alias=\"tokenSymbol\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken.token_name","title":"token_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_name: str | None = Field(\n    default=None, alias=\"tokenName\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken.token_icon","title":"token_icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_icon: str | None = Field(\n    default=None, alias=\"tokenIcon\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken.token_amount","title":"token_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_amount: GetAccountTokensTokenAmount = Field(\n    alias=\"tokenAmount\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken.rent_epoch","title":"rent_epoch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rent_epoch: int = Field(alias='rentEpoch')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensToken.lamports","title":"lamports  <code>instance-attribute</code>","text":"<pre><code>lamports: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensResponse","title":"GetAccountTokensResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Account Tokens of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTokensResponse.tokens","title":"tokens  <code>instance-attribute</code>","text":"<pre><code>tokens: list[GetAccountTokensToken]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransactionInstruction","title":"GetAccountTransactionsTransactionInstruction","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of an instruction inside the response of GET Account Transactions of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransactionInstruction.program_id","title":"program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program_id: str = Field(alias='programId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransactionInstruction.program","title":"program  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransactionInstruction.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction","title":"GetAccountTransactionsTransaction","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a transaction inside the response of GET Account Transactions of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='blockTime')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='txHash')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction.lamport","title":"lamport  <code>instance-attribute</code>","text":"<pre><code>lamport: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction.signer","title":"signer  <code>instance-attribute</code>","text":"<pre><code>signer: list[str]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction.include_spl_transfer","title":"include_spl_transfer  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>include_spl_transfer: bool | None = Field(\n    default=None, alias=\"includeSPLTransfer\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsTransaction.parsed_instruction","title":"parsed_instruction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>parsed_instruction: list[\n    GetAccountTransactionsTransactionInstruction\n] = Field(alias=\"parsedInstruction\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsResponse","title":"GetAccountTransactionsResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Account Transactions of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountTransactionsResponse.transactions","title":"transactions  <code>instance-attribute</code>","text":"<pre><code>transactions: list[GetAccountTransactionsTransaction]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount","title":"GetAccountStakeAccountsStakeAccount","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a stake account inside the response of GET Account StakeAccounts of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.active_stake_amount","title":"active_stake_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>active_stake_amount: int = Field(alias='activeStakeAmount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.delegated_stake_amount","title":"delegated_stake_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>delegated_stake_amount: int = Field(\n    alias=\"delegatedStakeAmount\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.role","title":"role  <code>instance-attribute</code>","text":"<pre><code>role: list[str]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.sol_balance","title":"sol_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sol_balance: int = Field(alias='solBalance')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.total_reward","title":"total_reward  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_reward: str = Field(alias='totalReward')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.stake_account","title":"stake_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stake_account: str = Field(alias='stakeAccount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.voter","title":"voter  <code>instance-attribute</code>","text":"<pre><code>voter: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.activation_epoch","title":"activation_epoch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>activation_epoch: int = Field(alias='activationEpoch')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsStakeAccount.stake_type","title":"stake_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stake_type: str = Field(alias='stakeType')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsResponse","title":"GetAccountStakeAccountsResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Account StakeAccounts of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountStakeAccountsResponse.stake_accounts","title":"stake_accounts  <code>instance-attribute</code>","text":"<pre><code>stake_accounts: dict[\n    str, GetAccountStakeAccountsStakeAccount\n]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer","title":"GetAccountSplTransfersTransfer","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a transfer inside the response of GET Account SplTransfers of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='blockTime')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.signature","title":"signature  <code>instance-attribute</code>","text":"<pre><code>signature: list[str]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.change_type","title":"change_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_type: str = Field(alias='changeType')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.change_amount","title":"change_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>change_amount: str = Field(alias='changeAmount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.post_balance","title":"post_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>post_balance: str = Field(alias='postBalance')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.pre_balance","title":"pre_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pre_balance: str = Field(alias='preBalance')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str = Field(alias='tokenAddress')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersTransfer.token_name","title":"token_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_name: str = Field(alias='tokenName')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersResponse","title":"GetAccountSplTransfersResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Account SplTransfers of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersResponse.total","title":"total  <code>instance-attribute</code>","text":"<pre><code>total: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSplTransfersResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountSplTransfersTransfer]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer","title":"GetAccountSolTransfersTransfer","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a transfer inside the response of GET Account SolTransfers of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='blockTime')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='txHash')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer.source_account","title":"source_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_account: str = Field(alias='src')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer.destination_account","title":"destination_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination_account: str = Field(alias='dst')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer.lamport","title":"lamport  <code>instance-attribute</code>","text":"<pre><code>lamport: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersTransfer.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersResponse","title":"GetAccountSolTransfersResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Account SolTransfers of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountSolTransfersResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountSolTransfersTransfer]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountExportTransactionsResponse","title":"GetAccountExportTransactionsResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Account ExportTransactions of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountExportTransactionsResponse.csv","title":"csv  <code>instance-attribute</code>","text":"<pre><code>csv: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountExportRewardsResponse","title":"GetAccountExportRewardsResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Account ExportRewards of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountExportRewardsResponse.csv","title":"csv  <code>instance-attribute</code>","text":"<pre><code>csv: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountDetailResponse","title":"GetAccountDetailResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Account Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountDetailResponse.lamports","title":"lamports  <code>instance-attribute</code>","text":"<pre><code>lamports: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountDetailResponse.owner_program","title":"owner_program  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>owner_program: str = Field(alias='ownerProgram')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountDetailResponse.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountDetailResponse.rent_epoch","title":"rent_epoch  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rent_epoch: int = Field(alias='rentEpoch')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountDetailResponse.executable","title":"executable  <code>instance-attribute</code>","text":"<pre><code>executable: bool\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetAccountDetailResponse.account","title":"account  <code>instance-attribute</code>","text":"<pre><code>account: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenHoldersHolder","title":"GetTokenHoldersHolder","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a holder inside the response of GET Token Holders of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenHoldersHolder.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenHoldersHolder.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenHoldersHolder.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenHoldersHolder.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenHoldersHolder.rank","title":"rank  <code>instance-attribute</code>","text":"<pre><code>rank: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenHoldersResponse","title":"GetTokenHoldersResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Token Holders of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenHoldersResponse.total","title":"total  <code>instance-attribute</code>","text":"<pre><code>total: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenHoldersResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTokenHoldersHolder]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse","title":"GetTokenMetaResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Token Meta of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.icon","title":"icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icon: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.volume","title":"volume  <code>instance-attribute</code>","text":"<pre><code>volume: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.token_authority","title":"token_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_authority: str | None = Field(\n    default=None, alias=\"tokenAuthority\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.supply","title":"supply  <code>instance-attribute</code>","text":"<pre><code>supply: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenMetaResponse.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransferTokenInfo","title":"GetTokenTransferTransferTokenInfo","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a token info inside the response of GET Token Transfer of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransferTokenInfo.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransferTokenInfo.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransferTokenInfo.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransferTokenInfo.icon","title":"icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icon: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransferTokenInfo.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer","title":"GetTokenTransferTransfer","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a transfer inside the response of GET Token Transfer of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='blockTime')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='txHash')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.common_type","title":"common_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>common_type: str = Field(alias='commonType')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.source_owner_account","title":"source_owner_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_owner_account: str = Field(\n    alias=\"sourceOwnerAccount\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.source_token_account","title":"source_token_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_token_account: str = Field(\n    alias=\"sourceTokenAccount\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.destination_owner_account","title":"destination_owner_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination_owner_account: str = Field(\n    alias=\"destOwnerAccount\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.destination_token_account","title":"destination_token_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination_token_account: str = Field(\n    alias=\"destTokenAccount\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str = Field(alias='tokenAddress')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferTransfer.token_info","title":"token_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_info: GetTokenTransferTransferTokenInfo = Field(\n    alias=\"tokenInfo\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferResponse","title":"GetTokenTransferResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Token Transfer of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferResponse.total","title":"total  <code>instance-attribute</code>","text":"<pre><code>total: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenTransferResponse.items","title":"items  <code>instance-attribute</code>","text":"<pre><code>items: list[GetTokenTransferTransfer]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenSupply","title":"GetTokenListTokenSupply","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a token supply inside the response of GET Token List of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenSupply.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenSupply.ui_amount","title":"ui_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_amount: float = Field(alias='uiAmount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenSupply.ui_amount_string","title":"ui_amount_string  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_amount_string: str = Field(alias='uiAmountString')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions","title":"GetTokenListTokenExtensions","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of token extensions inside the response of GET Token List of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.coingecko_id","title":"coingecko_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>coingecko_id: str | None = Field(\n    default=None, alias=\"coingeckoId\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.discord","title":"discord  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>discord: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.medium","title":"medium  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>medium: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.telegram","title":"telegram  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>telegram: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.twitter","title":"twitter  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>twitter: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.website","title":"website  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>website: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.description","title":"description  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>description: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.coin_marketcap_id","title":"coin_marketcap_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>coin_marketcap_id: str | None = Field(\n    default=None, alias=\"coinMarketCapId\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.serum_v3_usdc","title":"serum_v3_usdc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>serum_v3_usdc: str | None = Field(\n    default=None, alias=\"serumV3Usdc\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenExtensions.serum_v3_usdt","title":"serum_v3_usdt  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>serum_v3_usdt: str | None = Field(\n    default=None, alias=\"serumV3Usdt\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData","title":"GetTokenListTokenCoingeckoInfoMarketData","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of token coingecko info market data inside the response of GET Token List of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.current_price","title":"current_price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>current_price: float = Field(alias='currentPrice')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.all_time_high","title":"all_time_high  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>all_time_high: float = Field(alias='ath')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.all_time_high_change_percentage","title":"all_time_high_change_percentage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>all_time_high_change_percentage: float = Field(\n    alias=\"athChangePercentage\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.all_time_high_date","title":"all_time_high_date  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>all_time_high_date: datetime = Field(alias='athDate')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.all_time_low","title":"all_time_low  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>all_time_low: float = Field(alias='atl')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.all_time_low_change_percentage","title":"all_time_low_change_percentage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>all_time_low_change_percentage: float = Field(\n    alias=\"atlChangePercentage\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.all_time_low_date","title":"all_time_low_date  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>all_time_low_date: datetime = Field(alias='atlDate')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.market_cap","title":"market_cap  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap: int = Field(alias='marketCap')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.market_cap_rank","title":"market_cap_rank  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap_rank: int = Field(alias='marketCapRank')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.fully_diluted_valuation","title":"fully_diluted_valuation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fully_diluted_valuation: int = Field(\n    alias=\"fullyDilutedValuation\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.total_volume","title":"total_volume  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_volume: float = Field(alias='totalVolume')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_high_24h","title":"price_high_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_high_24h: float = Field(alias='priceHigh24h')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_low_24h","title":"price_low_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_low_24h: float = Field(alias='priceLow24h')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_change_24h","title":"price_change_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_24h: float = Field(alias='priceChange24h')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_change_percentage_24h","title":"price_change_percentage_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_percentage_24h: float = Field(\n    alias=\"priceChangePercentage24h\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_change_percentage_7d","title":"price_change_percentage_7d  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_percentage_7d: float | None = Field(\n    default=None, alias=\"priceChangePercentage7d\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_change_percentage_14d","title":"price_change_percentage_14d  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_percentage_14d: float | None = Field(\n    default=None, alias=\"priceChangePercentage14d\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_change_percentage_30d","title":"price_change_percentage_30d  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_percentage_30d: float | None = Field(\n    default=None, alias=\"priceChangePercentage30d\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_change_percentage_60d","title":"price_change_percentage_60d  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_percentage_60d: float | None = Field(\n    default=None, alias=\"priceChangePercentage60d\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_change_percentage_200d","title":"price_change_percentage_200d  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_percentage_200d: float | None = Field(\n    default=None, alias=\"priceChangePercentage200d\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.price_change_percentage_1y","title":"price_change_percentage_1y  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_percentage_1y: float | None = Field(\n    default=None, alias=\"priceChangePercentage1y\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.market_cap_change_24h","title":"market_cap_change_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap_change_24h: float = Field(\n    alias=\"marketCapChange24h\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.market_cap_change_percentage_24h","title":"market_cap_change_percentage_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap_change_percentage_24h: float = Field(\n    alias=\"marketCapChangePercentage24h\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.total_supply","title":"total_supply  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_supply: float = Field(alias='totalSupply')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.max_supply","title":"max_supply  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>max_supply: float | None = Field(\n    default=None, alias=\"maxSupply\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.circulating_supply","title":"circulating_supply  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>circulating_supply: float = Field(alias=\"circulatingSupply\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.last_updated","title":"last_updated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last_updated: datetime = Field(alias='lastUpdated')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfoMarketData.parse_datetime","title":"parse_datetime","text":"<pre><code>parse_datetime(datetime_raw: str | datetime) -&gt; datetime\n</code></pre> Source code in <code>src/cyhole/solscan/v1/schema.py</code> <pre><code>@field_validator(\"all_time_high_date\", \"all_time_low_date\", \"last_updated\")\ndef parse_datetime(cls, datetime_raw: str | datetime) -&gt; datetime:\n    if isinstance(datetime_raw, str):\n        return datetime.strptime(datetime_raw, \"%Y-%m-%dT%H:%M:%S\")\n    return datetime_raw\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfo","title":"GetTokenListTokenCoingeckoInfo","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of token coingecko info inside the response of GET Token List of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfo.coingecko_rank","title":"coingecko_rank  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>coingecko_rank: int = Field(alias='coingeckoRank')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfo.market_cap_rank","title":"market_cap_rank  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap_rank: int = Field(alias='marketCapRank')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListTokenCoingeckoInfo.market_data","title":"market_data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_data: GetTokenListTokenCoingeckoInfoMarketData = (\n    Field(alias=\"marketData\")\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken","title":"GetTokenListToken","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a token inside the response of GET Token List of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.coingecko_info","title":"coingecko_info  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>coingecko_info: GetTokenListTokenCoingeckoInfo | None = (\n    Field(default=None, alias=\"coingeckoInfo\")\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.extensions","title":"extensions  <code>instance-attribute</code>","text":"<pre><code>extensions: GetTokenListTokenExtensions\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.holder","title":"holder  <code>instance-attribute</code>","text":"<pre><code>holder: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.icon","title":"icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icon: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.is_violate","title":"is_violate  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_violate: bool | None = Field(\n    default=None, alias=\"isViolate\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.market_cap_fd","title":"market_cap_fd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap_fd: float | None = Field(\n    default=None, alias=\"marketCapFD\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.market_cap_rank","title":"market_cap_rank  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap_rank: int | None = Field(\n    default=None, alias=\"marketCapRank\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.mint_address","title":"mint_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_address: str = Field(alias='mintAddress')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.price_ust","title":"price_ust  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_ust: float | None = Field(\n    default=None, alias=\"priceUst\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.sol_alpha_volume","title":"sol_alpha_volume  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sol_alpha_volume: float | None = Field(\n    default=None, alias=\"solAlphaVolume\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.tags","title":"tags  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tags: list[str] | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str | None = Field(default=None, alias='tokenName')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = Field(\n    default=None, alias=\"tokenSymbol\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.reputation","title":"reputation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reputation: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.twitter","title":"twitter  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>twitter: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.website","title":"website  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>website: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.on_chain_extensions","title":"on_chain_extensions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>on_chain_extensions: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.supply","title":"supply  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>supply: GetTokenListTokenSupply | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListToken.chain_id","title":"chain_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>chain_id: int | None = Field(default=None, alias='chainId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListResponse","title":"GetTokenListResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Token List of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListResponse.total","title":"total  <code>instance-attribute</code>","text":"<pre><code>total: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTokenListResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTokenListToken]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarketBaseQuote","title":"GetMarketTokenDetailMarketBaseQuote","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a base or quote inside the response of GET Market Token Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarketBaseQuote.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarketBaseQuote.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarketBaseQuote.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket","title":"GetMarketTokenDetailMarket","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of a market inside the response of GET Market Token Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket.amm_id","title":"amm_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amm_id: str = Field(alias='ammId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket.base","title":"base  <code>instance-attribute</code>","text":"<pre><code>base: GetMarketTokenDetailMarketBaseQuote\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket.base_token_account","title":"base_token_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>base_token_account: str = Field(alias='baseTokenAccount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket.quote","title":"quote  <code>instance-attribute</code>","text":"<pre><code>quote: GetMarketTokenDetailMarketBaseQuote\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket.quote_token_account","title":"quote_token_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quote_token_account: str = Field(alias='quoteTokenAccount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailMarket.volume_24h","title":"volume_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_24h: int = Field(alias='volume24h')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailResponse","title":"GetMarketTokenDetailResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Market Token Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailResponse.price_usdt","title":"price_usdt  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_usdt: float = Field(alias='priceUsdt')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailResponse.volume_usdt","title":"volume_usdt  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volume_usdt: int = Field(alias='volumeUsdt')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailResponse.market_cap_fd","title":"market_cap_fd  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap_fd: int = Field(alias='marketCapFD')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailResponse.market_cap_rank","title":"market_cap_rank  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap_rank: int = Field(alias='marketCapRank')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailResponse.price_change_24h","title":"price_change_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_change_24h: float = Field(alias='priceChange24h')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetMarketTokenDetailResponse.markets","title":"markets  <code>instance-attribute</code>","text":"<pre><code>markets: list[GetMarketTokenDetailMarket]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenAmount","title":"GetTransactionLastInstructionSplTokenAmount","text":"<p>               Bases: <code>GetAccountTokensTokenAmount</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsedInfo","title":"GetTransactionLastInstructionSplTokenParsedInfo","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsedInfo.authority","title":"authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>authority: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsedInfo.account","title":"account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsedInfo.mint","title":"mint  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsedInfo.destination","title":"destination  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsedInfo.source","title":"source  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsedInfo.owner","title":"owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>owner: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsedInfo.rent_sysvar","title":"rent_sysvar  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rent_sysvar: str | None = Field(\n    default=None, alias=\"rentSysvar\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsedInfo.token_amount","title":"token_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_amount: (\n    GetTransactionLastInstructionSplTokenAmount | None\n) = Field(default=None, alias=\"tokenAmount\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsed","title":"GetTransactionLastInstructionSplTokenParsed","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsed.info","title":"info  <code>instance-attribute</code>","text":"<pre><code>info: GetTransactionLastInstructionSplTokenParsedInfo\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplTokenParsed.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplToken","title":"GetTransactionLastInstructionSplToken","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of instruction <code>spl-token</code> inside the response of GET Transaction Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplToken.parsed","title":"parsed  <code>instance-attribute</code>","text":"<pre><code>parsed: GetTransactionLastInstructionSplTokenParsed\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplToken.program","title":"program  <code>instance-attribute</code>","text":"<pre><code>program: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplToken.program_id","title":"program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program_id: str = Field(alias='programId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSplToken.stack_height","title":"stack_height  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stack_height: int | None = Field(\n    default=None, alias=\"stackHeight\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsedInfo","title":"GetTransactionLastInstructionSystemParsedInfo","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsedInfo.base","title":"base  <code>instance-attribute</code>","text":"<pre><code>base: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsedInfo.lamports","title":"lamports  <code>instance-attribute</code>","text":"<pre><code>lamports: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsedInfo.new_account","title":"new_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>new_account: str = Field(alias='newAccount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsedInfo.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsedInfo.seed","title":"seed  <code>instance-attribute</code>","text":"<pre><code>seed: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsedInfo.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsedInfo.space","title":"space  <code>instance-attribute</code>","text":"<pre><code>space: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsed","title":"GetTransactionLastInstructionSystemParsed","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsed.info","title":"info  <code>instance-attribute</code>","text":"<pre><code>info: GetTransactionLastInstructionSystemParsedInfo\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystemParsed.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystem","title":"GetTransactionLastInstructionSystem","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of instruction <code>system</code> inside the response of GET Transaction Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystem.parsed","title":"parsed  <code>instance-attribute</code>","text":"<pre><code>parsed: GetTransactionLastInstructionSystemParsed\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystem.program","title":"program  <code>instance-attribute</code>","text":"<pre><code>program: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystem.program_id","title":"program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program_id: str = Field(alias='programId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionSystem.stack_height","title":"stack_height  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stack_height: int | None = Field(\n    default=None, alias=\"stackHeight\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteLockout","title":"GetTransactionLastInstructionVoteLockout","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteLockout.confirmation_count","title":"confirmation_count  <code>instance-attribute</code>","text":"<pre><code>confirmation_count: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteLockout.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteStateUpdate","title":"GetTransactionLastInstructionVoteStateUpdate","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteStateUpdate.hash","title":"hash  <code>instance-attribute</code>","text":"<pre><code>hash: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteStateUpdate.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteStateUpdate.lockouts","title":"lockouts  <code>instance-attribute</code>","text":"<pre><code>lockouts: list[GetTransactionLastInstructionVoteLockout]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteStateUpdate.timestamp_unix_utc","title":"timestamp_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>timestamp_unix_utc: int = Field(alias='timestamp')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteParsedInfo","title":"GetTransactionLastInstructionVoteParsedInfo","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteParsedInfo.vote_account","title":"vote_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vote_account: str = Field(alias='voteAccount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteParsedInfo.vote_authority","title":"vote_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vote_authority: str = Field(alias='voteAuthority')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteParsedInfo.vote_state_updated","title":"vote_state_updated  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vote_state_updated: (\n    GetTransactionLastInstructionVoteStateUpdate\n) = Field(alias=\"voteStateUpdated\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteParsed","title":"GetTransactionLastInstructionVoteParsed","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteParsed.info","title":"info  <code>instance-attribute</code>","text":"<pre><code>info: GetTransactionLastInstructionVoteParsedInfo\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVoteParsed.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVote","title":"GetTransactionLastInstructionVote","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of instruction <code>vote</code> inside the response of GET Transaction Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVote.parsed","title":"parsed  <code>instance-attribute</code>","text":"<pre><code>parsed: GetTransactionLastInstructionVoteParsed\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVote.program","title":"program  <code>instance-attribute</code>","text":"<pre><code>program: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVote.program_id","title":"program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program_id: str = Field(alias='programId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionVote.stack_height","title":"stack_height  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stack_height: int | None = Field(\n    default=None, alias=\"stackHeight\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionGeneral","title":"GetTransactionLastInstructionGeneral","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of instruction <code>general</code> inside the response of GET Transaction Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionGeneral.accounts","title":"accounts  <code>instance-attribute</code>","text":"<pre><code>accounts: list[str]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionGeneral.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionGeneral.program_id","title":"program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program_id: str = Field(alias='programId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastInstructionGeneral.stack_height","title":"stack_height  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stack_height: int | None = Field(\n    default=None, alias=\"stackHeight\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastAddressTableLookup","title":"GetTransactionLastAddressTableLookup","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastAddressTableLookup.account_key","title":"account_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account_key: str = Field(alias='accountKey')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastAddressTableLookup.readonly_indexes","title":"readonly_indexes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>readonly_indexes: list[int] = Field(alias=\"readonlyIndexes\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastAddressTableLookup.writable_indexes","title":"writable_indexes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>writable_indexes: list[int] = Field(alias=\"writableIndexes\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastAccountKeys","title":"GetTransactionLastAccountKeys","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastAccountKeys.public_key","title":"public_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>public_key: str = Field(alias='pubkey')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastAccountKeys.signer","title":"signer  <code>instance-attribute</code>","text":"<pre><code>signer: bool\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastAccountKeys.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastAccountKeys.writable","title":"writable  <code>instance-attribute</code>","text":"<pre><code>writable: bool\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMessage","title":"GetTransactionLastMessage","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMessage.account_keys","title":"account_keys  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account_keys: list[GetTransactionLastAccountKeys] = Field(\n    alias=\"accountKeys\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMessage.address_table_lookups","title":"address_table_lookups  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address_table_lookups: (\n    list[GetTransactionLastAddressTableLookup] | None\n) = Field(default=None, alias=\"addressTableLookups\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMessage.instructions","title":"instructions  <code>instance-attribute</code>","text":"<pre><code>instructions: list[\n    GetTransactionLastInstructionGeneral\n    | GetTransactionLastInstructionVote\n    | GetTransactionLastInstructionSystem\n    | GetTransactionLastInstructionSplToken\n]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMessage.recent_blockhash","title":"recent_blockhash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recent_blockhash: str = Field(alias='recentBlockhash')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastTransaction","title":"GetTransactionLastTransaction","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of transaction inside the response of GET Transaction Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastTransaction.message","title":"message  <code>instance-attribute</code>","text":"<pre><code>message: GetTransactionLastMessage\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastTransaction.signatures","title":"signatures  <code>instance-attribute</code>","text":"<pre><code>signatures: list[str]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaError","title":"GetTransactionLastMetaError","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaError.instruction_error","title":"instruction_error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>instruction_error: list[int | dict] = Field(\n    alias=\"InstructionError\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaStatus","title":"GetTransactionLastMetaStatus","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaStatus.error","title":"error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>error: GetTransactionLastMetaError | None = Field(\n    default=None, alias=\"err\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaStatus.ok","title":"ok  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ok: None = Field(default=None, alias='Ok')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaInstructions","title":"GetTransactionLastMetaInstructions","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaInstructions.index","title":"index  <code>instance-attribute</code>","text":"<pre><code>index: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaInstructions.instructions","title":"instructions  <code>instance-attribute</code>","text":"<pre><code>instructions: list[\n    GetTransactionLastInstructionGeneral\n    | GetTransactionLastInstructionVote\n    | GetTransactionLastInstructionSystem\n    | GetTransactionLastInstructionSplToken\n]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaTokenAmount","title":"GetTransactionLastMetaTokenAmount","text":"<p>               Bases: <code>GetAccountTokensTokenAmount</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaTokenBalance","title":"GetTransactionLastMetaTokenBalance","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaTokenBalance.account_index","title":"account_index  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account_index: int = Field(alias='accountIndex')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaTokenBalance.mint","title":"mint  <code>instance-attribute</code>","text":"<pre><code>mint: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaTokenBalance.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaTokenBalance.program_id","title":"program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program_id: str = Field(alias='programId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMetaTokenBalance.ui_token_amount","title":"ui_token_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ui_token_amount: GetTransactionLastMetaTokenAmount = Field(\n    alias=\"uiTokenAmount\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta","title":"GetTransactionLastMeta","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of meta inside the response of GET Transaction Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.compute_units_consumed","title":"compute_units_consumed  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>compute_units_consumed: int = Field(\n    alias=\"computeUnitsConsumed\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.error","title":"error  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>error: GetTransactionLastMetaError | None = Field(\n    default=None, alias=\"err\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.inner_instructions","title":"inner_instructions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>inner_instructions: list[\n    GetTransactionLastMetaInstructions\n] = Field(alias=\"innerInstructions\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.log_messages","title":"log_messages  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>log_messages: list[str] = Field(alias='logMessages')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.post_balances","title":"post_balances  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>post_balances: list[int] = Field(alias='postBalances')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.post_token_balances","title":"post_token_balances  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>post_token_balances: (\n    list[GetTransactionLastMetaTokenBalance] | None\n) = Field(default=None, alias=\"postTokenBalances\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.pre_balances","title":"pre_balances  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pre_balances: list[int] = Field(alias='preBalances')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.pre_token_balances","title":"pre_token_balances  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pre_token_balances: (\n    list[GetTransactionLastMetaTokenBalance] | None\n) = Field(default=None, alias=\"preTokenBalances\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.rewards","title":"rewards  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rewards: list[str] | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastMeta.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: GetTransactionLastMetaStatus\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastData","title":"GetTransactionLastData","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of data inside the response of GET Transaction Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastData.meta","title":"meta  <code>instance-attribute</code>","text":"<pre><code>meta: GetTransactionLastMeta\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastData.transaction","title":"transaction  <code>instance-attribute</code>","text":"<pre><code>transaction: GetTransactionLastTransaction\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastData.version","title":"version  <code>instance-attribute</code>","text":"<pre><code>version: str | int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastResponse","title":"GetTransactionLastResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Transaction Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionLastResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTransactionLastData]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInputAccount","title":"GetTransactionDetailInputAccount","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of input account inside the response of GET Transaction Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInputAccount.account","title":"account  <code>instance-attribute</code>","text":"<pre><code>account: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInputAccount.signer","title":"signer  <code>instance-attribute</code>","text":"<pre><code>signer: bool\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInputAccount.writable","title":"writable  <code>instance-attribute</code>","text":"<pre><code>writable: bool\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInputAccount.pre_balance","title":"pre_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pre_balance: int = Field(alias='preBalance')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInputAccount.post_balance","title":"post_balance  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>post_balance: int = Field(alias='postBalance')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionVoteParams","title":"GetTransactionDetailInnerInstructionVoteParams","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionVoteParams.vote_account","title":"vote_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vote_account: str = Field(alias='voteAccount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionVoteParams.vote_authority","title":"vote_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vote_authority: str = Field(alias='voteAuthority')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionVoteParams.vote_hash","title":"vote_hash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>vote_hash: str = Field(alias='voteHash')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionVoteParams.root","title":"root  <code>instance-attribute</code>","text":"<pre><code>root: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionVoteParams.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTransferParams","title":"GetTransactionDetailInnerInstructionSplTransferParams","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTransferParams.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTransferParams.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTransferParams.authority","title":"authority  <code>instance-attribute</code>","text":"<pre><code>authority: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTransferParams.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTokenParams","title":"GetTransactionDetailInnerInstructionSplTokenParams","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTokenParams.account","title":"account  <code>instance-attribute</code>","text":"<pre><code>account: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTokenParams.amount","title":"amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTokenParams.mint","title":"mint  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTokenParams.mint_authority","title":"mint_authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_authority: str | None = Field(\n    default=None, alias=\"mintAuthority\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSplTokenParams.authority","title":"authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>authority: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSolTransferParams","title":"GetTransactionDetailInnerInstructionSolTransferParams","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSolTransferParams.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSolTransferParams.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionSolTransferParams.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionClosedAccountParams","title":"GetTransactionDetailInnerInstructionClosedAccountParams","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionClosedAccountParams.closed_account","title":"closed_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closed_account: str = Field(alias='closedAccount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra","title":"GetTransactionDetailInnerInstructionExtra","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.authority","title":"authority  <code>instance-attribute</code>","text":"<pre><code>authority: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str = Field(alias='tokenAddress')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.icon","title":"icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icon: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.source_owner","title":"source_owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_owner: str | None = Field(\n    default=None, alias=\"sourceOwner\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionExtra.destination_owner","title":"destination_owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination_owner: str | None = Field(\n    default=None, alias=\"destinationOwner\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionParsed","title":"GetTransactionDetailInnerInstructionParsed","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionParsed.program_id","title":"program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program_id: str = Field(alias='programId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionParsed.program","title":"program  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionParsed.data","title":"data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionParsed.data_encode","title":"data_encode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data_encode: str | None = Field(\n    default=None, alias=\"dataEncode\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionParsed.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionParsed.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionParsed.params","title":"params  <code>instance-attribute</code>","text":"<pre><code>params: (\n    GetTransactionDetailInnerInstructionVoteParams\n    | GetTransactionDetailInnerInstructionSplTransferParams\n    | GetTransactionDetailInnerInstructionSplTokenParams\n    | GetTransactionDetailInnerInstructionClosedAccountParams\n    | GetTransactionDetailInnerInstructionSolTransferParams\n    | dict[str, str]\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstructionParsed.extra","title":"extra  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>extra: GetTransactionDetailInnerInstructionExtra | None = (\n    None\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstruction","title":"GetTransactionDetailInnerInstruction","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of inner instruction inside the response of GET Transaction Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstruction.index","title":"index  <code>instance-attribute</code>","text":"<pre><code>index: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailInnerInstruction.parsed_instructions","title":"parsed_instructions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>parsed_instructions: list[\n    GetTransactionDetailInnerInstructionParsed\n] = Field(alias=\"parsedInstructions\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailToken","title":"GetTransactionDetailToken","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailToken.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailToken.address","title":"address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address: str = Field(alias='tokenAddress')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailToken.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailToken.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailToken.icon","title":"icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icon: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenAmount","title":"GetTransactionDetailTokenAmount","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenAmount.post_amount","title":"post_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>post_amount: str = Field(alias='postAmount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenAmount.pre_amount","title":"pre_amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>pre_amount: str = Field(alias='preAmount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenBalance","title":"GetTransactionDetailTokenBalance","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of parsed token balance inside the response of GET Transaction Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenBalance.account","title":"account  <code>instance-attribute</code>","text":"<pre><code>account: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenBalance.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: GetTransactionDetailTokenAmount\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenBalance.token","title":"token  <code>instance-attribute</code>","text":"<pre><code>token: GetTransactionDetailToken\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailParsedInstruction","title":"GetTransactionDetailParsedInstruction","text":"<p>               Bases: <code>GetTransactionDetailInnerInstructionParsed</code></p> <p>This class refers to the model of parsed instruction inside the response of GET Transaction Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransferToken","title":"GetTransactionDetailTokenTransferToken","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransferToken.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransferToken.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransferToken.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransferToken.icon","title":"icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icon: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransfer","title":"GetTransactionDetailTokenTransfer","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of token transfer inside the response of GET Transaction Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransfer.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransfer.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransfer.source_owner","title":"source_owner  <code>instance-attribute</code>","text":"<pre><code>source_owner: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransfer.destination_owner","title":"destination_owner  <code>instance-attribute</code>","text":"<pre><code>destination_owner: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransfer.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransfer.token","title":"token  <code>instance-attribute</code>","text":"<pre><code>token: GetTransactionDetailTokenTransferToken\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailTokenTransfer.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailSolTransfer","title":"GetTransactionDetailSolTransfer","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of sol transfer inside the response of GET Transaction Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailSolTransfer.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailSolTransfer.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailSolTransfer.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent","title":"GetTransactionDetailUnknownTransferEvent","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str = Field(alias='tokenAddress')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.icon","title":"icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icon: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.source_owner","title":"source_owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_owner: str | None = Field(\n    default=None, alias=\"sourceOwner\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransferEvent.destination_owner","title":"destination_owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination_owner: str | None = Field(\n    default=None, alias=\"destinationOwner\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransfer","title":"GetTransactionDetailUnknownTransfer","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of unknown transfer inside the response of GET Transaction Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransfer.program_id","title":"program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>program_id: str = Field(alias='programId')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailUnknownTransfer.event","title":"event  <code>instance-attribute</code>","text":"<pre><code>event: list[GetTransactionDetailUnknownTransferEvent]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse","title":"GetTransactionDetailResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Transaction Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.block_time","title":"block_time  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time: int = Field(alias='blockTime')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='txHash')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.lamport","title":"lamport  <code>instance-attribute</code>","text":"<pre><code>lamport: int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.signer","title":"signer  <code>instance-attribute</code>","text":"<pre><code>signer: list[str]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.log_message","title":"log_message  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>log_message: list[str] = Field(alias='logMessage')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.input_account","title":"input_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>input_account: list[GetTransactionDetailInputAccount] = (\n    Field(alias=\"inputAccount\")\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.recent_blockhash","title":"recent_blockhash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>recent_blockhash: str = Field(alias='recentBlockhash')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.inner_instructions","title":"inner_instructions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>inner_instructions: list[\n    GetTransactionDetailInnerInstruction\n] = Field(alias=\"innerInstructions\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.token_balances","title":"token_balances  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_balances: list[GetTransactionDetailTokenBalance] = (\n    Field(alias=\"tokenBalances\")\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.parsed_instruction","title":"parsed_instruction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>parsed_instruction: list[\n    GetTransactionDetailParsedInstruction\n] = Field(alias=\"parsedInstruction\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.confirmations","title":"confirmations  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>confirmations: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.version","title":"version  <code>instance-attribute</code>","text":"<pre><code>version: str | int\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.token_transfers","title":"token_transfers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_transfers: list[GetTransactionDetailTokenTransfer] = (\n    Field(alias=\"tokenTransfers\")\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.sol_transfers","title":"sol_transfers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sol_transfers: list[GetTransactionDetailSolTransfer] = (\n    Field(alias=\"solTransfers\")\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.serum_transactions","title":"serum_transactions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>serum_transactions: list[dict] = Field(\n    alias=\"serumTransactions\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.raydium_transactions","title":"raydium_transactions  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>raydium_transactions: list[dict] = Field(\n    alias=\"raydiumTransactions\"\n)\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetTransactionDetailResponse.unknown_transfers","title":"unknown_transfers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>unknown_transfers: list[\n    GetTransactionDetailUnknownTransfer\n] = Field(alias=\"unknownTransfers\")\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResult","title":"GetBlockLastResult","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of result inside the response of GET Block Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResult.block_height","title":"block_height  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_height: int = Field(alias='blockHeight')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResult.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='blockTime')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResult.blockhash","title":"blockhash  <code>instance-attribute</code>","text":"<pre><code>blockhash: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResult.parent_slot","title":"parent_slot  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>parent_slot: int = Field(alias='parentSlot')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResult.previous_blockhash","title":"previous_blockhash  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>previous_blockhash: str = Field(alias='previousBlockhash')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResult.fee_rewards","title":"fee_rewards  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fee_rewards: int = Field(alias='feeRewards')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResult.validator","title":"validator  <code>instance-attribute</code>","text":"<pre><code>validator: str\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResult.transaction_count","title":"transaction_count  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_count: int = Field(alias='transactionCount')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastData","title":"GetBlockLastData","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the model of data inside the response of GET Block Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastData.current_slot","title":"current_slot  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>current_slot: int = Field(alias='currentSlot')\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastData.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: GetBlockLastResult\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResponse","title":"GetBlockLastResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Block Last of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockLastResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetBlockLastData]\n</code></pre>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockDetailResponse","title":"GetBlockDetailResponse","text":"<p>               Bases: <code>GetBlockLastData</code></p> <p>This class refers to the response model of GET Block Detail of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockTransactionsTransaction","title":"GetBlockTransactionsTransaction","text":"<p>               Bases: <code>GetTransactionLastData</code></p> <p>This class refers to the model of transaction inside the response of GET Block Transactions of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockTransactionsResponse","title":"GetBlockTransactionsResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Block Transactions of V1 API endpoint.</p>"},{"location":"interactions/solscan/v1/schema.html#cyhole.solscan.v1.schema.GetBlockTransactionsResponse.transactions","title":"transactions  <code>instance-attribute</code>","text":"<pre><code>transactions: list[GetBlockTransactionsTransaction]\n</code></pre>"},{"location":"interactions/solscan/v2/index.html","title":"- Solscan (v2 API)","text":"<p>Solscan (https://solscan.io/) is one of the most widly used platform for analysing Solana blockchain. It robustness is provided by its API services that are easy to use and well documented. Currently, there are two versions of the API available, v1 and v2; this documentation covers the v2 API (see here for v1 API documentation).</p> <p>The access to the API services is provided by an API key that can be obtained by creating an account on the Solscan platform, and purchasing the desired subscription. Official documentation can be accessed from here.</p> <p>The API connector is <code>Solscan</code> class imported from <code>cyhole.solscan.v2</code> path. The same connector can be imported from <code>SolscanV2</code> class available in <code>cyhole.solscan</code>.</p>"},{"location":"interactions/solscan/v2/index.html#quick-examples","title":"Quick Examples","text":""},{"location":"interactions/solscan/v2/index.html#get-latest-spl-transfers-of-an-account","title":"Get Latest SPL Transfers of an Account","text":"<p>Extract the latest incoming SPL transfers executed by an account on the Solana chian in few lines of code by using <code>get_account_transfers</code> in asynchronous logic.</p> <pre><code>import asyncio\nfrom cyhole.solscan.v2 import Solscan\n#from cyhole.solscan import SolscanV2 as Solscan\nfrom cyhole.solscan.v2.schema import GetAccountTransferParam\nfrom cyhole.solscan.v2.param import SolscanActivityTransferType, SolscanFlowType\n\naccount = \"ACCOUNT_ID\"\n\n# set params\nparams = GetAccountTransferParam(\n    activity_type = SolscanActivityTransferType.SPL_TRANSFER.value,\n    flow_direction = SolscanFlowType.INCOMING.value\n)\n\n# extract latest transfers\nasync def main() -&gt; None:\n    solscan = Solscan()\n    async with solscan.async_client as client:\n        response = await client.get_account_transfers(account, params = params)\n        print(\"Transfers Extracted:\", len(response.data))\n\nasyncio.run(main())\n</code></pre> <p>Note</p> <p>To run this example is assumed that the user has a valid API key stored in <code>SOLSCAN_API_V2_KEY</code> environment variable. If the key is not provided during the object creations, then the library will raise an exception.</p>"},{"location":"interactions/solscan/v2/index.html#content","title":"Content","text":"<p>The documentation follows the library's structure by providing all the technical details required to use it.</p> <ul> <li> <p> Connector</p> <p><code>cyhole.solscan.v2</code> - Explore the <code>Solscan</code> v2 API connector and all its methods. </p> <p> Reference</p> </li> <li> <p> API Parameters</p> <p><code>cyhole.solscan.v2.param</code> - Ensure to use the correct parameters during the API calls.</p> <p> Reference</p> </li> <li> <p> Response Schema</p> <p><code>cyhole.solscan.v2.schema</code> - Extract only what is necessary by exploiting reponse mapping thanks to <code>pydantic</code> schemes.</p> <p> Reference</p> </li> <li> <p> Exceptions</p> <p><code>cyhole.solscan.v2.exception</code> - Make sure you intercept all exceptions correctly.</p> <p> Reference</p> </li> </ul>"},{"location":"interactions/solscan/v2/index.html#endpoints","title":"Endpoints","text":"Endpoint Type Method <code>cyhole</code> Release Deprecated Account Transfer <code>GET</code> <code>get_account_transfers</code> <code>0.2.3</code> - Account Transfer <code>GET</code> <code>get_account_transfers</code> <code>0.2.3</code> - Account Token NFT Account <code>GET</code> <code>get_account_token_nft_account</code> <code>0.2.3</code> - Account Defi Activities <code>GET</code> <code>get_account_defi_activities</code> <code>0.2.3</code> - Account Balance Change Activities <code>GET</code> <code>get_account_balance_change_activities</code> <code>0.2.3</code> - Account Transactions <code>GET</code> <code>get_account_transactions</code> <code>0.2.3</code> - Account Stake <code>GET</code> <code>get_account_stake</code> <code>0.2.3</code> - Account Detail <code>GET</code> <code>get_account_detail</code> <code>0.2.3</code> - Account Rewards Export <code>GET</code> <code>get_account_rewards_export</code> <code>0.2.3</code> - Token Transfer <code>GET</code> <code>get_token_transfer</code> <code>0.2.3</code> - Token DeFi Activities <code>GET</code> <code>get_token_defi_activities</code> <code>0.2.3</code> - Token Markets <code>GET</code> <code>get_token_markets</code> <code>0.2.3</code> - Token List <code>GET</code> <code>get_token_list</code> <code>0.2.3</code> - Token Trending <code>GET</code> <code>get_token_trending</code> <code>0.2.3</code> - Token Price <code>GET</code> <code>get_token_price</code> <code>0.2.3</code> - Token Holders <code>GET</code> <code>get_token_holders</code> <code>0.2.3</code> - Token Meta <code>GET</code> <code>get_token_meta</code> <code>0.2.3</code> - NFT News <code>GET</code> <code>get_nft_news</code> <code>0.2.3</code> - NFT Activities <code>GET</code> <code>get_nft_activities</code> <code>0.2.3</code> - NFT Collection Lists <code>GET</code> <code>get_nft_collection_lists</code> <code>0.2.3</code> - NFT Collection Items <code>GET</code> <code>get_nft_collection_items</code> <code>0.2.3</code> - Transaction Last <code>GET</code> <code>get_transaction_last</code> <code>0.2.3</code> - Transaction Actions <code>GET</code> <code>get_transaction_actions</code> <code>0.2.3</code> - Block Last <code>GET</code> <code>get_block_last</code> <code>0.2.3</code> - Block Transactions <code>GET</code> <code>get_block_transactions</code> <code>0.2.3</code> - Block Detail <code>GET</code> <code>get_block_detail</code> <code>0.2.3</code> -"},{"location":"interactions/solscan/v2/client.html","title":"Client","text":""},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client","title":"cyhole.solscan.v2.client","text":""},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient","title":"SolscanClient","text":"<pre><code>SolscanClient(\n    interaction: Solscan, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>APIClient</code></p> <p>Client used for synchronous API calls for <code>Solscan</code> interaction on V2 API.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def __init__(self, interaction: Solscan, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction = cast('Solscan', self._interaction)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_account_transfers","title":"get_account_transfers","text":"<pre><code>get_account_transfers(\n    account: str,\n    params: GetAccountTransferParam = GetAccountTransferParam(),\n) -&gt; GetAccountTransferResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Transfer for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_transfers</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_account_transfers(self, account: str, params: GetAccountTransferParam = GetAccountTransferParam()) -&gt; GetAccountTransferResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Transfer](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-transfer)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_transfers`][cyhole.solscan.v2.interaction.Solscan._get_account_transfers].\n    \"\"\"\n    return self._interaction._get_account_transfers(True, account, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_account_token_nft_account","title":"get_account_token_nft_account","text":"<pre><code>get_account_token_nft_account(\n    account: str,\n    account_type: str,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n    hide_zero: bool = True,\n) -&gt; GetAccountTokenNFTAccountResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Token/NFT Account for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_token_nft_account</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_account_token_nft_account(\n    self, \n    account: str,\n    account_type: str,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n    hide_zero: bool = True\n) -&gt; GetAccountTokenNFTAccountResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Token/NFT Account](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-token-accounts)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_token_nft_account`][cyhole.solscan.v2.interaction.Solscan._get_account_token_nft_account].\n    \"\"\"\n    return self._interaction._get_account_token_nft_account(True, account, account_type, page, page_size, hide_zero)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_account_defi_activities","title":"get_account_defi_activities","text":"<pre><code>get_account_defi_activities(\n    account: str,\n    params: GetAccountDefiActivitiesParam = GetAccountDefiActivitiesParam(),\n) -&gt; GetAccountDefiActivitiesResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account DeFi Activities for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_defi_activities</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_account_defi_activities(self, account: str, params: GetAccountDefiActivitiesParam = GetAccountDefiActivitiesParam()) -&gt; GetAccountDefiActivitiesResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account DeFi Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-defi-activities)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_defi_activities`][cyhole.solscan.v2.interaction.Solscan._get_account_defi_activities].\n    \"\"\"\n    return self._interaction._get_account_defi_activities(True, account, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_account_balance_change_activities","title":"get_account_balance_change_activities","text":"<pre><code>get_account_balance_change_activities(\n    account: str,\n    params: GetAccountBalanceChangeActivitiesParam = GetAccountBalanceChangeActivitiesParam(),\n) -&gt; GetAccountBalanceChangeActivitiesResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Balance Change Activities for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_balance_change_activities</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_account_balance_change_activities(self, account: str, params: GetAccountBalanceChangeActivitiesParam = GetAccountBalanceChangeActivitiesParam()) -&gt; GetAccountBalanceChangeActivitiesResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Balance Change Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-balance_change)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_balance_change_activities`][cyhole.solscan.v2.interaction.Solscan._get_account_balance_change_activities].\n    \"\"\"\n    return self._interaction._get_account_balance_change_activities(True, account, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_account_transactions","title":"get_account_transactions","text":"<pre><code>get_account_transactions(\n    account: str,\n    before_transaction: str | None = None,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; GetAccountTransactionsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Transactions for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_account_transactions(self, account: str, before_transaction: str | None = None, limit: int = SolscanReturnLimitType.LIMIT_10.value) -&gt; GetAccountTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-transactions)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_transactions`][cyhole.solscan.v2.interaction.Solscan._get_account_transactions].\n    \"\"\"\n    return self._interaction._get_account_transactions(True, account, before_transaction, limit)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_account_stake","title":"get_account_stake","text":"<pre><code>get_account_stake(\n    account: str,\n    page: int = 1,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; GetAccountStakeResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Stake for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_stake</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_account_stake(self, account: str, page: int = 1, limit: int = SolscanReturnLimitType.LIMIT_10.value) -&gt; GetAccountStakeResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Stake](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-stake)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_stake`][cyhole.solscan.v2.interaction.Solscan._get_account_stake].\n    \"\"\"\n    return self._interaction._get_account_stake(True, account, page, limit)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_account_detail","title":"get_account_detail","text":"<pre><code>get_account_detail(\n    account: str,\n) -&gt; GetAccountDetailResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Detail for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_detail</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_account_detail(self, account: str) -&gt; GetAccountDetailResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-detail)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_detail`][cyhole.solscan.v2.interaction.Solscan._get_account_detail].\n    \"\"\"\n    return self._interaction._get_account_detail(True, account)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_account_rewards_export","title":"get_account_rewards_export","text":"<pre><code>get_account_rewards_export(\n    account: str, dt_from: datetime, dt_to: datetime\n) -&gt; GetAccountRewardsExportResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Rewards Export for synchronous logic.  All the API endopint details are available on <code>Solscan._get_account_rewards_export</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_account_rewards_export(self, account: str, dt_from: datetime, dt_to: datetime) -&gt; GetAccountRewardsExportResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Rewards Export](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-reward-export)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_rewards_export`][cyhole.solscan.v2.interaction.Solscan._get_account_rewards_export].\n    \"\"\"\n    return self._interaction._get_account_rewards_export(True, account, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_token_transfer","title":"get_token_transfer","text":"<pre><code>get_token_transfer(\n    token: str,\n    params: GetTokenTransferParam = GetTokenTransferParam(),\n) -&gt; GetTokenTransferResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Transfer for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_transfer</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_token_transfer(self, token: str, params: GetTokenTransferParam = GetTokenTransferParam()) -&gt; GetTokenTransferResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Transfer](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-transfer)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_transfer`][cyhole.solscan.v2.interaction.Solscan._get_token_transfer].\n    \"\"\"\n    return self._interaction._get_token_transfer(True, token, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_token_defi_activities","title":"get_token_defi_activities","text":"<pre><code>get_token_defi_activities(\n    token: str,\n    params: GetTokenDefiActivitiesParam = GetTokenDefiActivitiesParam(),\n) -&gt; GetTokenDefiActivitiesResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token DeFi Activities for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_defi_activities</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_token_defi_activities(self, token: str, params: GetTokenDefiActivitiesParam = GetTokenDefiActivitiesParam()) -&gt; GetTokenDefiActivitiesResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token DeFi Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-defi-activities)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_defi_activities`][cyhole.solscan.v2.interaction.Solscan._get_token_defi_activities].\n    \"\"\"\n    return self._interaction._get_token_defi_activities(True, token, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_token_markets","title":"get_token_markets","text":"<pre><code>get_token_markets(\n    tokens: str | list[str],\n    program_address: str | list[str] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetTokenMarketsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Markets for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_markets</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_token_markets(\n    self,\n    tokens: str | list[str],\n    program_address: str | list[str] | None  = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value\n) -&gt; GetTokenMarketsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Markets](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-markets)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_markets`][cyhole.solscan.v2.interaction.Solscan._get_token_markets].\n    \"\"\"\n    return self._interaction._get_token_markets(True, tokens, program_address, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_token_list","title":"get_token_list","text":"<pre><code>get_token_list(\n    sort_by: str = SolscanSortType.MARKET_CAP.value,\n    order_by: str = SolscanOrderType.DESCENDING.value,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetTokenListResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token List for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_list</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_token_list(\n    self,\n    sort_by: str = SolscanSortType.MARKET_CAP.value,\n    order_by: str = SolscanOrderType.DESCENDING.value,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value\n) -&gt; GetTokenListResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token List](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-list)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_list`][cyhole.solscan.v2.interaction.Solscan._get_token_list].\n    \"\"\"\n    return self._interaction._get_token_list(True, sort_by, order_by, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_token_trending","title":"get_token_trending","text":"<pre><code>get_token_trending(\n    limit: int = 10,\n) -&gt; GetTokenTrendingResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Trending for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_trending</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_token_trending(self, limit: int = 10) -&gt; GetTokenTrendingResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Trending](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-trending)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_trending`][cyhole.solscan.v2.interaction.Solscan._get_token_trending].\n    \"\"\"\n    return self._interaction._get_token_trending(True, limit)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_token_price","title":"get_token_price","text":"<pre><code>get_token_price(\n    token: str,\n    time_range: (\n        datetime | tuple[datetime, datetime]\n    ) = datetime.now(),\n) -&gt; GetTokenPriceResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Price for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_price</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_token_price(self, token: str, time_range: datetime | tuple[datetime, datetime] = datetime.now()) -&gt; GetTokenPriceResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Price](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-price)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_price`][cyhole.solscan.v2.interaction.Solscan._get_token_price].\n    \"\"\"\n    return self._interaction._get_token_price(True, token, time_range)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_token_holders","title":"get_token_holders","text":"<pre><code>get_token_holders(\n    token: str,\n    amount_range: tuple[int, int] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetTokenHoldersResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Holders for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_holders</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_token_holders(self, token: str, amount_range: tuple[int, int] | None = None, page: int = 1, page_size: int = SolscanPageSizeType.SIZE_10.value) -&gt; GetTokenHoldersResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Holders](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-holders)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_holders`][cyhole.solscan.v2.interaction.Solscan._get_token_holders].\n    \"\"\"\n    return self._interaction._get_token_holders(True, token, amount_range, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_token_meta","title":"get_token_meta","text":"<pre><code>get_token_meta(token: str) -&gt; GetTokenMetaResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Meta for synchronous logic.  All the API endopint details are available on <code>Solscan._get_token_meta</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_token_meta(self, token: str) -&gt; GetTokenMetaResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Meta](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-meta)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_meta`][cyhole.solscan.v2.interaction.Solscan._get_token_meta].\n    \"\"\"\n    return self._interaction._get_token_meta(True, token)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_nft_news","title":"get_nft_news","text":"<pre><code>get_nft_news(\n    filter: str = \"created_time\",\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; GetNFTNewsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET NFT News for synchronous logic.  All the API endopint details are available on <code>Solscan._get_nft_news</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_nft_news(self, filter: str = \"created_time\", page: int = 1, page_size: int = SolscanNFTPageSizeType.SIZE_12.value) -&gt; GetNFTNewsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[NFT News](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-news)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_nft_news`][cyhole.solscan.v2.interaction.Solscan._get_nft_news].\n    \"\"\"\n    return self._interaction._get_nft_news(True, filter, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_nft_activities","title":"get_nft_activities","text":"<pre><code>get_nft_activities(\n    params: GetNFTActivitiesParam = GetNFTActivitiesParam(),\n) -&gt; GetNFTActivitiesResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET NFT Activities for synchronous logic.  All the API endopint details are available on <code>Solscan._get_nft_activities</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_nft_activities(self, params: GetNFTActivitiesParam = GetNFTActivitiesParam()) -&gt; GetNFTActivitiesResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[NFT Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-activities)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_nft_activities`][cyhole.solscan.v2.interaction.Solscan._get_nft_activities].\n    \"\"\"\n    return self._interaction._get_nft_activities(True, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_nft_collection_lists","title":"get_nft_collection_lists","text":"<pre><code>get_nft_collection_lists(\n    params: GetNFTCollectionListsParam = GetNFTCollectionListsParam(),\n) -&gt; GetNFTCollectionListsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET NFT Collection Lists for synchronous logic.  All the API endopint details are available on <code>Solscan._get_nft_collection_lists</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_nft_collection_lists(self, params: GetNFTCollectionListsParam = GetNFTCollectionListsParam()) -&gt; GetNFTCollectionListsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[NFT Collection Lists](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-collection-lists)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_nft_collection_lists`][cyhole.solscan.v2.interaction.Solscan._get_nft_collection_lists].\n    \"\"\"\n    return self._interaction._get_nft_collection_lists(True, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_nft_collection_items","title":"get_nft_collection_items","text":"<pre><code>get_nft_collection_items(\n    collection: str,\n    sort_by: str = SolscanNFTItemSortType.LAST_TRADE.value,\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; GetNFTCollectionItemsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET NFT Collection Items for synchronous logic.  All the API endopint details are available on <code>Solscan._get_nft_collection_items</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_nft_collection_items(\n    self,\n    collection: str,\n    sort_by: str = SolscanNFTItemSortType.LAST_TRADE.value,\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value\n) -&gt; GetNFTCollectionItemsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[NFT Collection Items](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-collection-items)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_nft_collection_items`][cyhole.solscan.v2.interaction.Solscan._get_nft_collection_items].\n    \"\"\"\n    return self._interaction._get_nft_collection_items(True, collection, sort_by, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_transaction_last","title":"get_transaction_last","text":"<pre><code>get_transaction_last(\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n    filter: str = SolscanTransactionFilterType.EXCEPT_VOTE.value,\n) -&gt; GetTransactionLastResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Transaction Last for synchronous logic.  All the API endopint details are available on <code>Solscan._get_transaction_last</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_transaction_last(self, limit: int = SolscanReturnLimitType.LIMIT_10.value, filter: str = SolscanTransactionFilterType.EXCEPT_VOTE.value) -&gt; GetTransactionLastResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Transaction Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-transaction-last)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_transaction_last`][cyhole.solscan.v2.interaction.Solscan._get_transaction_last].\n    \"\"\"\n    return self._interaction._get_transaction_last(True, limit, filter)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_transaction_actions","title":"get_transaction_actions","text":"<pre><code>get_transaction_actions(\n    transaction: str,\n) -&gt; GetTransactionActionsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Transaction Actions for synchronous logic.  All the API endopint details are available on <code>Solscan._get_transaction_actions</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_transaction_actions(self, transaction: str) -&gt; GetTransactionActionsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Transaction Actions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-transaction-actions)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_transaction_actions`][cyhole.solscan.v2.interaction.Solscan._get_transaction_actions].\n    \"\"\"\n    return self._interaction._get_transaction_actions(True, transaction)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_block_last","title":"get_block_last","text":"<pre><code>get_block_last(\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetBlockLastResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Block Last for synchronous logic.  All the API endopint details are available on <code>Solscan._get_block_last</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_block_last(self, page_size: int = SolscanPageSizeType.SIZE_10.value) -&gt; GetBlockLastResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Block Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-block-last)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_last`][cyhole.solscan.v2.interaction.Solscan._get_block_last].\n    \"\"\"\n    return self._interaction._get_block_last(True, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_block_transactions","title":"get_block_transactions","text":"<pre><code>get_block_transactions(\n    block: int,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetBlockTransactionsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Block Transactions for synchronous logic.  All the API endopint details are available on <code>Solscan._get_block_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_block_transactions(self, block: int, page: int = 1, page_size: int = SolscanPageSizeType.SIZE_10.value) -&gt; GetBlockTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Block Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-block-transactions)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_transactions`][cyhole.solscan.v2.interaction.Solscan._get_block_transactions].\n    \"\"\"\n    return self._interaction._get_block_transactions(True, block, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanClient.get_block_detail","title":"get_block_detail","text":"<pre><code>get_block_detail(block: int) -&gt; GetBlockDetailResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Block Detail for synchronous logic.  All the API endopint details are available on <code>Solscan._get_block_detail</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def get_block_detail(self, block: int) -&gt; GetBlockDetailResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Block Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-block-detail)** for synchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_detail`][cyhole.solscan.v2.interaction.Solscan._get_block_detail].\n    \"\"\"\n    return self._interaction._get_block_detail(True, block)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient","title":"SolscanAsyncClient","text":"<pre><code>SolscanAsyncClient(\n    interaction: Solscan, headers: Any | None = None\n)\n</code></pre> <p>               Bases: <code>AsyncAPIClient</code></p> <p>Client used for asynchronous API calls for <code>Solscan</code> interaction on V2 API.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>def __init__(self, interaction: Solscan, headers: Any | None = None) -&gt; None:\n    super().__init__(interaction, headers)\n    self._interaction = cast('Solscan', self._interaction)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_account_transfers","title":"get_account_transfers  <code>async</code>","text":"<pre><code>get_account_transfers(\n    account: str,\n    params: GetAccountTransferParam = GetAccountTransferParam(),\n) -&gt; GetAccountTransferResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Transfer for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_transfers</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_account_transfers(self, account: str, params: GetAccountTransferParam = GetAccountTransferParam()) -&gt; GetAccountTransferResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Transfer](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-transfer)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_transfers`][cyhole.solscan.v2.interaction.Solscan._get_account_transfers].\n    \"\"\"\n    return await self._interaction._get_account_transfers(False, account, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_account_token_nft_account","title":"get_account_token_nft_account  <code>async</code>","text":"<pre><code>get_account_token_nft_account(\n    account: str,\n    account_type: str,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n    hide_zero: bool = True,\n) -&gt; GetAccountTokenNFTAccountResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Token/NFT Account for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_token_nft_account</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_account_token_nft_account(\n    self, \n    account: str,\n    account_type: str,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n    hide_zero: bool = True\n) -&gt; GetAccountTokenNFTAccountResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Token/NFT Account](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-token-accounts)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_token_nft_account`][cyhole.solscan.v2.interaction.Solscan._get_account_token_nft_account].\n    \"\"\"\n    return await self._interaction._get_account_token_nft_account(False, account, account_type, page, page_size, hide_zero)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_account_defi_activities","title":"get_account_defi_activities  <code>async</code>","text":"<pre><code>get_account_defi_activities(\n    account: str,\n    params: GetAccountDefiActivitiesParam = GetAccountDefiActivitiesParam(),\n) -&gt; GetAccountDefiActivitiesResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account DeFi Activities for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_defi_activities</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_account_defi_activities(self, account: str, params: GetAccountDefiActivitiesParam = GetAccountDefiActivitiesParam()) -&gt; GetAccountDefiActivitiesResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account DeFi Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-defi-activities)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_defi_activities`][cyhole.solscan.v2.interaction.Solscan._get_account_defi_activities].\n    \"\"\"\n    return await self._interaction._get_account_defi_activities(False, account, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_account_balance_change_activities","title":"get_account_balance_change_activities  <code>async</code>","text":"<pre><code>get_account_balance_change_activities(\n    account: str,\n    params: GetAccountBalanceChangeActivitiesParam = GetAccountBalanceChangeActivitiesParam(),\n) -&gt; GetAccountBalanceChangeActivitiesResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Balance Change Activities for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_balance_change_activities</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_account_balance_change_activities(self, account: str, params: GetAccountBalanceChangeActivitiesParam = GetAccountBalanceChangeActivitiesParam()) -&gt; GetAccountBalanceChangeActivitiesResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Balance Change Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-balance_change)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_balance_change_activities`][cyhole.solscan.v2.interaction.Solscan._get_account_balance_change_activities].\n    \"\"\"\n    return await self._interaction._get_account_balance_change_activities(False, account, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_account_transactions","title":"get_account_transactions  <code>async</code>","text":"<pre><code>get_account_transactions(\n    account: str,\n    before_transaction: str | None = None,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; GetAccountTransactionsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Transactions for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_account_transactions(self, account: str, before_transaction: str | None = None, limit: int = SolscanReturnLimitType.LIMIT_10.value) -&gt; GetAccountTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-transactions)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_transactions`][cyhole.solscan.v2.interaction.Solscan._get_account_transactions].\n    \"\"\"\n    return await self._interaction._get_account_transactions(False, account, before_transaction, limit)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_account_stake","title":"get_account_stake  <code>async</code>","text":"<pre><code>get_account_stake(\n    account: str,\n    page: int = 1,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; GetAccountStakeResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Stake for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_stake</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_account_stake(self, account: str, page: int = 1, limit: int = SolscanReturnLimitType.LIMIT_10.value) -&gt; GetAccountStakeResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Stake](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-stake)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_stake`][cyhole.solscan.v2.interaction.Solscan._get_account_stake].\n    \"\"\"\n    return await self._interaction._get_account_stake(False, account, page, limit)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_account_detail","title":"get_account_detail  <code>async</code>","text":"<pre><code>get_account_detail(\n    account: str,\n) -&gt; GetAccountDetailResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Detail for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_detail</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_account_detail(self, account: str) -&gt; GetAccountDetailResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-detail)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_detail`][cyhole.solscan.v2.interaction.Solscan._get_account_detail].\n    \"\"\"\n    return await self._interaction._get_account_detail(False, account)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_account_rewards_export","title":"get_account_rewards_export  <code>async</code>","text":"<pre><code>get_account_rewards_export(\n    account: str, dt_from: datetime, dt_to: datetime\n) -&gt; GetAccountRewardsExportResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Account Rewards Export for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_account_rewards_export</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_account_rewards_export(self, account: str, dt_from: datetime, dt_to: datetime) -&gt; GetAccountRewardsExportResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Account Rewards Export](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-reward-export)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_account_rewards_export`][cyhole.solscan.v2.interaction.Solscan._get_account_rewards_export].\n    \"\"\"\n    return await self._interaction._get_account_rewards_export(False, account, dt_from, dt_to)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_token_transfer","title":"get_token_transfer  <code>async</code>","text":"<pre><code>get_token_transfer(\n    token: str,\n    params: GetTokenTransferParam = GetTokenTransferParam(),\n) -&gt; GetTokenTransferResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Transfer for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_transfer</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_token_transfer(self, token: str, params: GetTokenTransferParam = GetTokenTransferParam()) -&gt; GetTokenTransferResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Transfer](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-transfer)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_transfer`][cyhole.solscan.v2.interaction.Solscan._get_token_transfer].\n    \"\"\"\n    return await self._interaction._get_token_transfer(False, token, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_token_defi_activities","title":"get_token_defi_activities  <code>async</code>","text":"<pre><code>get_token_defi_activities(\n    token: str,\n    params: GetTokenDefiActivitiesParam = GetTokenDefiActivitiesParam(),\n) -&gt; GetTokenDefiActivitiesResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token DeFi Activities for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_defi_activities</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_token_defi_activities(self, token: str, params: GetTokenDefiActivitiesParam = GetTokenDefiActivitiesParam()) -&gt; GetTokenDefiActivitiesResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token DeFi Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-defi-activities)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_defi_activities`][cyhole.solscan.v2.interaction.Solscan._get_token_defi_activities].\n    \"\"\"\n    return await self._interaction._get_token_defi_activities(False, token, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_token_markets","title":"get_token_markets  <code>async</code>","text":"<pre><code>get_token_markets(\n    tokens: str | list[str],\n    program_address: str | list[str] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetTokenMarketsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Markets for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_markets</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_token_markets(\n    self,\n    tokens: str | list[str],\n    program_address: str | list[str] | None  = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value\n) -&gt; GetTokenMarketsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Markets](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-markets)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_markets`][cyhole.solscan.v2.interaction.Solscan._get_token_markets].\n    \"\"\"\n    return await self._interaction._get_token_markets(False, tokens, program_address, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_token_list","title":"get_token_list  <code>async</code>","text":"<pre><code>get_token_list(\n    sort_by: str = SolscanSortType.MARKET_CAP.value,\n    order_by: str = SolscanOrderType.DESCENDING.value,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetTokenListResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token List for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_list</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_token_list(\n    self,\n    sort_by: str = SolscanSortType.MARKET_CAP.value,\n    order_by: str = SolscanOrderType.DESCENDING.value,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value\n) -&gt; GetTokenListResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token List](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-list)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_list`][cyhole.solscan.v2.interaction.Solscan._get_token_list].\n    \"\"\"\n    return await self._interaction._get_token_list(False, sort_by, order_by, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_token_trending","title":"get_token_trending  <code>async</code>","text":"<pre><code>get_token_trending(\n    limit: int = 10,\n) -&gt; GetTokenTrendingResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Trending for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_trending</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_token_trending(self, limit: int = 10) -&gt; GetTokenTrendingResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Trending](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-trending)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_trending`][cyhole.solscan.v2.interaction.Solscan._get_token_trending].\n    \"\"\"\n    return await self._interaction._get_token_trending(False, limit)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_token_price","title":"get_token_price  <code>async</code>","text":"<pre><code>get_token_price(\n    token: str,\n    time_range: (\n        datetime | tuple[datetime, datetime]\n    ) = datetime.now(),\n) -&gt; GetTokenPriceResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Price for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_price</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_token_price(self, token: str, time_range: datetime | tuple[datetime, datetime] = datetime.now()) -&gt; GetTokenPriceResponse:                \n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Price](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-price)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_price`][cyhole.solscan.v2.interaction.Solscan._get_token_price].\n    \"\"\"\n    return await self._interaction._get_token_price(False, token, time_range)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_token_holders","title":"get_token_holders  <code>async</code>","text":"<pre><code>get_token_holders(\n    token: str,\n    amount_range: tuple[int, int] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetTokenHoldersResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Holders for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_holders</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_token_holders(self, token: str, amount_range: tuple[int, int] | None = None, page: int = 1, page_size: int = SolscanPageSizeType.SIZE_10.value) -&gt; GetTokenHoldersResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Holders](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-holders)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_holders`][cyhole.solscan.v2.interaction.Solscan._get_token_holders].\n    \"\"\"\n    return await self._interaction._get_token_holders(False, token, amount_range, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_token_meta","title":"get_token_meta  <code>async</code>","text":"<pre><code>get_token_meta(token: str) -&gt; GetTokenMetaResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Token Meta for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_token_meta</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_token_meta(self, token: str) -&gt; GetTokenMetaResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Token Meta](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-meta)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_token_meta`][cyhole.solscan.v2.interaction.Solscan._get_token_meta].\n    \"\"\"\n    return await self._interaction._get_token_meta(False, token)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_nft_news","title":"get_nft_news  <code>async</code>","text":"<pre><code>get_nft_news(\n    filter: str = \"created_time\",\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; GetNFTNewsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET NFT News for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_nft_news</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_nft_news(self, filter: str = \"created_time\", page: int = 1, page_size: int = SolscanNFTPageSizeType.SIZE_12.value) -&gt; GetNFTNewsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[NFT News](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-news)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_nft_news`][cyhole.solscan.v2.interaction.Solscan._get_nft_news].\n    \"\"\"\n    return await self._interaction._get_nft_news(False, filter, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_nft_activities","title":"get_nft_activities  <code>async</code>","text":"<pre><code>get_nft_activities(\n    params: GetNFTActivitiesParam = GetNFTActivitiesParam(),\n) -&gt; GetNFTActivitiesResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET NFT Activities for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_nft_activities</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_nft_activities(self, params: GetNFTActivitiesParam = GetNFTActivitiesParam()) -&gt; GetNFTActivitiesResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[NFT Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-activities)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_nft_activities`][cyhole.solscan.v2.interaction.Solscan._get_nft_activities].\n    \"\"\"\n    return await self._interaction._get_nft_activities(False, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_nft_collection_lists","title":"get_nft_collection_lists  <code>async</code>","text":"<pre><code>get_nft_collection_lists(\n    params: GetNFTCollectionListsParam = GetNFTCollectionListsParam(),\n) -&gt; GetNFTCollectionListsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET NFT Collection Lists for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_nft_collection_lists</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_nft_collection_lists(self, params: GetNFTCollectionListsParam = GetNFTCollectionListsParam()) -&gt; GetNFTCollectionListsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[NFT Collection Lists](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-collection-lists)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_nft_collection_lists`][cyhole.solscan.v2.interaction.Solscan._get_nft_collection_lists].\n    \"\"\"\n    return await self._interaction._get_nft_collection_lists(False, params)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_nft_collection_items","title":"get_nft_collection_items  <code>async</code>","text":"<pre><code>get_nft_collection_items(\n    collection: str,\n    sort_by: str = SolscanNFTItemSortType.LAST_TRADE.value,\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; GetNFTCollectionItemsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET NFT Collection Items for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_nft_collection_items</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_nft_collection_items(\n    self,\n    collection: str,\n    sort_by: str = SolscanNFTItemSortType.LAST_TRADE.value,\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value\n) -&gt; GetNFTCollectionItemsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[NFT Collection Items](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-collection-items)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_nft_collection_items`][cyhole.solscan.v2.interaction.Solscan._get_nft_collection_items].\n    \"\"\"\n    return await self._interaction._get_nft_collection_items(False, collection, sort_by, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_transaction_last","title":"get_transaction_last  <code>async</code>","text":"<pre><code>get_transaction_last(\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n    filter: str = SolscanTransactionFilterType.EXCEPT_VOTE.value,\n) -&gt; GetTransactionLastResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Transaction Last for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_transaction_last</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_transaction_last(self, limit: int = SolscanReturnLimitType.LIMIT_10.value, filter: str = SolscanTransactionFilterType.EXCEPT_VOTE.value) -&gt; GetTransactionLastResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Transaction Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-transaction-last)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_transaction_last`][cyhole.solscan.v2.interaction.Solscan._get_transaction_last].\n    \"\"\"\n    return await self._interaction._get_transaction_last(False, limit, filter)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_transaction_actions","title":"get_transaction_actions  <code>async</code>","text":"<pre><code>get_transaction_actions(\n    transaction: str,\n) -&gt; GetTransactionActionsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Transaction Actions for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_transaction_actions</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_transaction_actions(self, transaction: str) -&gt; GetTransactionActionsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Transaction Actions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-transaction-actions)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_transaction_actions`][cyhole.solscan.v2.interaction.Solscan._get_transaction_actions].\n    \"\"\"\n    return await self._interaction._get_transaction_actions(False, transaction)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_block_last","title":"get_block_last  <code>async</code>","text":"<pre><code>get_block_last(\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetBlockLastResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Block Last for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_block_last</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_block_last(self, page_size: int = SolscanPageSizeType.SIZE_10.value) -&gt; GetBlockLastResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Block Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-block-last)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_last`][cyhole.solscan.v2.interaction.Solscan._get_block_last].\n    \"\"\"\n    return await self._interaction._get_block_last(False, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_block_transactions","title":"get_block_transactions  <code>async</code>","text":"<pre><code>get_block_transactions(\n    block: int,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetBlockTransactionsResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Block Transactions for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_block_transactions</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_block_transactions(self, block: int, page: int = 1, page_size: int = SolscanPageSizeType.SIZE_10.value) -&gt; GetBlockTransactionsResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Block Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-block-transactions)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_transactions`][cyhole.solscan.v2.interaction.Solscan._get_block_transactions].\n    \"\"\"\n    return await self._interaction._get_block_transactions(False, block, page, page_size)\n</code></pre>"},{"location":"interactions/solscan/v2/client.html#cyhole.solscan.v2.client.SolscanAsyncClient.get_block_detail","title":"get_block_detail  <code>async</code>","text":"<pre><code>get_block_detail(block: int) -&gt; GetBlockDetailResponse\n</code></pre> <p>Call the Solscan's V2 API endpoint GET Block Detail for asynchronous logic.  All the API endopint details are available on <code>Solscan._get_block_detail</code>.</p> Source code in <code>src/cyhole/solscan/v2/client.py</code> <pre><code>async def get_block_detail(self, block: int) -&gt; GetBlockDetailResponse:\n    \"\"\"\n        Call the Solscan's **V2** API endpoint GET **[Block Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-block-detail)** for asynchronous logic. \n        All the API endopint details are available on [`Solscan._get_block_detail`][cyhole.solscan.v2.interaction.Solscan._get_block_detail].\n    \"\"\"\n    return await self._interaction._get_block_detail(False, block)\n</code></pre>"},{"location":"interactions/solscan/v2/exception.html","title":"Exceptions","text":""},{"location":"interactions/solscan/v2/exception.html#cyhole.solscan.v2.exception","title":"cyhole.solscan.v2.exception","text":""},{"location":"interactions/solscan/v2/exception.html#cyhole.solscan.v2.exception.SolscanException","title":"SolscanException","text":"<pre><code>SolscanException(description)\n</code></pre> <p>               Bases: <code>CyholeException</code></p> <p>General Exception for Solscan API.</p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/solscan/v2/exception.html#cyhole.solscan.v2.exception.SolscanInvalidAmountRange","title":"SolscanInvalidAmountRange","text":"<pre><code>SolscanInvalidAmountRange(description)\n</code></pre> <p>               Bases: <code>SolscanException</code></p> <p>Exception raised when the amount range is invalid.</p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/solscan/v2/exception.html#cyhole.solscan.v2.exception.SolscanInvalidTimeRange","title":"SolscanInvalidTimeRange","text":"<pre><code>SolscanInvalidTimeRange(description)\n</code></pre> <p>               Bases: <code>SolscanException</code></p> <p>Exception raised when the time range is invalid.</p> Source code in <code>src/cyhole/core/exception.py</code> <pre><code>def __init__(self, description):\n    self.description = description\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html","title":"Interaction","text":""},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan","title":"cyhole.solscan.v2.Solscan","text":"<pre><code>Solscan(api_key: str | None = None)\n</code></pre> <p>               Bases: <code>Interaction</code></p> <p>Class used to connect only Solscan V2 API, one of them most popular Solana chain explorer.  To have access Solscan Pro API is required to have a valid API key.</p> <p>Check API Documentation for all the details on the available endpoints.</p> <p>Solscan API is currently divided into two versions:</p> <ul> <li>v1 - the first and classic version of the Pro API.</li> <li>v2 - a new and improved version of the Pro API, with more endpoints and features.     This version is under development and may have some changes.</li> </ul> <p>Info</p> <p>This <code>Interaction</code> is dedicated to the Solscan Pro API v2.0. Use <code>cyhole.solscan.SolscanV1</code> or <code>cyhole.solscan.v1.Solscan</code> for the Solscan Pro API v1.0. If the API key is not provided during the object creation, then it is automatically  retrieved from environment variable <code>SOLSCAN_API_V2_KEY</code>.</p> <p>Parameters:</p> Name Type Description Default <code>api_key</code> <code>str | None</code> <p>specifies the API key for Solscan Pro API v2.</p> <code>None</code> <p>Example</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def __init__(self, api_key: str | None = None) -&gt; None:\n\n    # set API\n    self.api_key = api_key if api_key is not None else os.environ.get(\"SOLSCAN_API_V2_KEY\")\n    if self.api_key is None:\n        raise MissingAPIKeyError(\"no API key is provided during object's creation.\")\n\n    # headers setup\n    headers = {\n        \"token\": self.api_key\n    }\n    super().__init__(headers)\n    self.headers: dict[str, str]\n\n    # clients\n    self.client = SolscanClient(self, headers = self.headers)\n    self.async_client = SolscanAsyncClient(self, headers = self.headers)\n\n    # API urls\n    self.base_url = \"https://pro-api.solscan.io/v2.0/\"\n\n    # private attributes\n    self._name = \"Solscan V2 API\"\n    self._description = \"Interact with Solscan API V2\"\n    return\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_account_transfers","title":"_get_account_transfers","text":"<pre><code>_get_account_transfers(\n    sync: Literal[True],\n    account: str,\n    params: GetAccountTransferParam = GetAccountTransferParam(),\n) -&gt; GetAccountTransferResponse\n</code></pre><pre><code>_get_account_transfers(\n    sync: Literal[False],\n    account: str,\n    params: GetAccountTransferParam = GetAccountTransferParam(),\n) -&gt; Coroutine[None, None, GetAccountTransferResponse]\n</code></pre> <pre><code>_get_account_transfers(\n    sync: bool,\n    account: str,\n    params: GetAccountTransferParam = GetAccountTransferParam(),\n) -&gt; (\n    GetAccountTransferResponse\n    | Coroutine[None, None, GetAccountTransferResponse]\n)\n</code></pre> <p>This function refers to the GET Account Transfer of V2 API endpoint,  and it is used to get transfers of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>params</code> <code>GetAccountTransferParam</code> <p>The parameters to be used in the request. More details in the object definition.</p> <code>GetAccountTransferParam()</code> <p>Returns:</p> Type Description <code>GetAccountTransferResponse | Coroutine[None, None, GetAccountTransferResponse]</code> <p>List of transfers of the account.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_account_transfers(self, sync: bool, account: str, params: GetAccountTransferParam = GetAccountTransferParam()) -&gt; GetAccountTransferResponse | Coroutine[None, None, GetAccountTransferResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Transfer](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-transfer)** of **V2** API endpoint, \n        and it is used to get transfers of an account.\n\n        Parameters:\n            account: The account address.\n            params: The parameters to be used in the request.\n                More details in the object definition.\n\n        Returns:\n            List of transfers of the account.\n    \"\"\"\n    # set params\n    url = self.base_url + \"account/transfer\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n    api_params[\"address\"] = account\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountTransferResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_account_token_nft_account","title":"_get_account_token_nft_account","text":"<pre><code>_get_account_token_nft_account(\n    sync: Literal[True],\n    account: str,\n    account_type: str,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n    hide_zero: bool = True,\n) -&gt; GetAccountTokenNFTAccountResponse\n</code></pre><pre><code>_get_account_token_nft_account(\n    sync: Literal[False],\n    account: str,\n    account_type: str,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n    hide_zero: bool = True,\n) -&gt; Coroutine[\n    None, None, GetAccountTokenNFTAccountResponse\n]\n</code></pre> <pre><code>_get_account_token_nft_account(\n    sync: bool,\n    account: str,\n    account_type: str,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n    hide_zero: bool = True,\n) -&gt; (\n    GetAccountTokenNFTAccountResponse\n    | Coroutine[\n        None, None, GetAccountTokenNFTAccountResponse\n    ]\n)\n</code></pre> <p>This function refers to the GET Account Token/NFT Account of V2 API endpoint,  and it is used to get the NFT/Tokens' accounts of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>account_type</code> <code>str</code> <p>The account type (NFT/Token). The supported types are available on <code>SolscanAccountType</code>.</p> required <code>page</code> <code>int</code> <p>The page number.</p> <code>1</code> <code>page_size</code> <code>int</code> <p>The number of accounts per page. The supported types are available on <code>SolscanPageSizeType</code>.</p> <code>SolscanPageSizeType.SIZE_10.value</code> <code>hide_zero</code> <code>bool</code> <p>Hide zero balances accounts.</p> <code>True</code> <p>Returns:</p> Type Description <code>GetAccountTokenNFTAccountResponse | Coroutine[None, None, GetAccountTokenNFTAccountResponse]</code> <p>List of NFT/Tokens accountS.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_account_token_nft_account(\n    self,\n    sync: bool,\n    account: str,\n    account_type: str,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n    hide_zero: bool = True\n) -&gt; GetAccountTokenNFTAccountResponse | Coroutine[None, None, GetAccountTokenNFTAccountResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Token/NFT Account](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-token-nft-account)** of **V2** API endpoint, \n        and it is used to get the NFT/Tokens' accounts of an account.\n\n        Parameters:\n            account: The account address.\n            account_type: The account type (NFT/Token).\n                The supported types are available on [`SolscanAccountType`][cyhole.solscan.v2.param.SolscanAccountType].\n            page: The page number.\n            page_size: The number of accounts per page.\n                The supported types are available on [`SolscanPageSizeType`][cyhole.solscan.v2.param.SolscanPageSizeType].\n            hide_zero: Hide zero balances accounts.\n\n        Returns:\n            List of NFT/Tokens accountS.\n    \"\"\"\n    # check param consistency\n    SolscanAccountType.check(account_type)\n    SolscanPageSizeType.check(page_size)\n\n    # set params\n    url = self.base_url + \"account/token-accounts\"\n    api_params = {\n        \"address\": account,\n        \"type\": account_type,\n        \"page\": page,\n        \"page_size\": page_size,\n        \"hide_zero\": \"true\" if hide_zero else \"false\"\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountTokenNFTAccountResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_account_defi_activities","title":"_get_account_defi_activities","text":"<pre><code>_get_account_defi_activities(\n    sync: Literal[True],\n    account: str,\n    params: GetAccountDefiActivitiesParam = GetAccountDefiActivitiesParam(),\n) -&gt; GetAccountDefiActivitiesResponse\n</code></pre><pre><code>_get_account_defi_activities(\n    sync: Literal[False],\n    account: str,\n    params: GetAccountDefiActivitiesParam = GetAccountDefiActivitiesParam(),\n) -&gt; Coroutine[\n    None, None, GetAccountDefiActivitiesResponse\n]\n</code></pre> <pre><code>_get_account_defi_activities(\n    sync: bool,\n    account: str,\n    params: GetAccountDefiActivitiesParam = GetAccountDefiActivitiesParam(),\n) -&gt; (\n    GetAccountDefiActivitiesResponse\n    | Coroutine[\n        None, None, GetAccountDefiActivitiesResponse\n    ]\n)\n</code></pre> <p>This function refers to the GET Account DeFi Activities of V2 API endpoint,  and it is used to get the DeFi activities of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>params</code> <code>GetAccountDefiActivitiesParam</code> <p>The parameters to be used in the request.</p> <code>GetAccountDefiActivitiesParam()</code> <p>Returns:</p> Type Description <code>GetAccountDefiActivitiesResponse | Coroutine[None, None, GetAccountDefiActivitiesResponse]</code> <p>List of DeFi activities.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_account_defi_activities(self, sync: bool, account: str, params: GetAccountDefiActivitiesParam = GetAccountDefiActivitiesParam()) -&gt; GetAccountDefiActivitiesResponse | Coroutine[None, None, GetAccountDefiActivitiesResponse]:\n    \"\"\"\n        This function refers to the GET **[Account DeFi Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-defi-activities)** of **V2** API endpoint, \n        and it is used to get the DeFi activities of an account.\n\n        Parameters:\n            account: The account address.\n            params: The parameters to be used in the request.\n\n        Returns:\n            List of DeFi activities.\n    \"\"\"\n    # set params\n    url = self.base_url + \"account/defi/activities\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n    api_params[\"address\"] = account\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountDefiActivitiesResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_account_balance_change_activities","title":"_get_account_balance_change_activities","text":"<pre><code>_get_account_balance_change_activities(\n    sync: Literal[True],\n    account: str,\n    params: GetAccountBalanceChangeActivitiesParam = GetAccountBalanceChangeActivitiesParam(),\n) -&gt; GetAccountBalanceChangeActivitiesResponse\n</code></pre><pre><code>_get_account_balance_change_activities(\n    sync: Literal[False],\n    account: str,\n    params: GetAccountBalanceChangeActivitiesParam = GetAccountBalanceChangeActivitiesParam(),\n) -&gt; Coroutine[\n    None, None, GetAccountBalanceChangeActivitiesResponse\n]\n</code></pre> <pre><code>_get_account_balance_change_activities(\n    sync: bool,\n    account: str,\n    params: GetAccountBalanceChangeActivitiesParam = GetAccountBalanceChangeActivitiesParam(),\n) -&gt; (\n    GetAccountBalanceChangeActivitiesResponse\n    | Coroutine[\n        None,\n        None,\n        GetAccountBalanceChangeActivitiesResponse,\n    ]\n)\n</code></pre> <p>This function refers to the GET Account Balance Change Activities of V2 API endpoint,  and it is used to get the balance change activities of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>params</code> <code>GetAccountBalanceChangeActivitiesParam</code> <p>The parameters to be used in the request.</p> <code>GetAccountBalanceChangeActivitiesParam()</code> <p>Returns:</p> Type Description <code>GetAccountBalanceChangeActivitiesResponse | Coroutine[None, None, GetAccountBalanceChangeActivitiesResponse]</code> <p>List of balance change activities.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_account_balance_change_activities(self, sync: bool, account: str, params: GetAccountBalanceChangeActivitiesParam = GetAccountBalanceChangeActivitiesParam()) -&gt; GetAccountBalanceChangeActivitiesResponse | Coroutine[None, None, GetAccountBalanceChangeActivitiesResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Balance Change Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-balance_change)** of **V2** API endpoint, \n        and it is used to get the balance change activities of an account.\n\n        Parameters:\n            account: The account address.\n            params: The parameters to be used in the request.\n\n        Returns:\n            List of balance change activities.\n    \"\"\"\n    # set params\n    url = self.base_url + \"account/balance_change\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n    api_params[\"address\"] = account\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountBalanceChangeActivitiesResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_account_transactions","title":"_get_account_transactions","text":"<pre><code>_get_account_transactions(\n    sync: Literal[True],\n    account: str,\n    before_transaction: str | None = None,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; GetAccountTransactionsResponse\n</code></pre><pre><code>_get_account_transactions(\n    sync: Literal[False],\n    account: str,\n    before_transaction: str | None = None,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; Coroutine[None, None, GetAccountTransactionsResponse]\n</code></pre> <pre><code>_get_account_transactions(\n    sync: bool,\n    account: str,\n    before_transaction: str | None = None,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; (\n    GetAccountTransactionsResponse\n    | Coroutine[None, None, GetAccountTransactionsResponse]\n)\n</code></pre> <p>This function refers to the GET Account Transactions of V2 API endpoint,  and it is used to get the latest transactions of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>before_transaction</code> <code>str | None</code> <p>The signature of the latest transaction of previous page.</p> <code>None</code> <code>limit</code> <code>int</code> <p>The number of transactions to be returned. The supported types are available on <code>SolscanReturnLimitType</code>.</p> <code>SolscanReturnLimitType.LIMIT_10.value</code> <p>Returns:</p> Type Description <code>GetAccountTransactionsResponse | Coroutine[None, None, GetAccountTransactionsResponse]</code> <p>List of transactions of the account.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_account_transactions(self, sync: bool, account: str, before_transaction: str | None = None, limit: int = SolscanReturnLimitType.LIMIT_10.value) -&gt; GetAccountTransactionsResponse | Coroutine[None, None, GetAccountTransactionsResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-transactions)** of **V2** API endpoint, \n        and it is used to get the latest transactions of an account.\n\n        Parameters:\n            account: The account address.\n            before_transaction: The signature of the latest transaction of previous page.\n            limit: The number of transactions to be returned.\n                The supported types are available on [`SolscanReturnLimitType`][cyhole.solscan.v2.param.SolscanReturnLimitType].\n\n        Returns:\n            List of transactions of the account.\n    \"\"\"\n    # check param consistency\n    SolscanReturnLimitType.check(limit)\n\n    # set params\n    url = self.base_url + \"account/transactions\"\n    api_params = {\n        \"address\": account,\n        \"before\": before_transaction,\n        \"limit\": limit\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountTransactionsResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_account_stake","title":"_get_account_stake","text":"<pre><code>_get_account_stake(\n    sync: Literal[True],\n    account: str,\n    page: int = 1,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; GetAccountStakeResponse\n</code></pre><pre><code>_get_account_stake(\n    sync: Literal[False],\n    account: str,\n    page: int = 1,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; Coroutine[None, None, GetAccountStakeResponse]\n</code></pre> <pre><code>_get_account_stake(\n    sync: bool,\n    account: str,\n    page: int = 1,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n) -&gt; (\n    GetAccountStakeResponse\n    | Coroutine[None, None, GetAccountStakeResponse]\n)\n</code></pre> <p>This function refers to the GET Account Stake of V2 API endpoint,  and it is used to get the staking activities of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>page</code> <code>int</code> <p>The page number.</p> <code>1</code> <code>limit</code> <code>int</code> <p>The number of staking activities to be returned. The supported types are available on <code>SolscanReturnLimitType</code>.</p> <code>SolscanReturnLimitType.LIMIT_10.value</code> <p>Returns:</p> Type Description <code>GetAccountStakeResponse | Coroutine[None, None, GetAccountStakeResponse]</code> <p>List of staking activities of the account.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_account_stake(self, sync: bool, account: str, page: int = 1, limit: int = SolscanReturnLimitType.LIMIT_10.value) -&gt; GetAccountStakeResponse | Coroutine[None, None, GetAccountStakeResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Stake](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-stake)** of **V2** API endpoint, \n        and it is used to get the staking activities of an account.\n\n        Parameters:\n            account: The account address.\n            page: The page number.\n            limit: The number of staking activities to be returned.\n                The supported types are available on [`SolscanReturnLimitType`][cyhole.solscan.v2.param.SolscanReturnLimitType].\n\n        Returns:\n            List of staking activities of the account.\n    \"\"\"\n    # check param consistency\n    SolscanReturnLimitType.check(limit)\n\n    # set params\n    url = self.base_url + \"account/stake\"\n    api_params = {\n        \"address\": account,\n        \"page\": page,\n        \"page_size\": limit\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountStakeResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_account_detail","title":"_get_account_detail","text":"<pre><code>_get_account_detail(\n    sync: Literal[True], account: str\n) -&gt; GetAccountDetailResponse\n</code></pre><pre><code>_get_account_detail(\n    sync: Literal[False], account: str\n) -&gt; Coroutine[None, None, GetAccountDetailResponse]\n</code></pre> <pre><code>_get_account_detail(\n    sync: bool, account: str\n) -&gt; (\n    GetAccountDetailResponse\n    | Coroutine[None, None, GetAccountDetailResponse]\n)\n</code></pre> <p>This function refers to the GET Account Detail of V2 API endpoint,  and it is used to get the detail of an account.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <p>Returns:</p> Type Description <code>GetAccountDetailResponse | Coroutine[None, None, GetAccountDetailResponse]</code> <p>Detail of the account.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_account_detail(self, sync: bool, account: str) -&gt; GetAccountDetailResponse | Coroutine[None, None, GetAccountDetailResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-detail)** of **V2** API endpoint, \n        and it is used to get the detail of an account.\n\n        Parameters:\n            account: The account address.\n\n        Returns:\n            Detail of the account.\n    \"\"\"\n    # set params\n    url = self.base_url + \"account/detail\"\n    api_params = {\n        \"address\": account\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetAccountDetailResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_account_rewards_export","title":"_get_account_rewards_export","text":"<pre><code>_get_account_rewards_export(\n    sync: Literal[True],\n    account: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; GetAccountRewardsExportResponse\n</code></pre><pre><code>_get_account_rewards_export(\n    sync: Literal[False],\n    account: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; Coroutine[None, None, GetAccountRewardsExportResponse]\n</code></pre> <pre><code>_get_account_rewards_export(\n    sync: bool,\n    account: str,\n    dt_from: datetime,\n    dt_to: datetime,\n) -&gt; (\n    GetAccountRewardsExportResponse\n    | Coroutine[None, None, GetAccountRewardsExportResponse]\n)\n</code></pre> <p>This function refers to the GET Account Rewards Export of V2 API endpoint,  and it is used to get export rewards of an account in CSV format.</p> <p>Info</p> <p>The limit of the export rewards is 5000 for request.  Moreover, it is possible to execute the request only 1 time for every minute.</p> <p>Parameters:</p> Name Type Description Default <code>account</code> <code>str</code> <p>The account address.</p> required <code>dt_from</code> <code>datetime</code> <p>The start time.</p> required <code>dt_to</code> <code>datetime</code> <p>The end time.</p> required <p>Returns:</p> Type Description <code>GetAccountRewardsExportResponse | Coroutine[None, None, GetAccountRewardsExportResponse]</code> <p>List of export rewards of the account.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_account_rewards_export(self, sync: bool, account: str, dt_from: datetime, dt_to: datetime) -&gt; GetAccountRewardsExportResponse | Coroutine[None, None, GetAccountRewardsExportResponse]:\n    \"\"\"\n        This function refers to the GET **[Account Rewards Export](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-account-reward-export)** of **V2** API endpoint, \n        and it is used to get export rewards of an account in CSV format.\n\n        !!! info\n            The limit of the export rewards is 5000 for request. \n            Moreover, it is possible to execute the request **only** 1 time for every minute.\n\n        Parameters:\n            account: The account address.\n            dt_from: The start time.\n            dt_to: The end time.\n\n        Returns:\n            List of export rewards of the account.\n    \"\"\"\n\n    # set params\n    url = self.base_url + \"account/reward/export\"\n    api_params = {\n        \"address\": account,\n        \"time_from\": int(dt_from.timestamp()),\n        \"time_to\": int(dt_to.timestamp())\n    }\n\n    # execute request\n    if sync:\n        content_raw = self.client.api(RequestType.GET.value, url, params = api_params)\n        return GetAccountRewardsExportResponse(csv = content_raw.text)\n    else:\n        async def async_request():\n            content_raw = await self.async_client.api(RequestType.GET.value, url, params = api_params)\n            return GetAccountRewardsExportResponse(csv = content_raw.text)\n        return async_request()\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_token_transfer","title":"_get_token_transfer","text":"<pre><code>_get_token_transfer(\n    sync: Literal[True],\n    token: str,\n    params: GetTokenTransferParam = GetTokenTransferParam(),\n) -&gt; GetTokenTransferResponse\n</code></pre><pre><code>_get_token_transfer(\n    sync: Literal[False],\n    token: str,\n    params: GetTokenTransferParam = GetTokenTransferParam(),\n) -&gt; Coroutine[None, None, GetTokenTransferResponse]\n</code></pre> <pre><code>_get_token_transfer(\n    sync: bool,\n    token: str,\n    params: GetTokenTransferParam = GetTokenTransferParam(),\n) -&gt; (\n    GetTokenTransferResponse\n    | Coroutine[None, None, GetTokenTransferResponse]\n)\n</code></pre> <p>This function refers to the GET Token Transfer of V2 API endpoint,  and it is used to get transfers of a token.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str</code> <p>The token address.</p> required <code>params</code> <code>GetTokenTransferParam</code> <p>The parameters to be used in the request. More details in the object definition.</p> <code>GetTokenTransferParam()</code> <p>Returns:</p> Type Description <code>GetTokenTransferResponse | Coroutine[None, None, GetTokenTransferResponse]</code> <p>List of transfers of the token.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_token_transfer(self, sync: bool, token: str, params: GetTokenTransferParam = GetTokenTransferParam()) -&gt; GetTokenTransferResponse | Coroutine[None, None, GetTokenTransferResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Transfer](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-transfer)** of **V2** API endpoint, \n        and it is used to get transfers of a token.\n\n        Parameters:\n            token: The token address.\n            params: The parameters to be used in the request.\n                More details in the object definition.\n\n        Returns:\n            List of transfers of the token.\n    \"\"\"\n    # set params\n    url = self.base_url + \"token/transfer\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n    api_params[\"address\"] = token\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenTransferResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_token_defi_activities","title":"_get_token_defi_activities","text":"<pre><code>_get_token_defi_activities(\n    sync: Literal[True],\n    token: str,\n    params: GetTokenDefiActivitiesParam = GetTokenDefiActivitiesParam(),\n) -&gt; GetTokenDefiActivitiesResponse\n</code></pre><pre><code>_get_token_defi_activities(\n    sync: Literal[False],\n    token: str,\n    params: GetTokenDefiActivitiesParam = GetTokenDefiActivitiesParam(),\n) -&gt; Coroutine[None, None, GetTokenDefiActivitiesResponse]\n</code></pre> <pre><code>_get_token_defi_activities(\n    sync: bool,\n    token: str,\n    params: GetTokenDefiActivitiesParam = GetTokenDefiActivitiesParam(),\n) -&gt; (\n    GetTokenDefiActivitiesResponse\n    | Coroutine[None, None, GetTokenDefiActivitiesResponse]\n)\n</code></pre> <p>This function refers to the GET Token DeFi Activities of V2 API endpoint,  and it is used to get the DeFi activities of a token.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str</code> <p>The token address.</p> required <code>params</code> <code>GetTokenDefiActivitiesParam</code> <p>The parameters to be used in the request. More details in the object definition.</p> <code>GetTokenDefiActivitiesParam()</code> <p>Returns:</p> Type Description <code>GetTokenDefiActivitiesResponse | Coroutine[None, None, GetTokenDefiActivitiesResponse]</code> <p>List of DeFi activities of the token.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_token_defi_activities(self, sync: bool, token: str, params: GetTokenDefiActivitiesParam = GetTokenDefiActivitiesParam()) -&gt; GetTokenDefiActivitiesResponse | Coroutine[None, None, GetTokenDefiActivitiesResponse]:\n    \"\"\"\n        This function refers to the GET **[Token DeFi Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-defi-activities)** of **V2** API endpoint, \n        and it is used to get the DeFi activities of a token.\n\n        Parameters:\n            token: The token address.\n            params: The parameters to be used in the request.\n                More details in the object definition.\n\n        Returns:\n            List of DeFi activities of the token.\n    \"\"\"\n    # set params\n    url = self.base_url + \"token/defi/activities\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n    api_params[\"address\"] = token\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenDefiActivitiesResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_token_markets","title":"_get_token_markets","text":"<pre><code>_get_token_markets(\n    sync: Literal[True],\n    tokens: str | list[str],\n    program_address: str | list[str] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetTokenMarketsResponse\n</code></pre><pre><code>_get_token_markets(\n    sync: Literal[False],\n    tokens: str | list[str],\n    program_address: str | list[str] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; Coroutine[None, None, GetTokenMarketsResponse]\n</code></pre> <pre><code>_get_token_markets(\n    sync: bool,\n    tokens: str | list[str],\n    program_address: str | list[str] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; (\n    GetTokenMarketsResponse\n    | Coroutine[None, None, GetTokenMarketsResponse]\n)\n</code></pre> <p>This function refers to the GET Token Markets of V2 API endpoint,  and it is used to get the markets data of a set of tokens.</p> <p>Parameters:</p> Name Type Description Default <code>tokens</code> <code>str | list[str]</code> <p>The token address or list of token addresses.</p> required <code>program_address</code> <code>str | list[str] | None</code> <p>The program address or list of program addresses.</p> <code>None</code> <code>page</code> <code>int</code> <p>The page number.</p> <code>1</code> <code>page_size</code> <code>int</code> <p>The number of markets per page. The supported types are available on <code>SolscanPageSizeType</code>.</p> <code>SolscanPageSizeType.SIZE_10.value</code> <p>Returns:</p> Type Description <code>GetTokenMarketsResponse | Coroutine[None, None, GetTokenMarketsResponse]</code> <p>List of markets of the token.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_token_markets(\n    self,\n    sync: bool,\n    tokens: str | list[str],\n    program_address: str | list[str] | None  = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value\n) -&gt; GetTokenMarketsResponse | Coroutine[None, None, GetTokenMarketsResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Markets](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-markets)** of **V2** API endpoint, \n        and it is used to get the markets data of a set of tokens.\n\n        Parameters:\n            tokens: The token address or list of token addresses.\n            program_address: The program address or list of program addresses.\n            page: The page number.\n            page_size: The number of markets per page.\n                The supported types are available on [`SolscanPageSizeType`][cyhole.solscan.v2.param.SolscanPageSizeType].\n\n        Returns:\n            List of markets of the token.\n    \"\"\"\n    # check param consistency\n    SolscanPageSizeType.check(page_size)\n\n    # set params\n    url = self.base_url + \"token/markets\"\n    api_params = {\n        \"token[]\": tokens,\n        \"program[]\": program_address,\n        \"page\": page,\n        \"page_size\": page_size\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenMarketsResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_token_list","title":"_get_token_list","text":"<pre><code>_get_token_list(\n    sync: Literal[True],\n    sort_by: str = SolscanSortType.MARKET_CAP.value,\n    order_by: str = SolscanOrderType.DESCENDING.value,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetTokenListResponse\n</code></pre><pre><code>_get_token_list(\n    sync: Literal[False],\n    sort_by: str = SolscanSortType.MARKET_CAP.value,\n    order_by: str = SolscanOrderType.DESCENDING.value,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; Coroutine[None, None, GetTokenListResponse]\n</code></pre> <pre><code>_get_token_list(\n    sync: bool,\n    sort_by: str = SolscanSortType.MARKET_CAP.value,\n    order_by: str = SolscanOrderType.DESCENDING.value,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; (\n    GetTokenListResponse\n    | Coroutine[None, None, GetTokenListResponse]\n)\n</code></pre> <p>This function refers to the GET Token List of V2 API endpoint,  and it is used to get the list of tokens.</p> <p>Parameters:</p> Name Type Description Default <code>sort_by</code> <code>str</code> <p>The sorting method. The supported types are available on <code>SolscanSortType</code>.</p> <code>SolscanSortType.MARKET_CAP.value</code> <code>order_by</code> <code>str</code> <p>The ordering to get the response. The supported types are available on <code>SolscanOrderType</code>.</p> <code>SolscanOrderType.DESCENDING.value</code> <code>page</code> <code>int</code> <p>The page number.</p> <code>1</code> <code>page_size</code> <code>int</code> <p>The number of tokens per page. The supported types are available on <code>SolscanPageSizeType</code>.</p> <code>SolscanPageSizeType.SIZE_10.value</code> <p>Returns:</p> Type Description <code>GetTokenListResponse | Coroutine[None, None, GetTokenListResponse]</code> <p>List of tokens.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_token_list(\n    self,\n    sync: bool,\n    sort_by: str = SolscanSortType.MARKET_CAP.value,\n    order_by: str = SolscanOrderType.DESCENDING.value,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value\n) -&gt; GetTokenListResponse | Coroutine[None, None, GetTokenListResponse]:\n    \"\"\"\n        This function refers to the GET **[Token List](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-list)** of **V2** API endpoint, \n        and it is used to get the list of tokens.\n\n        Parameters:\n            sort_by: The sorting method.\n                The supported types are available on [`SolscanSortType`][cyhole.solscan.v2.param.SolscanSortType].\n            order_by: The ordering to get the response.\n                The supported types are available on [`SolscanOrderType`][cyhole.solscan.v2.param.SolscanOrderType].\n            page: The page number.\n            page_size: The number of tokens per page.\n                The supported types are available on [`SolscanPageSizeType`][cyhole.solscan.v2.param.SolscanPageSizeType].\n\n        Returns:\n            List of tokens.\n    \"\"\"\n    # check param consistency\n    SolscanSortType.check(sort_by)\n    SolscanOrderType.check(order_by)\n    SolscanPageSizeType.check(page_size)\n\n    # set params\n    url = self.base_url + \"token/list\"\n    api_params = {\n        \"sort_by\": sort_by,\n        \"sort_order\": order_by,\n        \"page\": page,\n        \"page_size\": page_size\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenListResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_token_trending","title":"_get_token_trending","text":"<pre><code>_get_token_trending(\n    sync: Literal[True], limit: int = 10\n) -&gt; GetTokenTrendingResponse\n</code></pre><pre><code>_get_token_trending(\n    sync: Literal[False], limit: int = 10\n) -&gt; Coroutine[None, None, GetTokenTrendingResponse]\n</code></pre> <pre><code>_get_token_trending(\n    sync: bool, limit: int = 10\n) -&gt; (\n    GetTokenTrendingResponse\n    | Coroutine[None, None, GetTokenTrendingResponse]\n)\n</code></pre> <p>This function refers to the GET Token Trending of V2 API endpoint,  and it is used to get the trending tokens on Solscan.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The number of trending tokens to be returned.</p> <code>10</code> <p>Returns:</p> Type Description <code>GetTokenTrendingResponse | Coroutine[None, None, GetTokenTrendingResponse]</code> <p>List of trending tokens.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_token_trending(self, sync: bool, limit: int = 10) -&gt; GetTokenTrendingResponse | Coroutine[None, None, GetTokenTrendingResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Trending](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-trending)** of **V2** API endpoint, \n        and it is used to get the trending tokens on Solscan.\n\n        Parameters:\n            limit: The number of trending tokens to be returned.\n\n        Returns:\n            List of trending tokens.\n    \"\"\"\n\n    # set params\n    url = self.base_url + \"token/trending\"\n    api_params = {\n        \"limit\": limit\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenTrendingResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_token_price","title":"_get_token_price","text":"<pre><code>_get_token_price(\n    sync: Literal[True],\n    token: str,\n    time_range: (\n        datetime | tuple[datetime, datetime]\n    ) = datetime.now(),\n) -&gt; GetTokenPriceResponse\n</code></pre><pre><code>_get_token_price(\n    sync: Literal[False],\n    token: str,\n    time_range: (\n        datetime | tuple[datetime, datetime]\n    ) = datetime.now(),\n) -&gt; Coroutine[None, None, GetTokenPriceResponse]\n</code></pre> <pre><code>_get_token_price(\n    sync: bool,\n    token: str,\n    time_range: (\n        datetime | tuple[datetime, datetime]\n    ) = datetime.now(),\n) -&gt; (\n    GetTokenPriceResponse\n    | Coroutine[None, None, GetTokenPriceResponse]\n)\n</code></pre> <p>This function refers to the GET Token Price of V2 API endpoint,  and it is used to get the price of a token.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str</code> <p>The token address.</p> required <code>time_range</code> <code>datetime | tuple[datetime, datetime]</code> <p>The time range. It can be a single datetime object or a tuple of two datetime objects.</p> <code>datetime.now()</code> <p>Returns:</p> Type Description <code>GetTokenPriceResponse | Coroutine[None, None, GetTokenPriceResponse]</code> <p>Price of the token.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_token_price(self, sync: bool, token: str, time_range: datetime | tuple[datetime, datetime] = datetime.now()) -&gt; GetTokenPriceResponse | Coroutine[None, None, GetTokenPriceResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Price](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-price)** of **V2** API endpoint, \n        and it is used to get the price of a token.\n\n        Parameters:\n            token: The token address.\n            time_range: The time range.\n                It can be a single datetime object or a tuple of two datetime objects.\n\n        Returns:\n            Price of the token.\n    \"\"\"\n    # check consistency and convert to string\n    time_range_str: list[str]\n    if isinstance(time_range, tuple):\n        # check consistency\n        if time_range[0] &gt; time_range[1]:\n            raise SolscanInvalidTimeRange(\"the start time is greater than the end time.\")\n        # convert to string\n        time_range_str = [time_range[0].strftime(\"%Y%m%d\"), time_range[1].strftime(\"%Y%m%d\")]\n    else:\n        time_range_str = [time_range.strftime(\"%Y%m%d\")]\n\n    # set params\n    url = self.base_url + \"token/price\"\n    api_params = {\n        \"address\": token,\n        \"time[]\": time_range_str\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenPriceResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_token_holders","title":"_get_token_holders","text":"<pre><code>_get_token_holders(\n    sync: Literal[True],\n    token: str,\n    amount_range: tuple[int, int] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetTokenHoldersResponse\n</code></pre><pre><code>_get_token_holders(\n    sync: Literal[False],\n    token: str,\n    amount_range: tuple[int, int] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; Coroutine[None, None, GetTokenHoldersResponse]\n</code></pre> <pre><code>_get_token_holders(\n    sync: bool,\n    token: str,\n    amount_range: tuple[int, int] | None = None,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; (\n    GetTokenHoldersResponse\n    | Coroutine[None, None, GetTokenHoldersResponse]\n)\n</code></pre> <p>This function refers to the GET Token Holders of V2 API endpoint,  and it is used to get the holders of a token.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str</code> <p>The token address.</p> required <code>amount_range</code> <code>tuple[int, int] | None</code> <p>The amount range. It can be a tuple of two integers (from, to).</p> <code>None</code> <code>page</code> <code>int</code> <p>The page number.</p> <code>1</code> <code>page_size</code> <code>int</code> <p>The number of holders per page. The supported types are available on <code>SolscanPageSizeType</code>.</p> <code>SolscanPageSizeType.SIZE_10.value</code> <p>Returns:</p> Type Description <code>GetTokenHoldersResponse | Coroutine[None, None, GetTokenHoldersResponse]</code> <p>List of holders of the token.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_token_holders(self, sync: bool, token: str, amount_range: tuple[int, int] | None = None, page: int = 1, page_size: int = SolscanPageSizeType.SIZE_10.value) -&gt; GetTokenHoldersResponse | Coroutine[None, None, GetTokenHoldersResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Holders](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-holders)** of **V2** API endpoint, \n        and it is used to get the holders of a token.\n\n        Parameters:\n            token: The token address.\n            amount_range: The amount range.\n                It can be a tuple of two integers (from, to).\n            page: The page number.\n            page_size: The number of holders per page.\n                The supported types are available on [`SolscanPageSizeType`][cyhole.solscan.v2.param.SolscanPageSizeType].\n\n        Returns:\n            List of holders of the token.\n    \"\"\"\n    from_amount = None\n    to_amount = None\n\n    # check param consistency\n    SolscanPageSizeType.check(page_size)\n\n    if amount_range:\n        if amount_range[0] &gt; amount_range[1]:\n            raise SolscanInvalidAmountRange(\"The start amount is greater than the end amount.\")\n\n        from_amount = str(amount_range[0])\n        to_amount = str(amount_range[1])\n\n    # set params\n    url = self.base_url + \"token/holders\"\n    api_params = {\n        \"address\": token,\n        \"from_amount\": from_amount,\n        \"to_amount\": to_amount,\n        \"page\": page,\n        \"page_size\": page_size\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenHoldersResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_token_meta","title":"_get_token_meta","text":"<pre><code>_get_token_meta(\n    sync: Literal[True], token: str\n) -&gt; GetTokenMetaResponse\n</code></pre><pre><code>_get_token_meta(\n    sync: Literal[False], token: str\n) -&gt; Coroutine[None, None, GetTokenMetaResponse]\n</code></pre> <pre><code>_get_token_meta(\n    sync: bool, token: str\n) -&gt; (\n    GetTokenMetaResponse\n    | Coroutine[None, None, GetTokenMetaResponse]\n)\n</code></pre> <p>This function refers to the GET Token Meta of V2 API endpoint,  and it is used to get the metadata of a token.</p> <p>Parameters:</p> Name Type Description Default <code>token</code> <code>str</code> <p>The token address.</p> required <p>Returns:</p> Type Description <code>GetTokenMetaResponse | Coroutine[None, None, GetTokenMetaResponse]</code> <p>Metadata of the token.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_token_meta(self, sync: bool, token: str) -&gt; GetTokenMetaResponse | Coroutine[None, None, GetTokenMetaResponse]:\n    \"\"\"\n        This function refers to the GET **[Token Meta](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-token-meta)** of **V2** API endpoint, \n        and it is used to get the metadata of a token.\n\n        Parameters:\n            token: The token address.\n\n        Returns:\n            Metadata of the token.\n    \"\"\"\n    # set params\n    url = self.base_url + \"token/meta\"\n    api_params = {\n        \"address\": token\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTokenMetaResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_nft_news","title":"_get_nft_news","text":"<pre><code>_get_nft_news(\n    sync: Literal[True],\n    filter: str = \"created_time\",\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; GetNFTNewsResponse\n</code></pre><pre><code>_get_nft_news(\n    sync: Literal[False],\n    filter: str = \"created_time\",\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; Coroutine[None, None, GetNFTNewsResponse]\n</code></pre> <pre><code>_get_nft_news(\n    sync: bool,\n    filter: str = \"created_time\",\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; (\n    GetNFTNewsResponse\n    | Coroutine[None, None, GetNFTNewsResponse]\n)\n</code></pre> <p>This function refers to the GET NFT News of V2 API endpoint,  and it is used to get the latest NFT news.</p> <p>Parameters:</p> Name Type Description Default <code>filter</code> <code>str</code> <p>The filter to be used.</p> <code>'created_time'</code> <code>page</code> <code>int</code> <p>The page number.</p> <code>1</code> <code>page_size</code> <code>int</code> <p>The number of NFT per page. The supported types are available on <code>SolscanNFTPageSizeType</code>.</p> <code>SolscanNFTPageSizeType.SIZE_12.value</code> <p>Returns:</p> Type Description <code>GetNFTNewsResponse | Coroutine[None, None, GetNFTNewsResponse]</code> <p>List of NFT news.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_nft_news(self, sync: bool, filter: str = \"created_time\", page: int = 1, page_size: int = SolscanNFTPageSizeType.SIZE_12.value) -&gt; GetNFTNewsResponse | Coroutine[None, None, GetNFTNewsResponse]:\n    \"\"\"\n        This function refers to the GET **[NFT News](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-news)** of **V2** API endpoint, \n        and it is used to get the latest NFT news.\n\n        Parameters:\n            filter: The filter to be used.\n            page: The page number.\n            page_size: The number of NFT per page.\n                The supported types are available on [`SolscanNFTPageSizeType`][cyhole.solscan.v2.param.SolscanNFTPageSizeType].\n\n        Returns:\n            List of NFT news.\n    \"\"\"\n    # check param consistency\n    SolscanNFTPageSizeType.check(page_size)\n\n    # set params\n    url = self.base_url + \"nft/news\"\n    api_params = {\n        \"filter\": filter,\n        \"page\": page,\n        \"page_size\": page_size\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetNFTNewsResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_nft_activities","title":"_get_nft_activities","text":"<pre><code>_get_nft_activities(\n    sync: Literal[True],\n    params: GetNFTActivitiesParam = GetNFTActivitiesParam(),\n) -&gt; GetNFTActivitiesResponse\n</code></pre><pre><code>_get_nft_activities(\n    sync: Literal[False],\n    params: GetNFTActivitiesParam = GetNFTActivitiesParam(),\n) -&gt; Coroutine[None, None, GetNFTActivitiesResponse]\n</code></pre> <pre><code>_get_nft_activities(\n    sync: bool,\n    params: GetNFTActivitiesParam = GetNFTActivitiesParam(),\n) -&gt; (\n    GetNFTActivitiesResponse\n    | Coroutine[None, None, GetNFTActivitiesResponse]\n)\n</code></pre> <p>This function refers to the GET NFT Activities of V2 API endpoint,  and it is used to get the NFT activities.</p> <p>Parameters:</p> Name Type Description Default <code>params</code> <code>GetNFTActivitiesParam</code> <p>The parameters to be used in the request. More details in the object definition.</p> <code>GetNFTActivitiesParam()</code> <p>Returns:</p> Type Description <code>GetNFTActivitiesResponse | Coroutine[None, None, GetNFTActivitiesResponse]</code> <p>List of NFT activities.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_nft_activities(self, sync: bool, params: GetNFTActivitiesParam = GetNFTActivitiesParam()) -&gt; GetNFTActivitiesResponse | Coroutine[None, None, GetNFTActivitiesResponse]:\n    \"\"\"\n        This function refers to the GET **[NFT Activities](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-activities)** of **V2** API endpoint, \n        and it is used to get the NFT activities.\n\n        Parameters:\n            params: The parameters to be used in the request.\n                More details in the object definition.\n\n        Returns:\n            List of NFT activities.\n    \"\"\"\n    # set params\n    url = self.base_url + \"nft/activities\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetNFTActivitiesResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_nft_collection_lists","title":"_get_nft_collection_lists","text":"<pre><code>_get_nft_collection_lists(\n    sync: Literal[True],\n    params: GetNFTCollectionListsParam = GetNFTCollectionListsParam(),\n) -&gt; GetNFTCollectionListsResponse\n</code></pre><pre><code>_get_nft_collection_lists(\n    sync: Literal[False],\n    params: GetNFTCollectionListsParam = GetNFTCollectionListsParam(),\n) -&gt; Coroutine[None, None, GetNFTCollectionListsResponse]\n</code></pre> <pre><code>_get_nft_collection_lists(\n    sync: bool,\n    params: GetNFTCollectionListsParam = GetNFTCollectionListsParam(),\n) -&gt; (\n    GetNFTCollectionListsResponse\n    | Coroutine[None, None, GetNFTCollectionListsResponse]\n)\n</code></pre> <p>This function refers to the GET NFT Collection Lists of V2 API endpoint,  and it is used to get the list of NFT collections.</p> <p>Parameters:</p> Name Type Description Default <code>params</code> <code>GetNFTCollectionListsParam</code> <p>The parameters to be used in the request. More details in the object definition.</p> <code>GetNFTCollectionListsParam()</code> <p>Returns:</p> Type Description <code>GetNFTCollectionListsResponse | Coroutine[None, None, GetNFTCollectionListsResponse]</code> <p>List of NFT collections.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_nft_collection_lists(self, sync: bool, params: GetNFTCollectionListsParam = GetNFTCollectionListsParam()) -&gt; GetNFTCollectionListsResponse | Coroutine[None, None, GetNFTCollectionListsResponse]:\n    \"\"\"\n        This function refers to the GET **[NFT Collection Lists](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-collection-lists)** of **V2** API endpoint, \n        and it is used to get the list of NFT collections.\n\n        Parameters:\n            params: The parameters to be used in the request.\n                More details in the object definition.\n\n        Returns:\n            List of NFT collections.\n    \"\"\"\n    # set params\n    url = self.base_url + \"nft/collection/lists\"\n    api_params = params.model_dump(\n        by_alias = True,\n        exclude_defaults = True\n    )\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetNFTCollectionListsResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_nft_collection_items","title":"_get_nft_collection_items","text":"<pre><code>_get_nft_collection_items(\n    sync: Literal[True],\n    collection: str,\n    sort_by: str = SolscanNFTItemSortType.LAST_TRADE.value,\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; GetNFTCollectionItemsResponse\n</code></pre><pre><code>_get_nft_collection_items(\n    sync: Literal[False],\n    collection: str,\n    sort_by: str = SolscanNFTItemSortType.LAST_TRADE.value,\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; Coroutine[None, None, GetNFTCollectionItemsResponse]\n</code></pre> <pre><code>_get_nft_collection_items(\n    sync: bool,\n    collection: str,\n    sort_by: str = SolscanNFTItemSortType.LAST_TRADE.value,\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value,\n) -&gt; (\n    GetNFTCollectionItemsResponse\n    | Coroutine[None, None, GetNFTCollectionItemsResponse]\n)\n</code></pre> <p>This function refers to the GET NFT Collection Items of V2 API endpoint,  and it is used to get the items of a NFT collection.</p> <p>Parameters:</p> Name Type Description Default <code>collection</code> <code>str</code> <p>The collection address.</p> required <code>sort_by</code> <code>str</code> <p>The sorting method. The supported types are available on <code>SolscanNFTItemSortType</code>.</p> <code>SolscanNFTItemSortType.LAST_TRADE.value</code> <code>page</code> <code>int</code> <p>The page number.</p> <code>1</code> <code>page_size</code> <code>int</code> <p>The number of items per page. The supported types are available on <code>SolscanNFTPageSizeType</code>.</p> <code>SolscanNFTPageSizeType.SIZE_12.value</code> <p>Returns:</p> Type Description <code>GetNFTCollectionItemsResponse | Coroutine[None, None, GetNFTCollectionItemsResponse]</code> <p>List of NFT items of the collection.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_nft_collection_items(\n    self,\n    sync: bool,\n    collection: str,\n    sort_by: str = SolscanNFTItemSortType.LAST_TRADE.value,\n    page: int = 1,\n    page_size: int = SolscanNFTPageSizeType.SIZE_12.value\n) -&gt; GetNFTCollectionItemsResponse | Coroutine[None, None, GetNFTCollectionItemsResponse]:\n    \"\"\"\n        This function refers to the GET **[NFT Collection Items](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-nft-collection-items)** of **V2** API endpoint, \n        and it is used to get the items of a NFT collection.\n\n        Parameters:\n            collection: The collection address.\n            sort_by: The sorting method.\n                The supported types are available on [`SolscanNFTItemSortType`][cyhole.solscan.v2.param.SolscanNFTItemSortType].\n            page: The page number.\n            page_size: The number of items per page.\n                The supported types are available on [`SolscanNFTPageSizeType`][cyhole.solscan.v2.param.SolscanNFTPageSizeType].\n\n        Returns:\n            List of NFT items of the collection.\n    \"\"\"\n    # check param consistency\n    SolscanNFTPageSizeType.check(page_size)\n    SolscanNFTItemSortType.check(sort_by)\n\n    # set params\n    url = self.base_url + \"nft/collection/items\"\n    api_params = {\n        \"collection\": collection,\n        \"sort_by\": sort_by,\n        \"page\": page,\n        \"page_size\": page_size\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetNFTCollectionItemsResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_transaction_last","title":"_get_transaction_last","text":"<pre><code>_get_transaction_last(\n    sync: Literal[True],\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n    filter: str = SolscanTransactionFilterType.EXCEPT_VOTE.value,\n) -&gt; GetTransactionLastResponse\n</code></pre><pre><code>_get_transaction_last(\n    sync: Literal[False],\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n    filter: str = SolscanTransactionFilterType.EXCEPT_VOTE.value,\n) -&gt; Coroutine[None, None, GetTransactionLastResponse]\n</code></pre> <pre><code>_get_transaction_last(\n    sync: bool,\n    limit: int = SolscanReturnLimitType.LIMIT_10.value,\n    filter: str = SolscanTransactionFilterType.EXCEPT_VOTE.value,\n) -&gt; (\n    GetTransactionLastResponse\n    | Coroutine[None, None, GetTransactionLastResponse]\n)\n</code></pre> <p>This function refers to the GET Transaction Last of V2 API endpoint,  and it is used to get the latest transactions.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>The number of transactions to be returned. The supported types are available on <code>SolscanReturnLimitType</code>.</p> <code>SolscanReturnLimitType.LIMIT_10.value</code> <code>filter</code> <code>str</code> <p>The filter to be used. The supported types are available on <code>SolscanTransactionFilterType</code>.</p> <code>SolscanTransactionFilterType.EXCEPT_VOTE.value</code> <p>Returns:</p> Type Description <code>GetTransactionLastResponse | Coroutine[None, None, GetTransactionLastResponse]</code> <p>List of latest transactions.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_transaction_last(self, sync: bool, limit: int = SolscanReturnLimitType.LIMIT_10.value, filter: str = SolscanTransactionFilterType.EXCEPT_VOTE.value) -&gt; GetTransactionLastResponse | Coroutine[None, None, GetTransactionLastResponse]:\n    \"\"\"\n        This function refers to the GET **[Transaction Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-transaction-last)** of **V2** API endpoint, \n        and it is used to get the latest transactions.\n\n        Parameters:\n            limit: The number of transactions to be returned.\n                The supported types are available on [`SolscanReturnLimitType`][cyhole.solscan.v2.param.SolscanReturnLimitType].\n            filter: The filter to be used.\n                The supported types are available on [`SolscanTransactionFilterType`][cyhole.solscan.v2.param.SolscanTransactionFilterType].\n\n        Returns:\n            List of latest transactions.\n    \"\"\"\n    # check param consistency\n    SolscanReturnLimitType.check(limit)\n    SolscanTransactionFilterType.check(filter)\n\n    # set params\n    url = self.base_url + \"transaction/last\"\n    api_params = {\n        \"limit\": limit,\n        \"filter\": filter\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTransactionLastResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_transaction_actions","title":"_get_transaction_actions","text":"<pre><code>_get_transaction_actions(\n    sync: Literal[True], transaction: str\n) -&gt; GetTransactionActionsResponse\n</code></pre><pre><code>_get_transaction_actions(\n    sync: Literal[False], transaction: str\n) -&gt; Coroutine[None, None, GetTransactionActionsResponse]\n</code></pre> <pre><code>_get_transaction_actions(\n    sync: bool, transaction: str\n) -&gt; (\n    GetTransactionActionsResponse\n    | Coroutine[None, None, GetTransactionActionsResponse]\n)\n</code></pre> <p>This function refers to the GET Transaction Actions of V2 API endpoint,  and it is used to get the actions of a transaction.</p> <p>Parameters:</p> Name Type Description Default <code>transaction</code> <code>str</code> <p>The transaction signature.</p> required <p>Returns:</p> Type Description <code>GetTransactionActionsResponse | Coroutine[None, None, GetTransactionActionsResponse]</code> <p>List of actions of the transaction.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_transaction_actions(self, sync: bool, transaction: str) -&gt; GetTransactionActionsResponse | Coroutine[None, None, GetTransactionActionsResponse]:\n    \"\"\"\n        This function refers to the GET **[Transaction Actions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-transaction-actions)** of **V2** API endpoint, \n        and it is used to get the actions of a transaction.\n\n        Parameters:\n            transaction: The transaction signature.\n\n        Returns:\n            List of actions of the transaction.\n    \"\"\"\n    # set params\n    url = self.base_url + \"transaction/actions\"\n    api_params = {\n        \"tx\": transaction\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetTransactionActionsResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_block_last","title":"_get_block_last","text":"<pre><code>_get_block_last(\n    sync: Literal[True],\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetBlockLastResponse\n</code></pre><pre><code>_get_block_last(\n    sync: Literal[False],\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; Coroutine[None, None, GetBlockLastResponse]\n</code></pre> <pre><code>_get_block_last(\n    sync: bool,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; (\n    GetBlockLastResponse\n    | Coroutine[None, None, GetBlockLastResponse]\n)\n</code></pre> <p>This function refers to the GET Block Last of V2 API endpoint,  and it is used to get the latest blocks.</p> <p>Parameters:</p> Name Type Description Default <code>page_size</code> <code>int</code> <p>The number of blocks to be returned. The supported types are available on <code>SolscanPageSizeType</code>.</p> <code>SolscanPageSizeType.SIZE_10.value</code> <p>Returns:</p> Type Description <code>GetBlockLastResponse | Coroutine[None, None, GetBlockLastResponse]</code> <p>List of latest blocks.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_block_last(self, sync: bool, page_size: int = SolscanPageSizeType.SIZE_10.value) -&gt; GetBlockLastResponse | Coroutine[None, None, GetBlockLastResponse]:\n    \"\"\"\n        This function refers to the GET **[Block Last](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-block-last)** of **V2** API endpoint, \n        and it is used to get the latest blocks.\n\n        Parameters:\n            page_size: The number of blocks to be returned.\n                The supported types are available on [`SolscanPageSizeType`][cyhole.solscan.v2.param.SolscanPageSizeType].\n\n        Returns:\n            List of latest blocks.\n    \"\"\"\n    # check param consistency\n    SolscanPageSizeType.check(page_size)\n\n    # set params\n    url = self.base_url + \"block/last\"\n    api_params = {\n        \"limit\": page_size\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetBlockLastResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_block_transactions","title":"_get_block_transactions","text":"<pre><code>_get_block_transactions(\n    sync: Literal[True],\n    block: int,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; GetBlockTransactionsResponse\n</code></pre><pre><code>_get_block_transactions(\n    sync: Literal[False],\n    block: int,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; Coroutine[None, None, GetBlockTransactionsResponse]\n</code></pre> <pre><code>_get_block_transactions(\n    sync: bool,\n    block: int,\n    page: int = 1,\n    page_size: int = SolscanPageSizeType.SIZE_10.value,\n) -&gt; (\n    GetBlockTransactionsResponse\n    | Coroutine[None, None, GetBlockTransactionsResponse]\n)\n</code></pre> <p>This function refers to the GET Block Transactions of V2 API endpoint,  and it is used to get the transactions of a block.</p> <p>Parameters:</p> Name Type Description Default <code>block</code> <code>int</code> <p>The block number.</p> required <code>page</code> <code>int</code> <p>The page number.</p> <code>1</code> <code>page_size</code> <code>int</code> <p>The number of transactions per page. The supported types are available on <code>SolscanPageSizeType</code>.</p> <code>SolscanPageSizeType.SIZE_10.value</code> <p>Returns:</p> Type Description <code>GetBlockTransactionsResponse | Coroutine[None, None, GetBlockTransactionsResponse]</code> <p>List of transactions of the block.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_block_transactions(self, sync: bool, block: int, page: int = 1, page_size: int = SolscanPageSizeType.SIZE_10.value) -&gt; GetBlockTransactionsResponse | Coroutine[None, None, GetBlockTransactionsResponse]:\n    \"\"\"\n        This function refers to the GET **[Block Transactions](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-block-transactions)** of **V2** API endpoint, \n        and it is used to get the transactions of a block.\n\n        Parameters:\n            block: The block number.\n            page: The page number.\n            page_size: The number of transactions per page.\n                The supported types are available on [`SolscanPageSizeType`][cyhole.solscan.v2.param.SolscanPageSizeType].\n\n        Returns:\n            List of transactions of the block.\n    \"\"\"\n    # check param consistency\n    SolscanPageSizeType.check(page_size)\n\n    # set params\n    url = self.base_url + \"block/transactions\"\n    api_params = {\n        \"block\": block,\n        \"page\": page,\n        \"page_size\": page_size\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetBlockTransactionsResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._get_block_detail","title":"_get_block_detail","text":"<pre><code>_get_block_detail(\n    sync: Literal[True], block: int\n) -&gt; GetBlockDetailResponse\n</code></pre><pre><code>_get_block_detail(\n    sync: Literal[False], block: int\n) -&gt; Coroutine[None, None, GetBlockDetailResponse]\n</code></pre> <pre><code>_get_block_detail(\n    sync: bool, block: int\n) -&gt; (\n    GetBlockDetailResponse\n    | Coroutine[None, None, GetBlockDetailResponse]\n)\n</code></pre> <p>This function refers to the GET Block Detail of V2 API endpoint,  and it is used to get the detail of a block.</p> <p>Parameters:</p> Name Type Description Default <code>block</code> <code>int</code> <p>The block number.</p> required <p>Returns:</p> Type Description <code>GetBlockDetailResponse | Coroutine[None, None, GetBlockDetailResponse]</code> <p>Detail of the block.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _get_block_detail(self, sync: bool, block: int) -&gt; GetBlockDetailResponse | Coroutine[None, None, GetBlockDetailResponse]:\n    \"\"\"\n        This function refers to the GET **[Block Detail](https://pro-api.solscan.io/pro-api-docs/v2.0/reference/v2-block-detail)** of **V2** API endpoint, \n        and it is used to get the detail of a block.\n\n        Parameters:\n            block: The block number.\n\n        Returns:\n            Detail of the block.\n    \"\"\"\n    # set params\n    url = self.base_url + \"block/detail\"\n    api_params = {\n        \"block\": block\n    }\n\n    # execute request\n    return  self.api_return_model(\n        sync = sync,\n        type = RequestType.GET.value,\n        url = url,\n        response_model = GetBlockDetailResponse,\n        params = api_params\n    )\n</code></pre>"},{"location":"interactions/solscan/v2/interaction.html#cyhole.solscan.v2.Solscan._raise","title":"_raise","text":"<pre><code>_raise(exception: HTTPError) -&gt; SolscanException\n</code></pre> <p>Internal function used to raise the manage  the exceptions raised by the API.</p> <p>Parameters:</p> Name Type Description Default <code>exception</code> <code>HTTPError</code> <p>the HTTP error returned from Solscan API.</p> required <p>Raises:</p> Type Description <code>SolscanException</code> <p>general exception raised when an unknown error is found.</p> Source code in <code>src/cyhole/solscan/v2/interaction.py</code> <pre><code>def _raise(self, exception: HTTPError) -&gt; SolscanException:\n    \"\"\"\n        Internal function used to raise the manage \n        the exceptions raised by the API.\n\n        Parameters:\n            exception: the HTTP error returned from Solscan API.\n\n        Raises:\n            SolscanException: general exception raised when an unknown error is found.\n    \"\"\"\n    try:\n        error = SolscanHTTPError(**exception.response.json())\n        return SolscanException(f\"Code: {error.errors.code}, Message: {error.errors.message}\")\n    except Exception:\n        return SolscanException(exception.response.content.decode())\n</code></pre>"},{"location":"interactions/solscan/v2/param.html","title":"Parameters","text":""},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param","title":"cyhole.solscan.v2.param","text":""},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityTransferType","title":"SolscanActivityTransferType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's transfters activities types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityTransferType.SPL_TRANSFER","title":"SPL_TRANSFER  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SPL_TRANSFER = 'ACTIVITY_SPL_TRANSFER'\n</code></pre> <p>Export only SPL transfers.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityTransferType.SPL_BURN","title":"SPL_BURN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SPL_BURN = 'ACTIVITY_SPL_BURN'\n</code></pre> <p>Export only SPL burns.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityTransferType.SPL_MINT","title":"SPL_MINT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SPL_MINT = 'ACTIVITY_SPL_MINT'\n</code></pre> <p>Export only SPL mints.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityTransferType.SPL_CREATE_ACCOUNT","title":"SPL_CREATE_ACCOUNT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SPL_CREATE_ACCOUNT = 'ACTIVITY_SPL_CREATE_ACCOUNT'\n</code></pre> <p>Export only SPL create account.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityNFTType","title":"SolscanActivityNFTType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's NFT activities types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityNFTType.SOLD","title":"SOLD  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SOLD = 'ACTIVITY_NFT_SOLD'\n</code></pre> <p>Export only NFT sold.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityNFTType.LISTING","title":"LISTING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LISTING = 'ACTIVITY_NFT_LISTING'\n</code></pre> <p>Export only NFT listing.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityNFTType.BIDDING","title":"BIDDING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>BIDDING = 'ACTIVITY_NFT_BIDDING'\n</code></pre> <p>Export only NFT bidding.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityNFTType.CANCEL_BID","title":"CANCEL_BID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CANCEL_BID = 'ACTIVITY_NFT_CANCEL_BID'\n</code></pre> <p>Export only NFT cancel bid.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityNFTType.CANCEL_LIST","title":"CANCEL_LIST  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CANCEL_LIST = 'ACTIVITY_NFT_CANCEL_LIST'\n</code></pre> <p>Export only NFT cancel list.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityNFTType.REJECT_BID","title":"REJECT_BID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>REJECT_BID = 'ACTIVITY_NFT_REJECT_BID'\n</code></pre> <p>Export only NFT reject bid.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityNFTType.UPDATE_PRICE","title":"UPDATE_PRICE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>UPDATE_PRICE = 'ACTIVITY_NFT_UPDATE_PRICE'\n</code></pre> <p>Export only NFT update price.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityNFTType.LIST_AUCTION","title":"LIST_AUCTION  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIST_AUCTION = 'ACTIVITY_NFT_LIST_AUCTION'\n</code></pre> <p>Export only NFT list auction.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanPageSizeType","title":"SolscanPageSizeType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's page size types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanPageSizeType.SIZE_10","title":"SIZE_10  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_10 = 10\n</code></pre> <p>Export only 10 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanPageSizeType.SIZE_20","title":"SIZE_20  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_20 = 20\n</code></pre> <p>Export only 20 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanPageSizeType.SIZE_30","title":"SIZE_30  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_30 = 30\n</code></pre> <p>Export only 30 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanPageSizeType.SIZE_40","title":"SIZE_40  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_40 = 40\n</code></pre> <p>Export only 40 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanPageSizeType.SIZE_60","title":"SIZE_60  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_60 = 60\n</code></pre> <p>Export only 60 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanPageSizeType.SIZE_100","title":"SIZE_100  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_100 = 100\n</code></pre> <p>Export only 100 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTPageSizeType","title":"SolscanNFTPageSizeType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's NFT page size types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTPageSizeType.SIZE_12","title":"SIZE_12  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_12 = 12\n</code></pre> <p>Export only 12 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTPageSizeType.SIZE_24","title":"SIZE_24  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_24 = 24\n</code></pre> <p>Export only 24 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTPageSizeType.SIZE_36","title":"SIZE_36  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_36 = 36\n</code></pre> <p>Export only 36 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTCollectionPageSizeType","title":"SolscanNFTCollectionPageSizeType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's NFT collection page size types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTCollectionPageSizeType.SIZE_10","title":"SIZE_10  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_10 = 10\n</code></pre> <p>Export only 10 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTCollectionPageSizeType.SIZE_18","title":"SIZE_18  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_18 = 18\n</code></pre> <p>Export only 18 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTCollectionPageSizeType.SIZE_20","title":"SIZE_20  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_20 = 20\n</code></pre> <p>Export only 20 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTCollectionPageSizeType.SIZE_30","title":"SIZE_30  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_30 = 30\n</code></pre> <p>Export only 30 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTCollectionPageSizeType.SIZE_40","title":"SIZE_40  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SIZE_40 = 40\n</code></pre> <p>Export only 40 items per page.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanReturnLimitType","title":"SolscanReturnLimitType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's return limit types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanReturnLimitType.LIMIT_10","title":"LIMIT_10  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIMIT_10 = 10\n</code></pre> <p>Export only 10 items.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanReturnLimitType.LIMIT_20","title":"LIMIT_20  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIMIT_20 = 20\n</code></pre> <p>Export only 20 items.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanReturnLimitType.LIMIT_30","title":"LIMIT_30  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIMIT_30 = 30\n</code></pre> <p>Export only 30 items.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanReturnLimitType.LIMIT_40","title":"LIMIT_40  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LIMIT_40 = 40\n</code></pre> <p>Export only 40 items.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanFlowType","title":"SolscanFlowType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's flow types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanFlowType.INCOMING","title":"INCOMING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>INCOMING = 'in'\n</code></pre> <p>Export only incoming transactions.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanFlowType.OUTGOING","title":"OUTGOING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>OUTGOING = 'out'\n</code></pre> <p>Export only outgoing transactions.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanAccountType","title":"SolscanAccountType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's account types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanAccountType.NFT","title":"NFT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>NFT = 'nft'\n</code></pre> <p>Export only NFT accounts.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanAccountType.TOKEN","title":"TOKEN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TOKEN = 'token'\n</code></pre> <p>Export only token accounts.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityDefiType","title":"SolscanActivityDefiType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's DeFi activities types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityDefiType.TOKEN_SWAP","title":"TOKEN_SWAP  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TOKEN_SWAP = 'ACTIVITY_TOKEN_SWAP'\n</code></pre> <p>Export only token swaps.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityDefiType.AGG_TOKEN_SWAP","title":"AGG_TOKEN_SWAP  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>AGG_TOKEN_SWAP = 'ACTIVITY_AGG_TOKEN_SWAP'\n</code></pre> <p>Export only aggregated token swaps.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityDefiType.TOKEN_ADD_LIQ","title":"TOKEN_ADD_LIQ  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TOKEN_ADD_LIQ = 'ACTIVITY_TOKEN_ADD_LIQ'\n</code></pre> <p>Export only token add liquidity.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityDefiType.TOKEN_REMOVE_LIQ","title":"TOKEN_REMOVE_LIQ  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>TOKEN_REMOVE_LIQ = 'ACTIVITY_TOKEN_REMOVE_LIQ'\n</code></pre> <p>Export only token remove liquidity.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityDefiType.SPL_TOKEN_STAKE","title":"SPL_TOKEN_STAKE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SPL_TOKEN_STAKE = 'ACTIVITY_SPL_TOKEN_STAKE'\n</code></pre> <p>Export only SPL token stakes.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityDefiType.SPL_TOKEN_UNSTAKE","title":"SPL_TOKEN_UNSTAKE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SPL_TOKEN_UNSTAKE = 'ACTIVITY_SPL_TOKEN_UNSTAKE'\n</code></pre> <p>Export only SPL token unstakes.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanActivityDefiType.SPL_TOKEN_WITHDRAW_STAKE","title":"SPL_TOKEN_WITHDRAW_STAKE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>SPL_TOKEN_WITHDRAW_STAKE = (\n    \"ACTIVITY_SPL_TOKEN_WITHDRAW_STAKE\"\n)\n</code></pre> <p>Export only SPL token withdraw stakes.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanOrderType","title":"SolscanOrderType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's orders.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanOrderType.ASCENDING","title":"ASCENDING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ASCENDING = 'asc'\n</code></pre> <p>Ascending sort order.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanOrderType.DESCENDING","title":"DESCENDING  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DESCENDING = 'desc'\n</code></pre> <p>Descending sort order.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanSortType","title":"SolscanSortType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's sorting types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanSortType.PRICE","title":"PRICE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PRICE = 'price'\n</code></pre> <p>Sort by price.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanSortType.HOLDER","title":"HOLDER  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>HOLDER = 'holder'\n</code></pre> <p>Sort by holder.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanSortType.MARKET_CAP","title":"MARKET_CAP  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>MARKET_CAP = 'market_cap'\n</code></pre> <p>Sort by market cap.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanSortType.CREATED_TIME","title":"CREATED_TIME  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CREATED_TIME = 'created_time'\n</code></pre> <p>Sort by created time.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTSortType","title":"SolscanNFTSortType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's NFT sorting types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTSortType.ITEMS","title":"ITEMS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ITEMS = 'items'\n</code></pre> <p>Sort by items.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTSortType.FLOOR_PRICE","title":"FLOOR_PRICE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>FLOOR_PRICE = 'floor_price'\n</code></pre> <p>Sort by floor price.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTSortType.VOLUMES","title":"VOLUMES  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>VOLUMES = 'volumes'\n</code></pre> <p>Sort by volumes.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTItemSortType","title":"SolscanNFTItemSortType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's NFT item sorting types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTItemSortType.LAST_TRADE","title":"LAST_TRADE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LAST_TRADE = 'last_trade'\n</code></pre> <p>Sort by last trade.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTItemSortType.LISTING_PRICE","title":"LISTING_PRICE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>LISTING_PRICE = 'listing_price'\n</code></pre> <p>Sort by listing price.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTDaysRangeType","title":"SolscanNFTDaysRangeType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's NFT days range types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTDaysRangeType.DAYS_1","title":"DAYS_1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DAYS_1 = 1\n</code></pre> <p>Export only 1 day.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTDaysRangeType.DAYS_7","title":"DAYS_7  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DAYS_7 = 7\n</code></pre> <p>Export only 7 days.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanNFTDaysRangeType.DAYS_30","title":"DAYS_30  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DAYS_30 = 30\n</code></pre> <p>Export only 30 days.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanTransactionFilterType","title":"SolscanTransactionFilterType","text":"<p>               Bases: <code>CyholeParam</code></p> <p>Enum class to get the supported Solscan's transaction filter types.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanTransactionFilterType.ALL","title":"ALL  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>ALL = 'all'\n</code></pre> <p>Export all transactions.</p>"},{"location":"interactions/solscan/v2/param.html#cyhole.solscan.v2.param.SolscanTransactionFilterType.EXCEPT_VOTE","title":"EXCEPT_VOTE  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>EXCEPT_VOTE = 'exceptVote'\n</code></pre> <p>Export all transactions except votes.</p>"},{"location":"interactions/solscan/v2/schema.html","title":"Response Schema","text":""},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema","title":"cyhole.solscan.v2.schema","text":""},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityData","title":"GetTransactionActionsActivityData  <code>module-attribute</code>","text":"<pre><code>GetTransactionActionsActivityData: TypeAlias = (\n    GetTransactionActionsActivityDataSplMintBurn\n    | GetTransactionActionsActivityDataUnitLimit\n    | GetTransactionActionsActivityDataUnitPrice\n    | GetTransactionActionsActivityDataSplCommon\n    | GetTransactionActionsActivityDataTokenSwap\n    | GetTransactionActionsActivityDataCreateAccount\n)\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanBaseResponse","title":"SolscanBaseResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the base response of the Solscan API.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanBaseResponse.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanError","title":"SolscanError","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanError.code","title":"code  <code>instance-attribute</code>","text":"<pre><code>code: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanError.message","title":"message  <code>instance-attribute</code>","text":"<pre><code>message: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanHTTPError","title":"SolscanHTTPError","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Solscan API returns an error schema on failed request  that can be used to investigated the error. This schema  is used to strandardise the HTTPErrors.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanHTTPError.errors","title":"errors  <code>instance-attribute</code>","text":"<pre><code>errors: SolscanError\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam","title":"SolscanTransferParam","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the parameters of the Solscan transfer (Account/Token).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.activity_type","title":"activity_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>activity_type: str | list[str] | None = Field(\n    default=None, serialization_alias=\"activity_type[]\"\n)\n</code></pre> <p>Activity type of the account transfer. The supported types are available on <code>SolscanActivityTransferType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.from_address","title":"from_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>from_address: str | None = Field(\n    default=None, serialization_alias=\"from\"\n)\n</code></pre> <p>From address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.to_address","title":"to_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>to_address: str | None = Field(\n    default=None, serialization_alias=\"to\"\n)\n</code></pre> <p>To address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.amount_range","title":"amount_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_range: tuple[int, int] | None = Field(\n    default=None, serialization_alias=\"amount[]\"\n)\n</code></pre> <p>Amount range to filter for the account transfers (from, to).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.time_range","title":"time_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_range: tuple[datetime, datetime] | None = Field(\n    default=None, serialization_alias=\"block_time[]\"\n)\n</code></pre> <p>Block times to filter by (from, to).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.exclude_amount_zero","title":"exclude_amount_zero  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exclude_amount_zero: bool | None = None\n</code></pre> <p>Exclude transfers with zero amount.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = Field(default=1, ge=1)\n</code></pre> <p>Page number to get the account transfers.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.page_size","title":"page_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page_size: int = Field(\n    default=SolscanPageSizeType.SIZE_10.value\n)\n</code></pre> <p>Number of account transfers per page.  The supported types are available on <code>SolscanPageSizeType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.validate_activity_type","title":"validate_activity_type  <code>classmethod</code>","text":"<pre><code>validate_activity_type(\n    value: list[str] | str | None,\n) -&gt; str | list[str] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"activity_type\")\n@classmethod\ndef validate_activity_type(cls, value: list[str] | str | None) -&gt; str | list[str] | None:\n    if isinstance(value, str):\n        SolscanActivityTransferType.check(value)\n    elif isinstance(value, list):\n        for item in value:\n            SolscanActivityTransferType.check(item)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.validate_page_size","title":"validate_page_size  <code>classmethod</code>","text":"<pre><code>validate_page_size(value: int) -&gt; int\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"page_size\")\n@classmethod\ndef validate_page_size(cls, value: int) -&gt; int:\n    SolscanPageSizeType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.validate_amount_range","title":"validate_amount_range  <code>classmethod</code>","text":"<pre><code>validate_amount_range(\n    value: tuple[int, int] | None,\n) -&gt; tuple[int, int] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"amount_range\")\n@classmethod\ndef validate_amount_range(cls, value: tuple[int, int] | None) -&gt; tuple[int, int] | None:\n    if value and value[0] &gt; value[1]:\n        raise SolscanInvalidAmountRange(f\"Invalid amount range: {value}\")\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.validate_time_range","title":"validate_time_range  <code>classmethod</code>","text":"<pre><code>validate_time_range(\n    value: tuple[datetime, datetime] | None,\n) -&gt; tuple[datetime, datetime] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"time_range\")\n@classmethod\ndef validate_time_range(cls, value: tuple[datetime, datetime] | None) -&gt; tuple[datetime, datetime] | None:\n    if value and value[0] &gt; value[1]:\n        raise SolscanInvalidTimeRange(f\"Invalid time range: {value}\")\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.serialize_time_range","title":"serialize_time_range  <code>classmethod</code>","text":"<pre><code>serialize_time_range(\n    value: tuple[datetime, datetime] | None,\n) -&gt; tuple[int, int] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_serializer(\"time_range\")\n@classmethod\ndef serialize_time_range(cls, value: tuple[datetime, datetime] | None) -&gt; tuple[int, int] | None:\n    if value:\n        return (int(value[0].timestamp()), int(value[1].timestamp()))\n    return\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferParam.serialize_exclude_amount_zero","title":"serialize_exclude_amount_zero  <code>classmethod</code>","text":"<pre><code>serialize_exclude_amount_zero(\n    value: bool | None,\n) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_serializer(\"exclude_amount_zero\")\n@classmethod\ndef serialize_exclude_amount_zero(cls, value: bool | None) -&gt; str | None:\n    if value is not None:\n        return \"true\" if value else \"false\"\n    return\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData","title":"SolscanTransferData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the Solscan transfer (Account/Token).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.block_id","title":"block_id  <code>instance-attribute</code>","text":"<pre><code>block_id: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='trans_id')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.activity_type","title":"activity_type  <code>instance-attribute</code>","text":"<pre><code>activity_type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.from_address","title":"from_address  <code>instance-attribute</code>","text":"<pre><code>from_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.to_address","title":"to_address  <code>instance-attribute</code>","text":"<pre><code>to_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.token_address","title":"token_address  <code>instance-attribute</code>","text":"<pre><code>token_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.token_decimals","title":"token_decimals  <code>instance-attribute</code>","text":"<pre><code>token_decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanTransferData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam","title":"SolscanDefiActivitiesParam","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the parameters of the Solscan defi activities (Account/Token).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.activity_type","title":"activity_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>activity_type: str | list[str] | None = Field(\n    default=None, serialization_alias=\"activity_type[]\"\n)\n</code></pre> <p>Activity type of the account defi activities. The supported types are available on <code>SolscanActivityDefiType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.from_address","title":"from_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>from_address: str | None = Field(\n    default=None, serialization_alias=\"from\"\n)\n</code></pre> <p>From address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.platform_address","title":"platform_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>platform_address: str | list[str] | None = Field(\n    default=None, serialization_alias=\"platform[]\"\n)\n</code></pre> <p>Platform addresses to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.source_address","title":"source_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_address: str | list[str] | None = Field(\n    default=None, serialization_alias=\"source[]\"\n)\n</code></pre> <p>Source addresses to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.time_range","title":"time_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_range: tuple[datetime, datetime] | None = Field(\n    default=None, serialization_alias=\"block_time[]\"\n)\n</code></pre> <p>Block times to filter by (from, to).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = Field(default=1, ge=1)\n</code></pre> <p>Page number to get the account transfers.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.page_size","title":"page_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page_size: int = Field(\n    default=SolscanPageSizeType.SIZE_10.value\n)\n</code></pre> <p>Number of account defi activities per page.  The supported types are available on <code>SolscanPageSizeType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.validate_activity_type","title":"validate_activity_type  <code>classmethod</code>","text":"<pre><code>validate_activity_type(\n    value: list[str] | str | None,\n) -&gt; str | list[str] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"activity_type\")\n@classmethod\ndef validate_activity_type(cls, value: list[str] | str | None) -&gt; str | list[str] | None:\n    if isinstance(value, str):\n        SolscanActivityDefiType.check(value)\n    elif isinstance(value, list):\n        for item in value:\n            SolscanActivityDefiType.check(item)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.validate_page_size","title":"validate_page_size  <code>classmethod</code>","text":"<pre><code>validate_page_size(value: int) -&gt; int\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"page_size\")\n@classmethod\ndef validate_page_size(cls, value: int) -&gt; int:\n    SolscanPageSizeType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.validate_time_range","title":"validate_time_range  <code>classmethod</code>","text":"<pre><code>validate_time_range(\n    value: tuple[datetime, datetime] | None,\n) -&gt; tuple[datetime, datetime] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"time_range\")\n@classmethod\ndef validate_time_range(cls, value: tuple[datetime, datetime] | None) -&gt; tuple[datetime, datetime] | None:\n    if value and value[0] &gt; value[1]:\n        raise SolscanInvalidTimeRange(f\"Invalid time range: {value}\")\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesParam.serialize_time_range","title":"serialize_time_range  <code>classmethod</code>","text":"<pre><code>serialize_time_range(\n    value: tuple[datetime, datetime] | None,\n) -&gt; tuple[int, int] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_serializer(\"time_range\")\n@classmethod\ndef serialize_time_range(cls, value: tuple[datetime, datetime] | None) -&gt; tuple[int, int] | None:\n    if value:\n        return (int(value[0].timestamp()), int(value[1].timestamp()))\n    return\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesChildRoute","title":"SolscanDefiActivitiesChildRoute","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesChildRoute.token_1","title":"token_1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_1: str = Field(alias='token1')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesChildRoute.token_1_decimals","title":"token_1_decimals  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_1_decimals: int = Field(alias='token1_decimals')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesChildRoute.amount_1","title":"amount_1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_1: int = Field(alias='amount1')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesChildRoute.token_2","title":"token_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_2: str | None = Field(default=None, alias='token2')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesChildRoute.token_2_decimals","title":"token_2_decimals  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_2_decimals: int | None = Field(\n    default=None, alias=\"token2_decimals\"\n)\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesChildRoute.amount_2","title":"amount_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_2: int | None = Field(default=None, alias='amount2')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesRoute","title":"SolscanDefiActivitiesRoute","text":"<p>               Bases: <code>SolscanDefiActivitiesChildRoute</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesRoute.child_routes","title":"child_routes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>child_routes: (\n    list[SolscanDefiActivitiesChildRoute] | None\n) = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData","title":"SolscanDefiActivitiesData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the Solscan defi activities (Account/Token).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData.block_id","title":"block_id  <code>instance-attribute</code>","text":"<pre><code>block_id: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='trans_id')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData.activity_type","title":"activity_type  <code>instance-attribute</code>","text":"<pre><code>activity_type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData.from_address","title":"from_address  <code>instance-attribute</code>","text":"<pre><code>from_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData.source_addresses","title":"source_addresses  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_addresses: list[str] = Field(alias='sources')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData.platform_address","title":"platform_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>platform_address: str = Field(alias='platform')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData.routes","title":"routes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>routes: list[SolscanDefiActivitiesRoute] | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.SolscanDefiActivitiesData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransferParam","title":"GetAccountTransferParam","text":"<p>               Bases: <code>SolscanTransferParam</code></p> <p>Model used to identify the parameters of the GET Account Transfer of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransferParam.token_account","title":"token_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_account: str | None = None\n</code></pre> <p>Token account address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransferParam.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str | None = Field(\n    default=None, serialization_alias=\"token\"\n)\n</code></pre> <p>Token address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransferParam.flow_direction","title":"flow_direction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flow_direction: str | None = Field(\n    default=None, serialization_alias=\"flow\"\n)\n</code></pre> <p>Flow direction to filter. The supported types are available on <code>SolscanFlowType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransferParam.validate_flow_direction","title":"validate_flow_direction  <code>classmethod</code>","text":"<pre><code>validate_flow_direction(value: str | None) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"flow_direction\")\n@classmethod\ndef validate_flow_direction(cls, value: str | None) -&gt; str | None:\n    if value:\n        SolscanFlowType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransferData","title":"GetAccountTransferData","text":"<p>               Bases: <code>SolscanTransferData</code></p> <p>Model used to parse the data of the GET Account Transfer of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransferData.flow_type","title":"flow_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flow_type: str = Field(alias='flow')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransferResponse","title":"GetAccountTransferResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Account Transfer of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransferResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountTransferData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTokenNFTAccountData","title":"GetAccountTokenNFTAccountData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Account Token/NFT Account of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTokenNFTAccountData.token_account","title":"token_account  <code>instance-attribute</code>","text":"<pre><code>token_account: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTokenNFTAccountData.token_address","title":"token_address  <code>instance-attribute</code>","text":"<pre><code>token_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTokenNFTAccountData.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTokenNFTAccountData.token_decimals","title":"token_decimals  <code>instance-attribute</code>","text":"<pre><code>token_decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTokenNFTAccountData.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTokenNFTAccountResponse","title":"GetAccountTokenNFTAccountResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Account Token/NFT Account of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTokenNFTAccountResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountTokenNFTAccountData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDefiActivitiesParam","title":"GetAccountDefiActivitiesParam","text":"<p>               Bases: <code>SolscanDefiActivitiesParam</code></p> <p>Model used to identify the parameters of the GET Account Defi Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDefiActivitiesData","title":"GetAccountDefiActivitiesData","text":"<p>               Bases: <code>SolscanDefiActivitiesData</code></p> <p>Model used to parse the data of the GET Account Defi Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDefiActivitiesResponse","title":"GetAccountDefiActivitiesResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Account Defi Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDefiActivitiesResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountDefiActivitiesData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam","title":"GetAccountBalanceChangeActivitiesParam","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the parameters of the GET Account Balance Change Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str | None = Field(\n    default=None, serialization_alias=\"token\"\n)\n</code></pre> <p>Token address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.time_range","title":"time_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_range: tuple[datetime, datetime] | None = Field(\n    default=None, serialization_alias=\"block_time[]\"\n)\n</code></pre> <p>Block times to filter by (from, to).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.remove_spam","title":"remove_spam  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>remove_spam: bool | None = None\n</code></pre> <p>The query parameter to determine if spam activities have been removed or not.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.amount_range","title":"amount_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_range: tuple[int, int] | None = Field(\n    default=None, serialization_alias=\"amount[]\"\n)\n</code></pre> <p>Amount range to filter for the account transfers (from, to).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.flow_direction","title":"flow_direction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flow_direction: str | None = Field(\n    default=None, serialization_alias=\"flow\"\n)\n</code></pre> <p>Flow direction to filter. The supported types are available on <code>SolscanFlowType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = Field(default=1, ge=1)\n</code></pre> <p>Page number to get the account transfers.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.page_size","title":"page_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page_size: int = Field(\n    default=SolscanPageSizeType.SIZE_10.value\n)\n</code></pre> <p>Number of account balance change activities per page.  The supported types are available on <code>SolscanPageSizeType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.validate_flow_direction","title":"validate_flow_direction  <code>classmethod</code>","text":"<pre><code>validate_flow_direction(value: str | None) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"flow_direction\")\n@classmethod\ndef validate_flow_direction(cls, value: str | None) -&gt; str | None:\n    if value:\n        SolscanFlowType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.validate_amount_range","title":"validate_amount_range  <code>classmethod</code>","text":"<pre><code>validate_amount_range(\n    value: tuple[int, int] | None,\n) -&gt; tuple[int, int] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"amount_range\")\n@classmethod\ndef validate_amount_range(cls, value: tuple[int, int] | None) -&gt; tuple[int, int] | None:\n    if value and value[0] &gt; value[1]:\n        raise SolscanInvalidAmountRange(f\"Invalid amount range: {value}\")\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.validate_page_size","title":"validate_page_size  <code>classmethod</code>","text":"<pre><code>validate_page_size(value: int) -&gt; int\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"page_size\")\n@classmethod\ndef validate_page_size(cls, value: int) -&gt; int:\n    SolscanPageSizeType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.validate_time_range","title":"validate_time_range  <code>classmethod</code>","text":"<pre><code>validate_time_range(\n    value: tuple[datetime, datetime] | None,\n) -&gt; tuple[datetime, datetime] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"time_range\")\n@classmethod\ndef validate_time_range(cls, value: tuple[datetime, datetime] | None) -&gt; tuple[datetime, datetime] | None:\n    if value and value[0] &gt; value[1]:\n        raise SolscanInvalidTimeRange(f\"Invalid time range: {value}\")\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.serialize_time_range","title":"serialize_time_range  <code>classmethod</code>","text":"<pre><code>serialize_time_range(\n    value: tuple[datetime, datetime] | None,\n) -&gt; tuple[int, int] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_serializer(\"time_range\")\n@classmethod\ndef serialize_time_range(cls, value: tuple[datetime, datetime] | None) -&gt; tuple[int, int] | None:\n    if value:\n        return (int(value[0].timestamp()), int(value[1].timestamp()))\n    return\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesParam.serialize_remove_spam","title":"serialize_remove_spam  <code>classmethod</code>","text":"<pre><code>serialize_remove_spam(value: bool | None) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_serializer(\"remove_spam\")\n@classmethod\ndef serialize_remove_spam(cls, value: bool | None) -&gt; str | None:\n    if value is not None:\n        return \"true\" if value else \"false\"\n    return\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData","title":"GetAccountBalanceChangeActivitiesData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Account Balance Change Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.block_id","title":"block_id  <code>instance-attribute</code>","text":"<pre><code>block_id: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='trans_id')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.token_address","title":"token_address  <code>instance-attribute</code>","text":"<pre><code>token_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.token_account","title":"token_account  <code>instance-attribute</code>","text":"<pre><code>token_account: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.token_decimals","title":"token_decimals  <code>instance-attribute</code>","text":"<pre><code>token_decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.pre_balance","title":"pre_balance  <code>instance-attribute</code>","text":"<pre><code>pre_balance: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.post_balance","title":"post_balance  <code>instance-attribute</code>","text":"<pre><code>post_balance: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.change_type","title":"change_type  <code>instance-attribute</code>","text":"<pre><code>change_type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesResponse","title":"GetAccountBalanceChangeActivitiesResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Account Balance Change Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountBalanceChangeActivitiesResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountBalanceChangeActivitiesData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsInstruction","title":"GetAccountTransactionsInstruction","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the instructions of the GET Account Transactions of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsInstruction.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsInstruction.program","title":"program  <code>instance-attribute</code>","text":"<pre><code>program: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsInstruction.program_id","title":"program_id  <code>instance-attribute</code>","text":"<pre><code>program_id: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData","title":"GetAccountTransactionsData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Account Transactions of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData.signer","title":"signer  <code>instance-attribute</code>","text":"<pre><code>signer: list[str]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='tx_hash')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData.parsed_instructions","title":"parsed_instructions  <code>instance-attribute</code>","text":"<pre><code>parsed_instructions: list[GetAccountTransactionsInstruction]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData.program_ids","title":"program_ids  <code>instance-attribute</code>","text":"<pre><code>program_ids: list[str]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsResponse","title":"GetAccountTransactionsResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Account Transactions of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountTransactionsResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountTransactionsData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData","title":"GetAccountStakeData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Account Stake of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.role","title":"role  <code>instance-attribute</code>","text":"<pre><code>role: list[str]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.voter","title":"voter  <code>instance-attribute</code>","text":"<pre><code>voter: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.active_stake_amount","title":"active_stake_amount  <code>instance-attribute</code>","text":"<pre><code>active_stake_amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.delegated_stake_amount","title":"delegated_stake_amount  <code>instance-attribute</code>","text":"<pre><code>delegated_stake_amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.sol_balance","title":"sol_balance  <code>instance-attribute</code>","text":"<pre><code>sol_balance: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.total_reward","title":"total_reward  <code>instance-attribute</code>","text":"<pre><code>total_reward: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.stake_account","title":"stake_account  <code>instance-attribute</code>","text":"<pre><code>stake_account: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.activation_epoch","title":"activation_epoch  <code>instance-attribute</code>","text":"<pre><code>activation_epoch: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeData.stake_type","title":"stake_type  <code>instance-attribute</code>","text":"<pre><code>stake_type: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeResponse","title":"GetAccountStakeResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Account Stake of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountStakeResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetAccountStakeData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailData","title":"GetAccountDetailData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Account Detail of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailData.account","title":"account  <code>instance-attribute</code>","text":"<pre><code>account: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailData.lamports","title":"lamports  <code>instance-attribute</code>","text":"<pre><code>lamports: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailData.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailData.executable","title":"executable  <code>instance-attribute</code>","text":"<pre><code>executable: bool\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailData.owner_program","title":"owner_program  <code>instance-attribute</code>","text":"<pre><code>owner_program: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailData.rent_epoch","title":"rent_epoch  <code>instance-attribute</code>","text":"<pre><code>rent_epoch: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailData.is_oncurve","title":"is_oncurve  <code>instance-attribute</code>","text":"<pre><code>is_oncurve: bool\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailResponse","title":"GetAccountDetailResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Account Detail of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountDetailResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetAccountDetailData\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountRewardsExportResponse","title":"GetAccountRewardsExportResponse","text":"<p>               Bases: <code>BaseModel</code></p> <p>This class refers to the response model of GET Account ExportRewards of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetAccountRewardsExportResponse.csv","title":"csv  <code>instance-attribute</code>","text":"<pre><code>csv: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTransferParam","title":"GetTokenTransferParam","text":"<p>               Bases: <code>SolscanTransferParam</code></p> <p>Model used to identify the parameters of the GET Token Transfer of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTransferData","title":"GetTokenTransferData","text":"<p>               Bases: <code>SolscanTransferData</code></p> <p>Model used to parse the data of the GET Token Transfer of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTransferResponse","title":"GetTokenTransferResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Token Transfer of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTransferResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTokenTransferData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenDefiActivitiesParam","title":"GetTokenDefiActivitiesParam","text":"<p>               Bases: <code>SolscanDefiActivitiesParam</code></p> <p>Model used to identify the parameters of the GET Token Defi Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenDefiActivitiesParam.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str | None = Field(\n    default=None, serialization_alias=\"token\"\n)\n</code></pre> <p>Token address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenDefiActivitiesData","title":"GetTokenDefiActivitiesData","text":"<p>               Bases: <code>SolscanDefiActivitiesData</code></p> <p>Model used to parse the data of the GET Token Defi Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenDefiActivitiesResponse","title":"GetTokenDefiActivitiesResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Token Defi Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenDefiActivitiesResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTokenDefiActivitiesData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData","title":"GetTokenMarketsData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Token Markets of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.pool_id","title":"pool_id  <code>instance-attribute</code>","text":"<pre><code>pool_id: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.program_id","title":"program_id  <code>instance-attribute</code>","text":"<pre><code>program_id: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.token_1","title":"token_1  <code>instance-attribute</code>","text":"<pre><code>token_1: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.token_2","title":"token_2  <code>instance-attribute</code>","text":"<pre><code>token_2: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.token_account_1","title":"token_account_1  <code>instance-attribute</code>","text":"<pre><code>token_account_1: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.token_account_2","title":"token_account_2  <code>instance-attribute</code>","text":"<pre><code>token_account_2: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.total_trades_24h","title":"total_trades_24h  <code>instance-attribute</code>","text":"<pre><code>total_trades_24h: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.total_trades_prev_24h","title":"total_trades_prev_24h  <code>instance-attribute</code>","text":"<pre><code>total_trades_prev_24h: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.total_volume_24h","title":"total_volume_24h  <code>instance-attribute</code>","text":"<pre><code>total_volume_24h: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsData.total_volume_prev_24h","title":"total_volume_prev_24h  <code>instance-attribute</code>","text":"<pre><code>total_volume_prev_24h: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsResponse","title":"GetTokenMarketsResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Token Markets of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMarketsResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTokenMarketsData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData","title":"GetTokenListData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Token List of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData.market_cap","title":"market_cap  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>market_cap: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData.price","title":"price  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price: float | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData.price_24h_change","title":"price_24h_change  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>price_24h_change: float | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData.holder","title":"holder  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>holder: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListData.created_time_unix_utc","title":"created_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>created_time_unix_utc: int | None = Field(\n    default=None, alias=\"created_time\"\n)\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListResponse","title":"GetTokenListResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Token List of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenListResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTokenListData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTrendingData","title":"GetTokenTrendingData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Token Trending of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTrendingData.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTrendingData.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTrendingData.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTrendingData.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTrendingResponse","title":"GetTokenTrendingResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Token Trending of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenTrendingResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTokenTrendingData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenPriceData","title":"GetTokenPriceData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Token Price of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenPriceData.date","title":"date  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>date: datetime = Field(strict=True)\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenPriceData.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenPriceData.validate_date","title":"validate_date  <code>classmethod</code>","text":"<pre><code>validate_date(value: int) -&gt; datetime\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"date\", mode = \"before\")\n@classmethod\ndef validate_date(cls, value: int) -&gt; datetime:\n    return datetime.strptime(str(value), \"%Y%m%d\")\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenPriceData.serialize_date","title":"serialize_date  <code>classmethod</code>","text":"<pre><code>serialize_date(value: datetime) -&gt; int\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_serializer(\"date\")\n@classmethod\ndef serialize_date(cls, value: datetime) -&gt; int:\n    return int(value.strftime(\"%Y%m%d\"))\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenPriceResponse","title":"GetTokenPriceResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Token Price of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenPriceResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTokenPriceData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersHolder","title":"GetTokenHoldersHolder","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the holder data of the GET Token Holders of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersHolder.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersHolder.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersHolder.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersHolder.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersHolder.rank","title":"rank  <code>instance-attribute</code>","text":"<pre><code>rank: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersData","title":"GetTokenHoldersData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Token Holders of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersData.total_holders","title":"total_holders  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_holders: int = Field(alias='total')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersData.holders","title":"holders  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>holders: list[GetTokenHoldersHolder] = Field(alias='items')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersResponse","title":"GetTokenHoldersResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Token Holders of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenHoldersResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTokenHoldersData\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData","title":"GetTokenMetaData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the meta data of the GET Token Meta of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.icon","title":"icon  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>icon: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: float\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.volume_24h","title":"volume_24h  <code>instance-attribute</code>","text":"<pre><code>volume_24h: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.market_cap","title":"market_cap  <code>instance-attribute</code>","text":"<pre><code>market_cap: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.market_cap_rank","title":"market_cap_rank  <code>instance-attribute</code>","text":"<pre><code>market_cap_rank: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.price_change_24h","title":"price_change_24h  <code>instance-attribute</code>","text":"<pre><code>price_change_24h: float\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.supply","title":"supply  <code>instance-attribute</code>","text":"<pre><code>supply: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaData.holder","title":"holder  <code>instance-attribute</code>","text":"<pre><code>holder: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaResponse","title":"GetTokenMetaResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Token Meta of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTokenMetaResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTokenMetaData\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaAttribute","title":"GetNFTNewsNftInfoMetaAttribute","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaAttribute.trait_type","title":"trait_type  <code>instance-attribute</code>","text":"<pre><code>trait_type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaAttribute.value","title":"value  <code>instance-attribute</code>","text":"<pre><code>value: str | int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaCollection","title":"GetNFTNewsNftInfoMetaCollection","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaCollection.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaCollection.family","title":"family  <code>instance-attribute</code>","text":"<pre><code>family: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaFile","title":"GetNFTNewsNftInfoMetaFile","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaFile.uri","title":"uri  <code>instance-attribute</code>","text":"<pre><code>uri: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaFile.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaCreator","title":"GetNFTNewsNftInfoMetaCreator","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaCreator.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaCreator.share","title":"share  <code>instance-attribute</code>","text":"<pre><code>share: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaProperty","title":"GetNFTNewsNftInfoMetaProperty","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaProperty.files","title":"files  <code>instance-attribute</code>","text":"<pre><code>files: list[GetNFTNewsNftInfoMetaFile]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaProperty.category","title":"category  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>category: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMetaProperty.creators","title":"creators  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>creators: list[GetNFTNewsNftInfoMetaCreator] | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta","title":"GetNFTNewsNftInfoMeta","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.symbol","title":"symbol  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>symbol: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.description","title":"description  <code>instance-attribute</code>","text":"<pre><code>description: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.seller_fee_basis_points","title":"seller_fee_basis_points  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>seller_fee_basis_points: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.image","title":"image  <code>instance-attribute</code>","text":"<pre><code>image: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.animation_url","title":"animation_url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>animation_url: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.external_url","title":"external_url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>external_url: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.attributes","title":"attributes  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attributes: list[GetNFTNewsNftInfoMetaAttribute] | None = (\n    None\n)\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.tags","title":"tags  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>tags: list[str] | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.collection","title":"collection  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>collection: GetNFTNewsNftInfoMetaCollection | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.properties","title":"properties  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>properties: GetNFTNewsNftInfoMetaProperty | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.edition","title":"edition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>edition: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.creators","title":"creators  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>creators: list[GetNFTNewsNftInfoMetaCreator] | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.compiler","title":"compiler  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>compiler: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.dna","title":"dna  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>dna: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.date","title":"date  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>date: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoMeta.process_video","title":"process_video  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>process_video: str | None = Field(\n    default=None, alias=\"processVideo\"\n)\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoDataCreator","title":"GetNFTNewsNftInfoDataCreator","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoDataCreator.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoDataCreator.verified","title":"verified  <code>instance-attribute</code>","text":"<pre><code>verified: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoDataCreator.share","title":"share  <code>instance-attribute</code>","text":"<pre><code>share: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoData","title":"GetNFTNewsNftInfoData","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoData.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoData.symbol","title":"symbol  <code>instance-attribute</code>","text":"<pre><code>symbol: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoData.uri","title":"uri  <code>instance-attribute</code>","text":"<pre><code>uri: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoData.seller_fee_basis_points","title":"seller_fee_basis_points  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>seller_fee_basis_points: int = Field(\n    alias=\"sellerFeeBasisPoints\"\n)\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoData.creators","title":"creators  <code>instance-attribute</code>","text":"<pre><code>creators: list[GetNFTNewsNftInfoDataCreator]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfoData.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfo","title":"GetNFTNewsNftInfo","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfo.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfo.created_time_unix_utc","title":"created_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>created_time_unix_utc: int = Field(alias='createdTime')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfo.mint_transaction","title":"mint_transaction  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mint_transaction: str = Field(alias='mintTx')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfo.collection","title":"collection  <code>instance-attribute</code>","text":"<pre><code>collection: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfo.collection_id","title":"collection_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>collection_id: str = Field(alias='collectionId')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfo.collection_key","title":"collection_key  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>collection_key: str | None = Field(\n    default=None, alias=\"collectionKey\"\n)\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfo.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetNFTNewsNftInfoData\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNftInfo.meta","title":"meta  <code>instance-attribute</code>","text":"<pre><code>meta: GetNFTNewsNftInfoMeta\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNft","title":"GetNFTNewsNft","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsNft.info","title":"info  <code>instance-attribute</code>","text":"<pre><code>info: GetNFTNewsNftInfo\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsData","title":"GetNFTNewsData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET NFT News of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsData.nfts","title":"nfts  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>nfts: list[GetNFTNewsNft] = Field(alias='data')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsData.total","title":"total  <code>instance-attribute</code>","text":"<pre><code>total: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsResponse","title":"GetNFTNewsResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET NFT News of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTNewsResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetNFTNewsData\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam","title":"GetNFTActivitiesParam","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the parameters of the GET NFT Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.from_address","title":"from_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>from_address: str | None = Field(\n    default=None, serialization_alias=\"from\"\n)\n</code></pre> <p>From address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.to_address","title":"to_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>to_address: str | None = Field(\n    default=None, serialization_alias=\"to\"\n)\n</code></pre> <p>To address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.source_address","title":"source_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_address: str | list[str] | None = Field(\n    default=None, serialization_alias=\"source[]\"\n)\n</code></pre> <p>Source addresses to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.activity_type","title":"activity_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>activity_type: str | list[str] | None = Field(\n    default=None, serialization_alias=\"activity_type[]\"\n)\n</code></pre> <p>Activity type of the NFT activities. The supported types are available on <code>SolscanActivityNFTType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.token_address","title":"token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_address: str | None = Field(\n    default=None, serialization_alias=\"token\"\n)\n</code></pre> <p>Token address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.collection_address","title":"collection_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>collection_address: str | None = Field(\n    default=None, serialization_alias=\"collection\"\n)\n</code></pre> <p>Collection address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.currency_token_address","title":"currency_token_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>currency_token_address: str | None = Field(\n    default=None, serialization_alias=\"currency_token\"\n)\n</code></pre> <p>Currency token address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.amount_range","title":"amount_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_range: tuple[int, int] | None = Field(\n    default=None, serialization_alias=\"price[]\"\n)\n</code></pre> <p>Amount range to filter for the NFT activities (from, to).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.time_range","title":"time_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>time_range: tuple[datetime, datetime] | None = Field(\n    default=None, serialization_alias=\"block_time[]\"\n)\n</code></pre> <p>Block times to filter by (from, to).</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = Field(default=1, ge=1)\n</code></pre> <p>Page number to get the NFT activities.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.page_size","title":"page_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page_size: int = Field(\n    default=SolscanPageSizeType.SIZE_10.value\n)\n</code></pre> <p>Number of NFT activities per page.  The supported types are available on <code>SolscanPageSizeType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.validate_activity_type","title":"validate_activity_type  <code>classmethod</code>","text":"<pre><code>validate_activity_type(\n    value: list[str] | str | None,\n) -&gt; str | list[str] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"activity_type\")\n@classmethod\ndef validate_activity_type(cls, value: list[str] | str | None) -&gt; str | list[str] | None:\n    if isinstance(value, str):\n        SolscanActivityNFTType.check(value)\n    elif isinstance(value, list):\n        for item in value:\n            SolscanActivityNFTType.check(item)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.validate_amount_range","title":"validate_amount_range  <code>classmethod</code>","text":"<pre><code>validate_amount_range(\n    value: tuple[int, int] | None,\n) -&gt; tuple[int, int] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"amount_range\")\n@classmethod\ndef validate_amount_range(cls, value: tuple[int, int] | None) -&gt; tuple[int, int] | None:\n    if value and value[0] &gt; value[1]:\n        raise SolscanInvalidAmountRange(f\"Invalid amount range: {value}\")\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.validate_page_size","title":"validate_page_size  <code>classmethod</code>","text":"<pre><code>validate_page_size(value: int) -&gt; int\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"page_size\")\n@classmethod\ndef validate_page_size(cls, value: int) -&gt; int:\n    SolscanPageSizeType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.validate_time_range","title":"validate_time_range  <code>classmethod</code>","text":"<pre><code>validate_time_range(\n    value: tuple[datetime, datetime] | None,\n) -&gt; tuple[datetime, datetime] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"time_range\")\n@classmethod\ndef validate_time_range(cls, value: tuple[datetime, datetime] | None) -&gt; tuple[datetime, datetime] | None:\n    if value and value[0] &gt; value[1]:\n        raise SolscanInvalidTimeRange(f\"Invalid time range: {value}\")\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesParam.serialize_time_range","title":"serialize_time_range  <code>classmethod</code>","text":"<pre><code>serialize_time_range(\n    value: tuple[datetime, datetime] | None,\n) -&gt; tuple[int, int] | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_serializer(\"time_range\")\n@classmethod\ndef serialize_time_range(cls, value: tuple[datetime, datetime] | None) -&gt; tuple[int, int] | None:\n    if value:\n        return (int(value[0].timestamp()), int(value[1].timestamp()))\n    return\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData","title":"GetNFTActivitiesData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET NFT Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.block_id","title":"block_id  <code>instance-attribute</code>","text":"<pre><code>block_id: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='trans_id')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.activity_type","title":"activity_type  <code>instance-attribute</code>","text":"<pre><code>activity_type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.from_address","title":"from_address  <code>instance-attribute</code>","text":"<pre><code>from_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.to_address","title":"to_address  <code>instance-attribute</code>","text":"<pre><code>to_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.token_address","title":"token_address  <code>instance-attribute</code>","text":"<pre><code>token_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.marketplace_address","title":"marketplace_address  <code>instance-attribute</code>","text":"<pre><code>marketplace_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.collection_address","title":"collection_address  <code>instance-attribute</code>","text":"<pre><code>collection_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.currency_token","title":"currency_token  <code>instance-attribute</code>","text":"<pre><code>currency_token: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.currency_decimals","title":"currency_decimals  <code>instance-attribute</code>","text":"<pre><code>currency_decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesResponse","title":"GetNFTActivitiesResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET NFT Activities of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTActivitiesResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetNFTActivitiesData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam","title":"GetNFTCollectionListsParam","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to identify the parameters of the GET NFT Collection Lists of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.days_range","title":"days_range  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>days_range: int | None = Field(\n    default=None, serialization_alias=\"range\"\n)\n</code></pre> <p>Number of days to filter the NFT collection lists. The supported types are available on <code>SolscanNFTDaysRangeType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.order_by","title":"order_by  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>order_by: str | None = Field(\n    default=None, serialization_alias=\"sort_order\"\n)\n</code></pre> <p>Order by to filter the NFT collection lists. The supported types are available on <code>SolscanOrderType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.sort_by","title":"sort_by  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sort_by: str | None = Field(\n    default=None, serialization_alias=\"sort_by\"\n)\n</code></pre> <p>Sort by to filter the NFT collection lists. The supported types are available on <code>SolscanNFTSortType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = Field(default=1, ge=1)\n</code></pre> <p>Page number to get the NFT collection lists.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.page_size","title":"page_size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page_size: int = Field(\n    default=SolscanPageSizeType.SIZE_10.value\n)\n</code></pre> <p>Number of NFT activities per page.  The supported types are available on <code>SolscanNFTCollectionPageSizeType</code>.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.collection_address","title":"collection_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>collection_address: str | None = Field(\n    default=None, serialization_alias=\"collection\"\n)\n</code></pre> <p>Collection address to filter.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.validate_days_range","title":"validate_days_range  <code>classmethod</code>","text":"<pre><code>validate_days_range(value: int | None) -&gt; int | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"days_range\")\n@classmethod\ndef validate_days_range(cls, value: int | None) -&gt; int | None:\n    if value:\n        SolscanNFTDaysRangeType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.validate_order_by","title":"validate_order_by  <code>classmethod</code>","text":"<pre><code>validate_order_by(value: str | None) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"order_by\")\n@classmethod\ndef validate_order_by(cls, value: str | None) -&gt; str | None:\n    if value:\n        SolscanOrderType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.validate_sort_by","title":"validate_sort_by  <code>classmethod</code>","text":"<pre><code>validate_sort_by(value: str | None) -&gt; str | None\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"sort_by\")\n@classmethod\ndef validate_sort_by(cls, value: str | None) -&gt; str | None:\n    if value:\n        SolscanNFTSortType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsParam.validate_page_size","title":"validate_page_size  <code>classmethod</code>","text":"<pre><code>validate_page_size(value: int) -&gt; int\n</code></pre> Source code in <code>src/cyhole/solscan/v2/schema.py</code> <pre><code>@field_validator(\"page_size\")\n@classmethod\ndef validate_page_size(cls, value: int) -&gt; int:\n    SolscanNFTCollectionPageSizeType.check(value)\n    return value\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsData","title":"GetNFTCollectionListsData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET NFT Collection Lists of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsData.collection_address","title":"collection_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>collection_address: str = Field(alias='collection_id')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsData.floor_price","title":"floor_price  <code>instance-attribute</code>","text":"<pre><code>floor_price: float\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsData.items","title":"items  <code>instance-attribute</code>","text":"<pre><code>items: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsData.marketplaces","title":"marketplaces  <code>instance-attribute</code>","text":"<pre><code>marketplaces: list[str]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsData.volumes","title":"volumes  <code>instance-attribute</code>","text":"<pre><code>volumes: float\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsData.volumes_change_24h","title":"volumes_change_24h  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>volumes_change_24h: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsResponse","title":"GetNFTCollectionListsResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET NFT Collection Lists of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionListsResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetNFTCollectionListsData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemData","title":"GetNFTCollectionItemData","text":"<p>               Bases: <code>GetNFTNewsNftInfoData</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemMeta","title":"GetNFTCollectionItemMeta","text":"<p>               Bases: <code>GetNFTNewsNftInfoMeta</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemInfo","title":"GetNFTCollectionItemInfo","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemInfo.address","title":"address  <code>instance-attribute</code>","text":"<pre><code>address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemInfo.token_name","title":"token_name  <code>instance-attribute</code>","text":"<pre><code>token_name: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemInfo.token_symbol","title":"token_symbol  <code>instance-attribute</code>","text":"<pre><code>token_symbol: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemInfo.collection_id","title":"collection_id  <code>instance-attribute</code>","text":"<pre><code>collection_id: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemInfo.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetNFTCollectionItemData\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemInfo.meta","title":"meta  <code>instance-attribute</code>","text":"<pre><code>meta: GetNFTCollectionItemMeta\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats","title":"GetNFTCollectionItemStats","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats.trade_time_unix_utc","title":"trade_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>trade_time_unix_utc: int = Field(alias='trade_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats.signature","title":"signature  <code>instance-attribute</code>","text":"<pre><code>signature: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats.market_id","title":"market_id  <code>instance-attribute</code>","text":"<pre><code>market_id: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats.price","title":"price  <code>instance-attribute</code>","text":"<pre><code>price: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats.currency_token","title":"currency_token  <code>instance-attribute</code>","text":"<pre><code>currency_token: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats.currency_decimals","title":"currency_decimals  <code>instance-attribute</code>","text":"<pre><code>currency_decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats.seller","title":"seller  <code>instance-attribute</code>","text":"<pre><code>seller: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemStats.buyer","title":"buyer  <code>instance-attribute</code>","text":"<pre><code>buyer: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemsData","title":"GetNFTCollectionItemsData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET NFT Collection Items of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemsData.info","title":"info  <code>instance-attribute</code>","text":"<pre><code>info: GetNFTCollectionItemInfo\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemsData.stats","title":"stats  <code>instance-attribute</code>","text":"<pre><code>stats: GetNFTCollectionItemStats\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemsResponse","title":"GetNFTCollectionItemsResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET NFT Collection Items of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetNFTCollectionItemsResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetNFTCollectionItemsData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastInstruction","title":"GetTransactionLastInstruction","text":"<p>               Bases: <code>GetAccountTransactionsInstruction</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData","title":"GetTransactionLastData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Transaction Last of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData.signer","title":"signer  <code>instance-attribute</code>","text":"<pre><code>signer: list[str]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='tx_hash')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData.parsed_instructions","title":"parsed_instructions  <code>instance-attribute</code>","text":"<pre><code>parsed_instructions: list[GetTransactionLastInstruction]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData.program_ids","title":"program_ids  <code>instance-attribute</code>","text":"<pre><code>program_ids: list[str]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastResponse","title":"GetTransactionLastResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Transaction Last of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionLastResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetTransactionLastData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer","title":"GetTransactionActionsTransfer","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.source_owner","title":"source_owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source_owner: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.source","title":"source  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>source: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.destination_owner","title":"destination_owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination_owner: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.destination","title":"destination  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.transfer_type","title":"transfer_type  <code>instance-attribute</code>","text":"<pre><code>transfer_type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.token_address","title":"token_address  <code>instance-attribute</code>","text":"<pre><code>token_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.decimals","title":"decimals  <code>instance-attribute</code>","text":"<pre><code>decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.amount_str","title":"amount_str  <code>instance-attribute</code>","text":"<pre><code>amount_str: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.program_id","title":"program_id  <code>instance-attribute</code>","text":"<pre><code>program_id: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.outer_program_id","title":"outer_program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>outer_program_id: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.ins_index","title":"ins_index  <code>instance-attribute</code>","text":"<pre><code>ins_index: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsTransfer.outer_ins_index","title":"outer_ins_index  <code>instance-attribute</code>","text":"<pre><code>outer_ins_index: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter","title":"GetTransactionActionsActivityDataRouter","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter.amm_program_id","title":"amm_program_id  <code>instance-attribute</code>","text":"<pre><code>amm_program_id: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter.token_1","title":"token_1  <code>instance-attribute</code>","text":"<pre><code>token_1: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter.token_decimal_1","title":"token_decimal_1  <code>instance-attribute</code>","text":"<pre><code>token_decimal_1: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter.amount_1","title":"amount_1  <code>instance-attribute</code>","text":"<pre><code>amount_1: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter.amount_1_str","title":"amount_1_str  <code>instance-attribute</code>","text":"<pre><code>amount_1_str: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter.token_2","title":"token_2  <code>instance-attribute</code>","text":"<pre><code>token_2: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter.token_decimal_2","title":"token_decimal_2  <code>instance-attribute</code>","text":"<pre><code>token_decimal_2: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter.amount_2","title":"amount_2  <code>instance-attribute</code>","text":"<pre><code>amount_2: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataRouter.amount_2_str","title":"amount_2_str  <code>instance-attribute</code>","text":"<pre><code>amount_2_str: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataUnitLimit","title":"GetTransactionActionsActivityDataUnitLimit","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataUnitLimit.compute_unit_limit","title":"compute_unit_limit  <code>instance-attribute</code>","text":"<pre><code>compute_unit_limit: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataUnitPrice","title":"GetTransactionActionsActivityDataUnitPrice","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataUnitPrice.compute_unit_price_by_microlamport","title":"compute_unit_price_by_microlamport  <code>instance-attribute</code>","text":"<pre><code>compute_unit_price_by_microlamport: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon","title":"GetTransactionActionsActivityDataSplCommon","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.amount","title":"amount  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.amount_str","title":"amount_str  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amount_str: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.token_address","title":"token_address  <code>instance-attribute</code>","text":"<pre><code>token_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.token_decimals","title":"token_decimals  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_decimals: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.closed_account","title":"closed_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>closed_account: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.authority","title":"authority  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>authority: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.destination","title":"destination  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>destination: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.sync_account","title":"sync_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>sync_account: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.init_account","title":"init_account  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>init_account: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplCommon.owner","title":"owner  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>owner: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplMintBurn","title":"GetTransactionActionsActivityDataSplMintBurn","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplMintBurn.account","title":"account  <code>instance-attribute</code>","text":"<pre><code>account: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplMintBurn.authority","title":"authority  <code>instance-attribute</code>","text":"<pre><code>authority: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplMintBurn.token_address","title":"token_address  <code>instance-attribute</code>","text":"<pre><code>token_address: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplMintBurn.token_decimals","title":"token_decimals  <code>instance-attribute</code>","text":"<pre><code>token_decimals: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplMintBurn.amount","title":"amount  <code>instance-attribute</code>","text":"<pre><code>amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataSplMintBurn.amount_str","title":"amount_str  <code>instance-attribute</code>","text":"<pre><code>amount_str: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap","title":"GetTransactionActionsActivityDataTokenSwap","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.amm_id","title":"amm_id  <code>instance-attribute</code>","text":"<pre><code>amm_id: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.amm_authoriy","title":"amm_authoriy  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>amm_authoriy: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.account","title":"account  <code>instance-attribute</code>","text":"<pre><code>account: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.token_1","title":"token_1  <code>instance-attribute</code>","text":"<pre><code>token_1: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.token_2","title":"token_2  <code>instance-attribute</code>","text":"<pre><code>token_2: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.amount_1","title":"amount_1  <code>instance-attribute</code>","text":"<pre><code>amount_1: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.amount_1_str","title":"amount_1_str  <code>instance-attribute</code>","text":"<pre><code>amount_1_str: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.amount_2","title":"amount_2  <code>instance-attribute</code>","text":"<pre><code>amount_2: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.amount_2_str","title":"amount_2_str  <code>instance-attribute</code>","text":"<pre><code>amount_2_str: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.token_decimal_1","title":"token_decimal_1  <code>instance-attribute</code>","text":"<pre><code>token_decimal_1: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.token_decimal_2","title":"token_decimal_2  <code>instance-attribute</code>","text":"<pre><code>token_decimal_2: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.token_account_1_1","title":"token_account_1_1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_account_1_1: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.token_account_1_2","title":"token_account_1_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_account_1_2: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.token_account_2_1","title":"token_account_2_1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_account_2_1: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.token_account_2_2","title":"token_account_2_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token_account_2_2: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.owner_1","title":"owner_1  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>owner_1: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.owner_2","title":"owner_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>owner_2: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.rounters","title":"rounters  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>rounters: (\n    list[GetTransactionActionsActivityDataRouter] | None\n) = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.exact_amount_2","title":"exact_amount_2  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exact_amount_2: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.exact_amount_2_str","title":"exact_amount_2_str  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>exact_amount_2_str: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.platform_fee","title":"platform_fee  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>platform_fee: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataTokenSwap.slippage","title":"slippage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>slippage: int | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataCreateAccount","title":"GetTransactionActionsActivityDataCreateAccount","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataCreateAccount.new_account","title":"new_account  <code>instance-attribute</code>","text":"<pre><code>new_account: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataCreateAccount.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataCreateAccount.transfer_amount","title":"transfer_amount  <code>instance-attribute</code>","text":"<pre><code>transfer_amount: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataCreateAccount.transfer_amount_str","title":"transfer_amount_str  <code>instance-attribute</code>","text":"<pre><code>transfer_amount_str: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataCreateAccount.program_owner","title":"program_owner  <code>instance-attribute</code>","text":"<pre><code>program_owner: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataCreateAccount.space","title":"space  <code>instance-attribute</code>","text":"<pre><code>space: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivityDataCreateAccount.common_type","title":"common_type  <code>instance-attribute</code>","text":"<pre><code>common_type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivity","title":"GetTransactionActionsActivity","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivity.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivity.activity_type","title":"activity_type  <code>instance-attribute</code>","text":"<pre><code>activity_type: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivity.program_id","title":"program_id  <code>instance-attribute</code>","text":"<pre><code>program_id: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivity.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTransactionActionsActivityData\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivity.ins_index","title":"ins_index  <code>instance-attribute</code>","text":"<pre><code>ins_index: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivity.outer_ins_index","title":"outer_ins_index  <code>instance-attribute</code>","text":"<pre><code>outer_ins_index: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsActivity.outer_program_id","title":"outer_program_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>outer_program_id: str | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsData","title":"GetTransactionActionsData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Transaction Actions of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsData.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='tx_hash')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsData.block_id","title":"block_id  <code>instance-attribute</code>","text":"<pre><code>block_id: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsData.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsData.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsData.transfers","title":"transfers  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transfers: list[GetTransactionActionsTransfer] | None = None\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsData.activities","title":"activities  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>activities: list[GetTransactionActionsActivity] | None = (\n    None\n)\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsResponse","title":"GetTransactionActionsResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Transaction Actions of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetTransactionActionsResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetTransactionActionsData\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData","title":"GetBlockLastData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Block Last of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData.block_id","title":"block_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_id: str = Field(alias='blockhash')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData.fee_rewards","title":"fee_rewards  <code>instance-attribute</code>","text":"<pre><code>fee_rewards: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData.transactions_count","title":"transactions_count  <code>instance-attribute</code>","text":"<pre><code>transactions_count: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData.current_slot","title":"current_slot  <code>instance-attribute</code>","text":"<pre><code>current_slot: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData.block_height","title":"block_height  <code>instance-attribute</code>","text":"<pre><code>block_height: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData.parent_slot","title":"parent_slot  <code>instance-attribute</code>","text":"<pre><code>parent_slot: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastData.previous_block_id","title":"previous_block_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>previous_block_id: str = Field(alias='previous_block_hash')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastResponse","title":"GetBlockLastResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Block Last of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockLastResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[GetBlockLastData]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsInstruction","title":"GetBlockTransactionsInstruction","text":"<p>               Bases: <code>GetAccountTransactionsInstruction</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction","title":"GetBlockTransactionsDataTransaction","text":"<p>               Bases: <code>BaseModel</code></p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction.slot","title":"slot  <code>instance-attribute</code>","text":"<pre><code>slot: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction.fee","title":"fee  <code>instance-attribute</code>","text":"<pre><code>fee: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction.signer","title":"signer  <code>instance-attribute</code>","text":"<pre><code>signer: list[str]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction.transaction_id","title":"transaction_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transaction_id: str = Field(alias='tx_hash')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction.parsed_instructions","title":"parsed_instructions  <code>instance-attribute</code>","text":"<pre><code>parsed_instructions: list[GetBlockTransactionsInstruction]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction.program_ids","title":"program_ids  <code>instance-attribute</code>","text":"<pre><code>program_ids: list[str]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsDataTransaction.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsData","title":"GetBlockTransactionsData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Block Transactions of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsData.total","title":"total  <code>instance-attribute</code>","text":"<pre><code>total: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsData.transactions","title":"transactions  <code>instance-attribute</code>","text":"<pre><code>transactions: list[GetBlockTransactionsDataTransaction]\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsResponse","title":"GetBlockTransactionsResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Block Transactions of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockTransactionsResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetBlockTransactionsData\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailData","title":"GetBlockDetailData","text":"<p>               Bases: <code>BaseModel</code></p> <p>Model used to parse the data of the GET Block Detail of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailData.block_id","title":"block_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_id: str = Field(alias='blockhash')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailData.fee_rewards","title":"fee_rewards  <code>instance-attribute</code>","text":"<pre><code>fee_rewards: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailData.transactions_count","title":"transactions_count  <code>instance-attribute</code>","text":"<pre><code>transactions_count: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailData.block_height","title":"block_height  <code>instance-attribute</code>","text":"<pre><code>block_height: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailData.block_time_unix_utc","title":"block_time_unix_utc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>block_time_unix_utc: int = Field(alias='block_time')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailData.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: datetime\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailData.parent_slot","title":"parent_slot  <code>instance-attribute</code>","text":"<pre><code>parent_slot: int\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailData.previous_block_id","title":"previous_block_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>previous_block_id: str = Field(alias='previous_block_hash')\n</code></pre>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailResponse","title":"GetBlockDetailResponse","text":"<p>               Bases: <code>SolscanBaseResponse</code></p> <p>Model used to parse the response of the GET Block Detail of V2 API endpoint.</p>"},{"location":"interactions/solscan/v2/schema.html#cyhole.solscan.v2.schema.GetBlockDetailResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: GetBlockDetailData\n</code></pre>"}]}